%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 19.1.0%%For: (Roark McColgan) ()%%Title: (sponsored.ai)%%CreationDate: 2015/11/06 12:21 PM%%Canvassize: 16383%%BoundingBox: 0 -882 1381 655%%HiResBoundingBox: 0 -881.0001 1380.2002 655%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%RGBCustomColor: 0 0.588242 0.839218 (HP_Blue RGB_\(2995 U\))%%CMYKProcessColor: 1 1 1 1 ([Registration])%%RGBProcessColor: 0 0.588242 0.839218 (HP_Blue RGB_\(2995 U\) 1)%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 66.5 -6.45632 66.5 -6.45632%AI3_TileBox: -330.25 -312.3981 461.75 299.6019%AI3_DocumentPreview: None%AI5_ArtSize: 131.5 26.8835%AI5_RulerUnits: 1%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -1021 617 1 2268 1262 18 0 0 46 133 0 0%AI5_OpenViewLayers: 7%%PageOrigin:-266 -406%AI7_GridSettings: 10 10 10 10 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 116 128 8%%BeginData: 2012 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFF%FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFF%FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDD9FFA8FFA8FF7E85AFAF84AFFD69%FFA8A87DA8A87E5AFF595AA8FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFF%FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFF%FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFF%FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD8CFFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPathBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPathBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPathBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPathBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligraphicBrushTool.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Vectorized Object) (Image Tracing) (Vectorize.aip)%AI8_PluginGroupInfo(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)%AI8_PluginGroupInfo(Adobe Pattern Editor Plugin Group) (Adobe Pattern Editor Plugin Group) (SwatchLibs.aip)%AI8_PluginGroupInfo(Adobe Line Plugin Group) (Line artwork) (IdeaFileFormat.aip)%AI8_PluginGroupInfo(Adobe Sketch Plugin Group) (Sketch artwork) (IdeaFileFormat.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Deform.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (PlanetX.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathfinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp4 Bn%AI5_BeginGradient: (Fade to Black)(Fade to Black) 0 2 Bd[0.7138930.6534980.6687270.7671170.1137250.1137250.1058824 %_Br[0.713893 0.653498 0.668727 0.767117 0.113725 0.113725 0.105882 2 50 100 %_BS%_0.713893 0.653498 0.668727 0.767117 0.113725 0.113725 0.105882 2 50 100 Bs0.713893 0.653498 0.668727 0.767117 0.113725 0.113725 0.105882 2 25 0 %_BS%_0.713893 0.653498 0.668727 0.767117 0.113725 0.113725 0.105882 2 25 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Green, Yellow, Orange)(Green, Yellow, Orange) 0 7 Bd[<090A0B0C0D0E0F1011121314161718191B1C1D1E1F2021212223242526272828292A2B2C2D2E2F3031323233343536373838393A3B3C3D3E3F40414143444445464748494A4B4C4E4F5051525354555758595A5B5C5D5F606162646667686A6B6D6E70717273757677787A7C7D7E808183848687898B8C8D8E90919294959698999B9C9E9FA0A1A2A4A5A7A8A9ABACADAEAFB0B2B3B4B5B6B7B8B9BABBBCBCBDBEBFC0C1C2C2C3C3C4C5C6C6C7C8C8C9CACBCBCCCCCDCECECFCFD0D0D1D1D1D2D2D3D3D3D4D4D4D5D5D5D5D6D6D6D6D7D7D7D7D7D8D7D8D8D8D8D8D8D9D8D9D9D9D9D9D9D9D9D9D9D9D9D9><C8C8C6C6C6C6C5C5C5C5C3C3C3C3C1C1C0C0BEBEBEBDBCBBBBB9B9B9B8B7B6B6B6B4B3B3B2B0AFAFAEADACACABA9A9A8A6A5A5A4A2A2A1A19E9E9D9C9A9999989594949391908F8D8C8B8A888787868484838280807F7E7C7B7A7A78777674737372706F6F6E6C6B6B6A68686766656463636161605E5E5D5D5B5B5B5A59585857555555545352525250504F4F4E4D4D4C4B4B4B49494948474746464545454443434342414141403F3F3F3E3D3D3D3C3C3B3B3A3A393938383838363636353535343333333332313131303030302E2E2E2E2D2D2D2B2B2B2B2A2A2A2A2929292927272727262626262424>1<0101010101010102020202020303030303040404050506060707080809090A0A0B0B0C0D0D0E0F1010111212131415151617171818191A1B1B1C1D1D1E1E1F2020212223232324242526272727282929292A2A2A2A2B2B2B2B2C2C2C2C2D2C2D2D2D2D2D2D2D2D2D2D2E2D2D2D2E2D2D2D2D2C2C2C2B2B2B2C2A2A2B2B2A2A29292828282827272727262625262424242323232321212121201F1F1F1E1E1E1E1C1C1C1C1B1B1B1A1A1A1A1818181817171716151515151414141412121211111111101010100E0E0E0E0D0D0D0D0C0C0C0C0B0B0B0A0A0A0A090909090909090908080808070707070606><EAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><5B5B5C5C5C5C5D5D5D5D5E5E5E5E5F5F5F5F60606060616161626262626363636364646464656565656666666667676768686868696969696A6A6A6A6B6B6B6B6C6C6C6C6D6D6D6E6E6E6E6F6F6F6F70707070717171717272727273737374747474757575757676767677777777787878787979797A7A7A7A7B7B7B7B7C7C7C7C7D7D7D7D7E7E7E7E7F7F7F7F80808081818181828282828383838384848484858585858686868787878788888888898989898A8A8A8A8B8B8B8B8C8C8C8D8D8D8D8E8E8E8E8F8F8F8F909090909191919192929293939393949494949595959596969696979797979898><0C0C0C0D0D0D0D0D0E0E0E0E0E0F0F0F0F0F1010101010111111111112121212121213131313131414141414151515151516161616161717171717181818181819191919191A1A1A1A1A1B1B1B1B1B1C1C1C1C1C1D1D1D1D1D1D1E1E1E1E1E1F1F1F1F1F2020202020212121212122222222222323232323242424242425252525252626262626272727272728282828282929292929292A2A2A2A2A2B2B2B2B2B2C2C2C2C2C2D2D2D2D2D2E2E2E2E2E2F2F2F2F2F3030303030313131313132323232323333333333343434343434353535353536363636363737373737383838383839393939393A3A3A>4 %_Br<040404040505050404040505040404040504040404040504040404050505050505050506050505050405050505050506060505050504050505050404050505050504050505050504050505050505060606060606050606060606050606060606060707070707070808070707070708080707070708070707070708080808080809090909><1618191B1B1D1E202123242527282A2B2C2D2F303133343637393A3C3D3E404143454647484A4B4D4E4F515254555657595A5C5D5E60616263656668696A6C6D6F70717374767778797B7D7E808182848587888A8C8D8F909193949597989A9B9D9E9FA1A2A3A4A5A7A8AAABACADAFB0B1B3B4B6B7B8B9BABCBDBEBFC0C1C2C3C4C6C7C8><FEFEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010101><FFFFFFFFFEFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9F9F8F8F8F8F8F8F7F7F7F7F7F7F7F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F4F3F3F3F3F3F3F2F2F2F2F2F2F2F1F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEEEEEDEDEDEDEDEDECECECECECECEBEBEBEBEBEBEAEAEAEA><DEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B><00000000000001010101010101010101010202020202020202020202030303030303030303030304040404040404040404040505050505050505050505060606060606060606060707070707070707070707080808080808080808080809090909090909090909090A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C>4 %_Br<D9D9D8D8D8D8D7D7D7D7D6D6D6D6D6D6D5D5D5D5D4D4D4D3D3D2D2D2D1D1D1D0D0D0D0CFCFCECECDCDCCCCCBCBCBCAC9C9C9C8C8C7C6C6C6C5C4C4C3C3C2C2C1C0C0BFBFBEBDBCBCBBBABAB9B9B8B7B6B6B5B4B4B3B2B1B1B0AFAEAEADACACABAAA9A9A8A7A6A5A5A4A3A2A2A1A09F9E9D9D9C9B9A999897969594939291908F8E8D8C8B8A888787868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A6968676664636261605F5E5D5C5B5A5958575655545352514F4E4D4C4B4A4948474645444341403F3E3D3C3B39383736343332302F2E2D2C2B2A2928272524232221201F1D1C1B1A1918171514131211100F0D0C0B0A0908060504><242423232323222222222020211F1F1F1F1E1E1E1E1C1D1D1B1B1B1B1A1A1A19191919181818181717171616161615151515141414131313131212121311121210111111101010110F10100E0F0F0F0E0E0F0D0E0E0E0D0D0D0E0D0D0D0C0C0D0D0C0C0C0D0B0C0C0B0B0B0C0A0B0B0B0A0B0B0A0A0A0A0909090A0909090809090A09090A09090A0A09090A0A09090A09090A0A090A0A0B0A0A0B0A0A0A0B0A0A0B0B0A0B0B0A0B0C0C0B0C0C0D0C0C0D0C0C0D0D0C0D0D0C0D0D0E0D0D0E0E0D0E0F0E0E0F0F0E0F10100F10110F10111110111111101111101011121111121211121212121313121313121313141313141413141413141515141516161516><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFE><06060606060605050505040404040404040404040404040403030303030303030303030202020202020202020202020202020202020101020201010101010101010101010101010101010101010101010101000101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><9898999999999A9A9A9A9B9B9B9C9C9C9C9D9D9D9D9E9E9E9F9F9F9FA0A0A0A1A1A1A1A2A2A2A2A3A3A3A4A4A4A4A5A5A5A5A6A6A6A7A7A7A7A8A8A8A8A9A9A9AAAAAAAAABABABABACACACADADADADAEAEAEAFAFAFAFB0B0B0B0B1B1B1B2B2B2B2B3B3B3B3B4B4B4B5B5B5B5B6B6B6B6B7B7B7B8B8B8B8B9B9B9B9BABABABBBBBBBBBCBCBCBDBDBDBDBEBEBEBEBFBFBFC0C0C0C0C1C1C1C1C2C2C2C3C3C3C3C4C4C4C4C5C5C5C6C6C6C6C7C7C7C7C8C8C8C9C9C9C9CACACACBCBCBCBCCCCCCCCCDCDCDCECECECECFCFCFCFD0D0D0D1D1D1D1D2D2D2D2D3D3D3D4D4D4D4D5D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9D9DADADADADBDBDBDCDCDCDCDDDDDDDDDEDE><3A3A3A39393939383838383737373737363636363535353535343434343333333332323232323131313130303030302F2F2F2F2E2E2E2E2D2D2D2D2D2C2C2C2C2B2B2B2B2B2A2A2A2A29292929282828282827272727262626262625252525242424242323232323222222222121212121202020201F1F1F1F1E1E1E1E1E1D1D1D1D1C1C1C1C1C1B1B1B1B1A1A1A1A19191919191818181817171717171616161615151515141414141413131313121212121211111111101010100F0F0F0F0F0E0E0E0E0D0D0D0D0D0C0C0C0C0B0B0B0B0A0A0A0A0A090909090808080808070707070606060605050505050404040403030303030202020201010101000000>4 %_Br<090A0B0C0D0E0F1011121314161718191B1C1D1E1F2021212223242526272828292A2B2C2D2E2F3031323233343536373838393A3B3C3D3E3F40414143444445464748494A4B4C4E4F5051525354555758595A5B5C5D5F606162646667686A6B6D6E70717273757677787A7C7D7E808183848687898B8C8D8E90919294959698999B9C9E9FA0A1A2A4A5A7A8A9ABACADAEAFB0B2B3B4B5B6B7B8B9BABBBCBCBDBEBFC0C1C2C2C3C3C4C5C6C6C7C8C8C9CACBCBCCCCCDCECECFCFD0D0D1D1D1D2D2D3D3D3D4D4D4D5D5D5D5D6D6D6D6D7D7D7D7D7D8D7D8D8D8D8D8D8D9D8D9D9D9D9D9D9D9D9D9D9D9D9D9><C8C8C6C6C6C6C5C5C5C5C3C3C3C3C1C1C0C0BEBEBEBDBCBBBBB9B9B9B8B7B6B6B6B4B3B3B2B0AFAFAEADACACABA9A9A8A6A5A5A4A2A2A1A19E9E9D9C9A9999989594949391908F8D8C8B8A888787868484838280807F7E7C7B7A7A78777674737372706F6F6E6C6B6B6A68686766656463636161605E5E5D5D5B5B5B5A59585857555555545352525250504F4F4E4D4D4C4B4B4B49494948474746464545454443434342414141403F3F3F3E3D3D3D3C3C3B3B3A3A393938383838363636353535343333333332313131303030302E2E2E2E2D2D2D2B2B2B2B2A2A2A2A2929292927272727262626262424>1<0101010101010102020202020303030303040404050506060707080809090A0A0B0B0C0D0D0E0F1010111212131415151617171818191A1B1B1C1D1D1E1E1F2020212223232324242526272727282929292A2A2A2A2B2B2B2B2C2C2C2C2D2C2D2D2D2D2D2D2D2D2D2D2E2D2D2D2E2D2D2D2D2C2C2C2B2B2B2C2A2A2B2B2A2A29292828282827272727262625262424242323232321212121201F1F1F1E1E1E1E1C1C1C1C1B1B1B1A1A1A1A1818181817171716151515151414141412121211111111101010100E0E0E0E0D0D0D0D0C0C0C0C0B0B0B0A0A0A0A090909090909090908080808070707070606><EAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><5B5B5C5C5C5C5D5D5D5D5E5E5E5E5F5F5F5F60606060616161626262626363636364646464656565656666666667676768686868696969696A6A6A6A6B6B6B6B6C6C6C6C6D6D6D6E6E6E6E6F6F6F6F70707070717171717272727273737374747474757575757676767677777777787878787979797A7A7A7A7B7B7B7B7C7C7C7C7D7D7D7D7E7E7E7E7F7F7F7F80808081818181828282828383838384848484858585858686868787878788888888898989898A8A8A8A8B8B8B8B8C8C8C8D8D8D8D8E8E8E8E8F8F8F8F909090909191919192929293939393949494949595959596969696979797979898><0C0C0C0D0D0D0D0D0E0E0E0E0E0F0F0F0F0F1010101010111111111112121212121213131313131414141414151515151516161616161717171717181818181819191919191A1A1A1A1A1B1B1B1B1B1C1C1C1C1C1D1D1D1D1D1D1E1E1E1E1E1F1F1F1F1F2020202020212121212122222222222323232323242424242425252525252626262626272727272728282828282929292929292A2A2A2A2A2B2B2B2B2B2C2C2C2C2C2D2D2D2D2D2E2E2E2E2E2F2F2F2F2F3030303030313131313132323232323333333333343434343434353535353536363636363737373737383838383839393939393A3A3A>4 %_Br<040404040505050404040505040404040504040404040504040404050505050505050506050505050405050505050506060505050504050505050404050505050504050505050504050505050505060606060606050606060606050606060606060707070707070808070707070708080707070708070707070708080808080809090909><1618191B1B1D1E202123242527282A2B2C2D2F303133343637393A3C3D3E404143454647484A4B4D4E4F515254555657595A5C5D5E60616263656668696A6C6D6F70717374767778797B7D7E808182848587888A8C8D8F909193949597989A9B9D9E9FA1A2A3A4A5A7A8AAABACADAFB0B1B3B4B6B7B8B9BABCBDBEBFC0C1C2C3C4C6C7C8><FEFEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010101><FFFFFFFFFEFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9F9F8F8F8F8F8F8F7F7F7F7F7F7F7F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F4F3F3F3F3F3F3F2F2F2F2F2F2F2F1F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEEEEEDEDEDEDEDEDECECECECECECEBEBEBEBEBEBEAEAEAEA><DEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B><00000000000001010101010101010101010202020202020202020202030303030303030303030304040404040404040404040505050505050505050505060606060606060606060707070707070707070707080808080808080808080809090909090909090909090A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C>4 %_Br<D9D9D8D8D8D8D7D7D7D7D6D6D6D6D6D6D5D5D5D5D4D4D4D4D3D3D2D2D2D1D1D1D0D0D0D0CFCFCECECDCDCDCCCCCBCBCBCAC9C9C9C8C8C8C7C6C6C6C5C5C4C4C3C3C2C2C1C1C0C0BFBFBEBDBDBCBCBBBABABAB9B9B8B7B6B6B6B5B5B4B4B3B2B1B1B0B0AFAEAEADADACACABABAAA9A9A8A8A7A6A5A5A5A4A3A3A2A2A1A1A09F9E9E9E9D9C9C9B9A99999897979695949493929291908F8F8E8D8D8C8B8B8A8988878787868585848383828181807F7F7E7D7D7C7B7B7A79797878777676757474737372717170706F6E6E6D6D6C6B6B6A6A696968676766666465636262616160605F5F5E5D5D5C5C5B5B5A5A59595858575756565555545353525250514F4F4F4E4E4D4D4C4C4B4B4A4A49494848474746464645454444434341414240403F3F3E3E3E3D3D3C3C3B3B3B39393838383737363636343433333332323230302F2F2F2E2E2E2D2D2D2C2C2B2B2B2A2A2A29292928282827272725252524242424232323222222212121212020201F1F1F1F1D1D1D1C1C1C1C1B1B1B1B1A1A1A1A1919191918181818171717171515151515141414141313131313121212121211111111111010101010100E0E0F0F0F0D0D0D0D0D0D0D0C0C0C0C0C0C0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0909090909090909090808080808080808080808060606060606060607070707050505050505050505050505050505050505050504040404040404040404040404040404040404040404040404040404><242423232323222222222021211F1F1F1F1E1E1E1E1C1D1D1D1B1B1B1B1A1A1A1919191918181818171717171616161615151515141414141313131313121212131112121210111111101010100F0F1010100E0F0F0F0E0E0E0F0F0E0E0E0E0D0D0D0D0E0D0D0D0D0C0C0D0D0D0C0C0C0C0D0B0C0C0C0B0B0B0B0C0A0A0B0B0B0A0A0B0B0B0A0A0A0A0A090909090A0809090909080909090A080909090A0A09090A0A0A0909090A0A0A0909090A0A0909090A0A0A090A0A0A0A0B0A0A0A0B0B0B0A0A0A0A0B0B0A0A0A0B0B0B0A0A0B0B0B0B0A0B0B0C0C0C0B0B0C0C0C0C0D0B0C0C0C0D0D0D0C0C0C0D0D0D0C0C0C0D0D0D0D0C0C0D0D0D0E0E0E0D0D0D0D0E0E0E0D0D0D0E0E0F0F0F0E0E0E0F0F0F0F0F0E0E0F0F101010100E0F0F10101111110F0F1010111111111110101011111111111110101010111111111112101010101011111112121111111111111212121212111111111212121212121212121212121213131313131312121212121313131313131314141212131313131313131314141414131313131313131313141414141414141413131313131314141414141414141414141515131313141414141414141515151515151515151515151516141414141414141515151515151515151616161616161616161616161616161616161615151515151515151515151515151515151515151515151516161616161616161616161616161616161616161616161616161616><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE><06060606060605050505040404040404040404040404040404030303030303030303030302020202020202020202020202020202020202020101020202010101010101010101010101010101010101010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><000102030405060708090A0B0C0D0E0F10111213141516161718191A1B1C1D1E1F20212223242526262728292A2B2C2D2E2F3030313233343536373838393A3B3C3D3E3F3F40414243444545464748494A4A4B4C4D4E4F4F5051525353545556575858595A5B5C5C5D5E5F5F606162636364656666676869696A6B6C6C6D6E6F6F707172727374757576777778797A7A7B7C7C7D7E7F7F8081818283838485858687878889898A8B8B8C8D8D8E8F8F9091919293939495959696979898999A9A9B9B9C9D9D9E9E9FA0A0A1A1A2A3A3A4A4A5A5A6A7A7A8A8A9A9AAABABACACADADAEAEAFB0B0B1B1B2B2B3B3B4B4B5B5B6B6B7B7B8B8B9BABABBBBBCBCBDBDBDBEBEBFBFC0C0C1C1C2C2C3C3C4C4C5C5C6C6C6C7C7C8C8C9C9CACACACBCBCCCCCDCDCDCECECFCFD0D0D0D1D1D2D2D2D3D3D4D4D4D5D5D6D6D6D7D7D7D8D8D9D9D9DADADADBDBDBDCDCDDDDDDDEDEDEDFDFDFE0E0E0E1E1E1E2E2E2E3E3E3E3E4E4E4E5E5E5E6E6E6E6E7E7E7E8E8E8E8E9E9E9EAEAEAEAEBEBEBEBECECECECEDEDEDEDEEEEEEEEEFEFEFEFF0F0F0F0F0F1F1F1F1F2F2F2F2F2F3F3F3F3F3F4F4F4F4F4F5F5F5F5F5F5F6F6F6F6F6F7F7F7F7F7F7F7F8F8F8F8F8F8F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF><9898999999999A9A9A9A9B9B9B9C9C9C9C9D9D9D9D9E9E9E9E9F9F9F9FA0A0A0A1A1A1A1A2A2A2A2A3A3A3A3A4A4A4A4A5A5A5A5A6A6A6A6A7A7A7A7A7A8A8A8A8A9A9A9A9AAAAAAAAABABABABACACACACACADADADADAEAEAEAEAEAFAFAFAFB0B0B0B0B0B1B1B1B1B2B2B2B2B2B3B3B3B3B3B4B4B4B4B5B5B5B5B5B6B6B6B6B6B7B7B7B7B7B8B8B8B8B8B9B9B9B9B9BABABABABABBBBBBBBBBBCBCBCBCBCBCBDBDBDBDBDBEBEBEBEBEBEBFBFBFBFBFC0C0C0C0C0C0C1C1C1C1C1C1C2C2C2C2C2C2C3C3C3C3C3C3C4C4C4C4C4C4C5C5C5C5C5C5C6C6C6C6C6C6C7C7C7C7C7C7C7C8C8C8C8C8C8C8C9C9C9C9C9C9CACACACACACACACBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCDCDCDCDCDCDCDCDCECECECECECECECECFCFCFCFCFCFCFCFD0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D2D2D2D2D2D2D2D2D2D3D3D3D3D3D3D3D3D3D3D4D4D4D4D4D4D4D4D4D4D5D5D5D5D5D5D5D5D5D5D5D6D6D6D6D6D6D6D6D6D6D6D7D7D7D7D7D7D7D7D7D7D7D7D8D8D8D8D8D8D8D8D8D8D8D8D8D8D9D9D9D9D9D9D9D9D9D9D9D9D9D9DADADADADADADADADADADADADADADADADADBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEFF><3A3A3A393939393838383838373737373636363636353535353434343434333333333332323232313131313130303030302F2F2F2F2F2E2E2E2E2E2D2D2D2D2D2C2C2C2C2C2B2B2B2B2B2A2A2A2A2A29292929292928282828282727272727262626262626252525252524242424242423232323232322222222222221212121212020202020201F1F1F1F1F1F1F1E1E1E1E1E1E1D1D1D1D1D1D1C1C1C1C1C1C1B1B1B1B1B1B1B1A1A1A1A1A1A1A191919191919191818181818181817171717171717161616161616161515151515151514141414141414141313131313131313121212121212121211111111111111111110101010101010100F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0909090909090909090909080808080808080808080808080707070707070707070707070706060606060606060606060606060605050505050505050505050505050505040404040404040404040404040404040404030303030303030303030303030303030303030302020202020202020202020202020202020202020202020202020201010101010101010101010101010101010101010101010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000FF>4 %_Br[0.851499 0.141756 1 0.024598 0 0.596078 0.227451 2 50 100 %_BS%_0.851499 0.141756 1 0.024598 0 0.596078 0.227451 2 50 100 Bs0.033661 0.783383 1 0.002319 0.917647 0.356863 0.047059 2 50 80.117 %_BS%_0.033661 0.783383 1 0.002319 0.917647 0.356863 0.047059 2 50 80.117 Bs0.017639 0.086519 0.99588 0 1 0.870588 0 2 50 64 %_BS%_0.017639 0.086519 0.99588 0 1 0.870588 0 2 50 64 Bs0.851499 0.141756 1 0.024598 0 0.596078 0.227451 2 50 47 %_BS%_0.851499 0.141756 1 0.024598 0 0.596078 0.227451 2 50 47 Bs0.033661 0.783383 1 0.002319 0.917647 0.356863 0.047059 2 50 30 %_BS%_0.033661 0.783383 1 0.002319 0.917647 0.356863 0.047059 2 50 30 Bs0.017639 0.086519 0.99588 0 1 0.870588 0 2 50 15 %_BS%_0.017639 0.086519 0.99588 0 1 0.870588 0 2 50 15 Bs0.851499 0.141756 1 0.024598 0 0.596078 0.227451 2 28 0 %_BS%_0.851499 0.141756 1 0.024598 0 0.596078 0.227451 2 28 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Purple Radial)(Purple Radial) 1 2 Bd[<00000001010203030304040404050605060607080809090A0B0B0B0B0C0C0D0E0E0F0F10101112121312131314151516161717181819191A1B1B1C1C1D1D1F1F20202121222223232424252526262727282829292A2A2B2B2C2B2D2D2E2D2F2F302F31303232333334343536363737383839393B3B3B3D3D3E3E3F3F404040414143434444444545464648484849494A4A4A4C4B4D4D4D4E4E4F4F4F505050515152525354545455555756575858585959595B5B5B5C5C5C5D5D5F5F5F60606062616261636363646464666666676767696969696A6A6A6C6C6C6D6D6D6D6F6F6F7070707172727272747474747575757577777777787878787A7A7A7A7B7B7B7B7D7D7D7D7D7F7F7F7F8080808080828282828283848483838585858585858787878787878888888888888A8A8A8A8A8A8B8B8B8B8C8C8C8D8D8D8D8D8D8D8D8F8F8F8F8F8F8F8F8F9090909090909090909292929292929292929292929494949494949494949494949494949494949595959595959595959595959595959595959595959595><000000010203030405060708090A0B0C0D0E10111212131415161718191A1B1C1D1E1F202021222324252628292A2B2A2C2D2E2F30313232333435373839393B3C3D3E3F3F404143444544464648494A4A4B4C4E4E4E4F515253525455565657585A5A5B5C5D5D5E5F61606263646465676868696B6B6C6E6F6F70717172747575767877797A7A7B7D7D7E808081828283858486868789888A8B8B8D8E8E908F91929294939597969898999B9B9C9C9E9E9FA0A0A2A2A3A3A4A4A6A6A7A9A9AAAAACACADADAFAFB0B0B1B1B3B3B4B4B5B5B6B6B8B8B9B9BABABCBBBDBDBDBEBEC0BFC1C1C2C2C2C3C3C5C5C6C6C6C7C7C9C8C8CACACBCBCBCDCDCECECECFCFCFD1D1D2D2D2D3D3D3D5D5D4D6D6D6D7D7D7D8D8D8DADADADBDBDBDBDCDCDCDEDEDEDEDFDFDFE0E0E0E0E1E1E1E1E2E3E3E3E4E4E4E4E5E5E5E5E5E6E6E6E6E6E7E7E7E7E7E8E8E8E8E8EAEAEAEAEAEAEBEBEBEBEBEBEBECECECECECECECECEDEDEDEDEDEDEDEDEDEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0><0000000000000000000000000000010001010001000201010101010101010101010101010201020102010101010101010201010101010101020102010201030203020202030203020302030303020202030303030204030302010302030204030302020302020303020203020302040302030304030304030303040303030203030203030202020302020302030302030302030204030204030204030204030303030303030403030404030404030404040403030304030304040305040304030302040303040403050404030504040505040405050404050504060505050606050506060505070606050706060607070606080707060608070706080807070708080707070808080707090808080709090808080709090808080A0A0A0A09090B0B0A0A0A09090B0B0A0A0B0B0A0C0C0C0B0B0B0B0C0C0C0C0C0B0B0B0E0E0D0D0D0D0D0C0C0E0E0E0D0D0D0D0D0D0C0E0E0F0F0F0F0E0E0E0E0E0E0E100F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E101010101010101010101010101010101010101010101010><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101010101010101010101010101010101010101010101010101010101010101010101010101><FFFEFEFDFDFCFBFBFAF9F9F8F8F7F6F6F5F5F4F3F3F2F2F1F0F0EFEFEEEEEDECECEBEBEAEAE9E8E8E7E7E6E6E5E4E4E3E3E2E2E1E1E0E0DFDEDEDDDDDCDCDBDBDADAD9D9D8D8D7D7D6D6D5D5D4D4D3D3D2D2D1D1D0D0CFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C5C5C5C4C4C3C3C2C2C1C1C0C0C0BFBFBEBEBDBDBDBCBCBBBBBABABAB9B9B8B8B7B7B7B6B6B5B5B5B4B4B3B3B3B2B2B1B1B1B0B0B0AFAFAEAEAEADADADACACABABABAAAAAAA9A9A9A8A8A8A7A7A7A6A6A5A5A5A4A4A4A3A3A3A3A2A2A2A1A1A1A0A0A09F9F9F9E9E9E9E9D9D9D9C9C9C9B9B9B9B9A9A9A99999999989898989797979796969696959595959494949493939393929292929191919191909090908F8F8F8F8F8E8E8E8E8E8D8D8D8D8D8C8C8C8C8C8C8B8B8B8B8B8B8A8A8A8A8A8A89898989898988888888888888878787878787878786868686868686868685858585858585858584848484848484848484848483838383838383838383838383838383838382828282828282828282828282828282828282828282FF><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDDDCDBDAD9D8D7D6D5D4D3D3D2D1D0CFCECDCCCCCBCAC9C8C7C6C6C5C4C3C2C1C1C0BFBEBDBCBCBBBAB9B8B7B7B6B5B4B3B3B2B1B0AFAFAEADACACABAAA9A9A8A7A6A6A5A4A3A3A2A1A0A09F9E9D9D9C9B9A9A99989897969695949393929191908F8F8E8D8D8C8B8B8A898988878786868584848382828180807F7F7E7D7D7C7C7B7A7A7979787777767675757473737272717170706F6F6E6D6D6C6C6B6B6A6A69696868676766666565646463636262616160605F5F5E5E5E5D5D5C5C5B5B5A5A5A595958585757575656555555545453535352525151515050504F4F4E4E4E4D4D4D4C4C4C4B4B4B4A4A4A4949494848484747474746464645454545444444434343434242424241414141404040403F3F3F3F3F3E3E3E3E3E3D3D3D3D3D3C3C3C3C3C3B3B3B3B3B3B3A3A3A3A3A3A3A393939393939393938383838383838383837373737373737373737373737373636363636363636363636363636363636FF><FFFEFEFDFDFCFCFBFAFAF9F9F8F8F7F7F6F5F5F4F4F3F3F2F2F1F1F0EFEFEEEEEDEDECECEBEBEAEAE9E9E8E8E7E7E6E6E5E5E4E4E3E3E2E2E1E1E0E0DFDFDEDEDDDDDCDCDBDBDADAD9D9D8D8D7D7D7D6D6D5D5D4D4D3D3D2D2D2D1D1D0D0CFCFCECECECDCDCCCCCBCBCBCACAC9C9C8C8C8C7C7C6C6C5C5C5C4C4C3C3C3C2C2C1C1C1C0C0C0BFBFBEBEBEBDBDBCBCBCBBBBBBBABAB9B9B9B8B8B8B7B7B7B6B6B6B5B5B5B4B4B3B3B3B2B2B2B1B1B1B0B0B0AFAFAFAFAEAEAEADADADACACACABABABABAAAAAAA9A9A9A8A8A8A8A7A7A7A6A6A6A6A5A5A5A5A4A4A4A3A3A3A3A2A2A2A2A1A1A1A1A0A0A0A09F9F9F9F9E9E9E9E9D9D9D9D9D9C9C9C9C9B9B9B9B9B9A9A9A9A9A99999999999898989898979797979797969696969695959595959594949494949494939393939393939292929292929291919191919191919090909090909090908F8F8F8F8F8F8F8F8F8F8E8E8E8E8E8E8E8E8E8E8E8E8E8D8D8D8D8D8D8D8D8D8D8D8D8D8D8D8D8D8D8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8CFF>4 %_Br[0 0 0 0 1 1 1 2 30 63.1579 %_BS%_0 0 0 0 1 1 1 2 30 63.1579 Bs0.584832 0.941009 0.061372 0.003052 0.509804 0.211765 0.54902 2 50 100 %_BS%_0.584832 0.941009 0.061372 0.003052 0.509804 0.211765 0.54902 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Super Soft Black Vignette)(Super Soft Black Vignette) 1 3 Bd[0.7107190.6673230.6717480.8106660.0862750.0784310.0705884 %_Br0.7107190.6673230.6717480.8106660.0862750.0784310.0705884 %_Br[0.710719 0.667323 0.671748 0.810666 0.086275 0.078431 0.070588 2 56.0729 57.4443 %_BS%_0.710719 0.667323 0.671748 0.810666 0.086275 0.078431 0.070588 2 56.0729 57.4443 Bs0.710719 0.667323 0.671748 0.810666 0.086275 0.078431 0.070588 2 31.8603 79.7713 %_BS%_0.710719 0.667323 0.671748 0.810666 0.086275 0.078431 0.070588 2 31.8603 79.7713 Bs0.710719 0.667323 0.671748 0.810666 0.086275 0.078431 0.070588 2 50 100 %_BS%_0.710719 0.667323 0.671748 0.810666 0.086275 0.078431 0.070588 2 50 100 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Laguna)(Laguna) 0 3.1914 84.1563 84.791 [%AI3_Tile(0 O 0 R 0.04477 1 1 0.005188 0.890196 0.023529 0.07451 Xa 0.04477 1 1 0.005188 0.890196 0.023529 0.07451 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 10 M []0 d0 XR42.0781 30.3906 m12.2227 12.8779 9.0488 12.4082 V7.2871 14.1709 0 30.3906 Y13.1641 20.5186 29.1484 23.3389 42.0781 30.3906 Cf42.0781 57.5908 m12.2227 40.0781 9.0488 39.6094 V7.2871 41.3711 0 57.5908 Y13.1641 47.7178 29.1484 50.5391 42.0781 57.5908 Cf42.0781 84.791 m12.2227 67.2773 9.0488 66.8096 V7.2871 68.5703 0 84.791 Y13.1641 74.918 29.1484 77.7402 42.0781 84.791 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.584832 0.941009 0.061372 0.003052 0.509804 0.211765 0.54902 Xa 0.584832 0.941009 0.061372 0.003052 0.509804 0.211765 0.54902 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 10 M []0 d0 XR84.1563 30.3906 m54.3008 12.8779 51.127 12.4082 V49.3652 14.1709 42.0781 30.3906 Y55.2422 20.5186 71.2266 23.3389 84.1563 30.3906 Cf84.1563 57.5908 m54.3008 40.0781 51.127 39.6094 V49.3652 41.3711 42.0781 57.5908 Y55.2422 47.7178 71.2266 50.5391 84.1563 57.5908 Cf84.1563 84.791 m54.3008 67.2773 51.127 66.8096 V49.3652 68.5703 42.0781 84.791 Y55.2422 74.918 71.2266 77.7402 84.1563 84.791 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.851499 0.141756 1 0.024598 0 0.596078 0.227451 Xa 0.851499 0.141756 1 0.024598 0 0.596078 0.227451 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 10 M []0 d0 XR21.0391 33.582 m19.2773 33.582 17.8477 32.1523 17.8477 30.3906 c17.8477 28.6289 19.2773 27.2002 21.0391 27.2002 c22.8008 27.2002 24.2285 28.6289 24.2285 30.3906 c24.2285 32.1523 22.8008 33.582 21.0391 33.582 cf21.0391 6.3818 m19.2773 6.3818 17.8477 4.9531 17.8477 3.1914 c17.8477 1.4287 19.2773 0 21.0391 0 c22.8008 0 24.2285 1.4287 24.2285 3.1914 c24.2285 4.9531 22.8008 6.3818 21.0391 6.3818 cf21.0391 60.7822 m19.2773 60.7822 17.8477 59.3525 17.8477 57.5908 c17.8477 55.8291 19.2773 54.3994 21.0391 54.3994 c22.8008 54.3994 24.2285 55.8291 24.2285 57.5908 c24.2285 59.3525 22.8008 60.7822 21.0391 60.7822 cf21.0391 87.9824 m19.2773 87.9824 17.8477 86.5547 17.8477 84.791 c17.8477 83.0283 19.2773 81.5996 21.0391 81.5996 c22.8008 81.5996 24.2285 83.0283 24.2285 84.791 c24.2285 86.5547 22.8008 87.9824 21.0391 87.9824 cf63.1172 33.582 m61.3555 33.582 59.9258 32.1523 59.9258 30.3906 c59.9258 28.6289 61.3555 27.2002 63.1172 27.2002 c64.8789 27.2002 66.3066 28.6289 66.3066 30.3906 c66.3066 32.1523 64.8789 33.582 63.1172 33.582 cf63.1172 6.3818 m61.3555 6.3818 59.9258 4.9531 59.9258 3.1914 c59.9258 1.4287 61.3555 0 63.1172 0 c64.8789 0 66.3066 1.4287 66.3066 3.1914 c66.3066 4.9531 64.8789 6.3818 63.1172 6.3818 cf63.1172 60.7822 m61.3555 60.7822 59.9258 59.3525 59.9258 57.5908 c59.9258 55.8291 61.3555 54.3994 63.1172 54.3994 c64.8789 54.3994 66.3066 55.8291 66.3066 57.5908 c66.3066 59.3525 64.8789 60.7822 63.1172 60.7822 cf63.1172 87.9824 m61.3555 87.9824 59.9258 86.5547 59.9258 84.791 c59.9258 83.0283 61.3555 81.5996 63.1172 81.5996 c64.8789 81.5996 66.3066 83.0283 66.3066 84.791 c66.3066 86.5547 64.8789 87.9824 63.1172 87.9824 cf%AI6_EndPatternLayer) &(0 O 0 R 0.584832 0.941009 0.061372 0.003052 0.509804 0.211765 0.54902 Xa 0.584832 0.941009 0.061372 0.003052 0.509804 0.211765 0.54902 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 10 M []0 d0 XR0 3.1914 m29.8535 20.7041 33.0273 21.1738 V34.79 19.4111 42.0781 3.1914 Y28.9141 13.0645 12.9277 10.2422 0 3.1914 Cf0 30.3906 m29.8535 47.9033 33.0273 48.374 V34.79 46.6104 42.0781 30.3906 Y28.9141 40.2646 12.9277 37.4434 0 30.3906 Cf0 57.5908 m29.8535 75.1035 33.0273 75.5752 V34.79 73.8105 42.0781 57.5908 Y28.9141 67.4648 12.9277 64.6436 0 57.5908 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.04477 1 1 0.005188 0.890196 0.023529 0.07451 Xa 0.04477 1 1 0.005188 0.890196 0.023529 0.07451 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 10 M []0 d0 XR42.0781 3.1914 m71.9316 20.7041 75.1055 21.1738 V76.8691 19.4111 84.1563 3.1914 Y70.9922 13.0645 55.0059 10.2422 42.0781 3.1914 Cf42.0781 30.3906 m71.9316 47.9033 75.1055 48.374 V76.8691 46.6104 84.1563 30.3906 Y70.9922 40.2646 55.0059 37.4434 42.0781 30.3906 Cf42.0781 57.5908 m71.9316 75.1035 75.1055 75.5752 V76.8691 73.8105 84.1563 57.5908 Y70.9922 67.4648 55.0059 64.6436 42.0781 57.5908 Cf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(New Pattern 1)0 Au0 J 0 j 1 w 4 M []0 d0 XR-8151 8181 m-8151 8122.0254 L-8135.4902 8122.0254 L-8135.4902 8181 L-8151 8181 Ln0 O0.713893 0.653498 0.668727 0.767117 0.113725 0.113725 0.105882 Xa10 M-8151 8132.0586 m-8151 8131.5742 L-8135.4878 8131.5742 L-8135.4878 8132.0586 L-8151 8132.0586 Lf-8151 8149.3838 m-8151 8148.8965 L-8135.4878 8148.8965 L-8135.4878 8149.3838 L-8151 8149.3838 Lf-8150.9995 8134.3682 m-8150.9995 8133.6494 L-8135.4878 8133.6494 L-8135.4878 8134.3682 L-8150.9995 8134.3682 Lf-8150.9995 8144.6328 m-8150.9995 8143.9121 L-8135.4878 8143.9121 L-8135.4878 8144.6328 L-8150.9995 8144.6328 Lf-8150.9995 8142.4951 m-8150.9995 8141.4141 L-8135.4878 8141.4141 L-8135.4878 8142.4951 L-8150.9995 8142.4951 Lf-8150.9995 8136.9395 m-8150.9995 8135.8594 L-8135.4878 8135.8594 L-8135.4878 8136.9395 L-8150.9995 8136.9395 Lf-8150.9995 8139.9854 m-8150.9995 8138.334 L-8135.4878 8138.334 L-8135.4878 8139.9854 L-8150.9995 8139.9854 Lf*u1 D-8135.4888 8148.1455 m-8150.9995 8148.1455 L-8150.9995 8147.6816 L-8150.6514 8147.6816 L-8150.6514 8146.4844 L-8150.9995 8146.4844 L-8150.9995 8146.0215 L-8135.4888 8146.0215 L-8135.4888 8146.4844 L-8135.8408 8146.4844 L-8135.8408 8147.6846 L-8135.4888 8147.6846 L-8135.4888 8148.1455 Lf0 D-8147.1255 8147.6846 m-8146.4199 8147.6846 L-8146.4199 8146.4844 L-8147.1255 8146.4844 L-8147.1255 8147.6846 Lf-8147.8306 8146.4844 m-8148.5361 8146.4844 L-8148.5361 8147.6846 L-8147.8306 8147.6846 L-8147.8306 8146.4844 Lf-8145.7144 8147.6846 m-8145.0098 8147.6846 L-8145.0098 8146.4844 L-8145.7144 8146.4844 L-8145.7144 8147.6846 Lf-8144.3042 8147.6846 m-8143.5986 8147.6846 L-8143.5986 8146.4844 L-8144.3042 8146.4844 L-8144.3042 8147.6846 Lf-8142.8936 8147.6846 m-8142.1885 8147.6846 L-8142.1885 8146.4844 L-8142.8936 8146.4844 L-8142.8936 8147.6846 Lf-8141.4834 8147.6846 m-8140.7778 8147.6846 L-8140.7778 8146.4844 L-8141.4834 8146.4844 L-8141.4834 8147.6846 Lf-8140.0718 8147.6846 m-8139.3672 8147.6846 L-8139.3672 8146.4844 L-8140.0718 8146.4844 L-8140.0718 8147.6846 Lf-8138.6616 8147.6846 m-8137.9575 8147.6846 L-8137.9575 8146.4844 L-8138.6616 8146.4844 L-8138.6616 8147.6846 Lf-8137.2515 8147.6846 m-8136.5454 8147.6846 L-8136.5454 8146.4844 L-8137.2515 8146.4844 L-8137.2515 8147.6846 Lf-8149.9463 8147.6846 m-8149.2407 8147.6846 L-8149.2407 8146.4844 L-8149.9463 8146.4844 L-8149.9463 8147.6846 Lf*UU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 2)0 Au0 J 0 j 1 w 4 M []0 d0 XR-8151 8180.998 m-8151 8122.0225 L-8092.0254 8122.0225 L-8092.0254 8180.998 L-8151 8180.998 Ln*u1 D0 O0.713893 0.653498 0.668727 0.767117 0.113725 0.113725 0.105882 Xa10 M-8124.4902 8140.4453 m-8122.9678 8141.9678 -8123.5166 8144.9834 -8125.7153 8147.1836 c-8127.9146 8149.3809 -8130.9302 8149.9297 -8132.4526 8148.4082 c-8133.9751 8146.8857 -8133.4263 8143.8682 -8131.2271 8141.6709 c-8129.0288 8139.4717 -8126.0127 8138.9238 -8124.4902 8140.4453 cf0 D-8125.1519 8141.0781 m-8126.5728 8139.6582 -8129.2241 8140.0059 -8131.0728 8141.8545 c-8132.9214 8143.7031 -8133.2695 8146.3545 -8131.8486 8147.7754 c-8130.4282 8149.1953 -8127.7769 8148.8486 -8125.9282 8147 c-8124.0786 8145.1504 -8123.7314 8142.5 -8125.1519 8141.0781 cf*U-8142.5327 8131.2607 m-8141.7969 8131.1309 l-8141.71 8130.4385 l-8136.9458 8135.9814 l-8142.5327 8131.2607 lf-8131.9409 8128.3145 m-8132.1235 8126.7266 L-8131.7002 8126.4512 -8131.3184 8126.1309 -8130.9346 8125.8145 C-8130.6841 8128.9189 L-8130.3535 8128.9453 L-8130.4678 8125.4395 L-8130.0503 8125.1162 -8129.6089 8124.8213 -8129.0913 8124.6152 C-8129.1235 8129.7266 L-8128.9063 8129.7734 L-8128.5938 8124.4521 L-8128.2007 8124.3516 -8127.7632 8124.3008 -8127.2642 8124.3213 C-8128.0376 8133.4463 L-8126.7666 8124.3594 L-8126.3359 8124.4063 -8125.96 8124.4746 -8125.6289 8124.5625 C-8126.4551 8131.334 L-8126.2998 8131.2109 L-8125.1465 8124.7148 L-8124.7471 8124.8633 -8124.4238 8125.0449 -8124.1528 8125.25 C-8124.7334 8130.0762 L-8124.4688 8129.9414 L-8123.7114 8125.6426 L-8123.2256 8126.1494 -8122.9194 8126.7344 -8122.5127 8127.2822 C-8123.0713 8129.3496 L-8122.6001 8129.1709 L-8122.1338 8127.7383 L-8121.8096 8128.082 -8121.4063 8128.3945 -8120.8394 8128.6406 c-8120.8506 8128.6357 -8119.7393 8128.6826 -8119.7466 8128.6533 c-8119.7959 8128.4375 -8120.6655 8128.2998 -8120.6455 8128.3105 c-8123.2974 8126.8965 -8122.3232 8124.3301 -8126.8735 8123.873 c-8130.4072 8123.5176 -8131.2515 8126.75 -8134.0962 8127.0615 c-8134.1152 8127.0625 -8134.7632 8127.3174 -8134.8442 8127.4502 C-8134.8486 8127.625 -8134.4595 8127.5186 -8134.2417 8127.4766 c-8133.6001 8127.3477 -8133.0498 8127.2402 -8132.5728 8126.9912 C-8132.4023 8128.1914 L-8131.9409 8128.3145 Lf-8144.6626 8140.9463 m-8146.2495 8140.7637 L-8146.5254 8141.1865 -8146.8462 8141.5693 -8147.1626 8141.9521 C-8144.0576 8142.2031 L-8144.0322 8142.5352 L-8147.5376 8142.4189 L-8147.8608 8142.8369 -8148.1558 8143.2783 -8148.3618 8143.7959 C-8143.2505 8143.7637 L-8143.2031 8143.9814 L-8148.5249 8144.293 L-8148.6265 8144.6865 -8148.6758 8145.125 -8148.6558 8145.623 C-8139.5298 8144.8496 L-8148.6177 8146.1201 L-8148.5713 8146.5498 -8148.5024 8146.9277 -8148.4146 8147.2578 C-8141.6426 8146.4316 L-8141.7656 8146.5869 L-8148.2622 8147.7402 L-8148.1138 8148.1406 -8147.9312 8148.4629 -8147.7271 8148.7344 C-8142.9014 8148.1533 L-8143.0352 8148.418 L-8147.3335 8149.1768 L-8146.8271 8149.6621 -8146.2417 8149.9688 -8145.6943 8150.375 C-8143.6274 8149.8145 L-8143.8066 8150.2871 L-8145.2383 8150.752 L-8144.8945 8151.0762 -8144.5825 8151.4814 -8144.3359 8152.0479 c-8144.3408 8152.0361 -8144.2935 8153.1484 -8144.3242 8153.1416 c-8144.54 8153.0908 -8144.6768 8152.2227 -8144.6675 8152.2412 c-8146.0806 8149.5898 -8148.6475 8150.5645 -8149.1045 8146.0127 c-8149.4595 8142.4805 -8146.2271 8141.6367 -8145.9165 8138.791 c-8145.9136 8138.7725 -8145.6602 8138.125 -8145.5273 8138.043 C-8145.3535 8138.0381 -8145.4575 8138.4277 -8145.5015 8138.6455 c-8145.6294 8139.2871 -8145.7368 8139.8369 -8145.9858 8140.3145 C-8144.7842 8140.4854 L-8144.6626 8140.9463 Lf-8115.0127 8139.2285 m-8110.2495 8140.6348 -8108.9502 8142.9209 -8108.9746 8144.5654 C-8108.5366 8141.459 -8106.6558 8143.8652 -8106.1313 8145.0029 C-8107.0498 8141.416 -8104.4463 8144.5439 -8104.2715 8144.8496 C-8105.2593 8141.4063 -8112.3955 8138.9404 -8115.0127 8139.2285 Cf-8120.9775 8138.2197 m-8124.3242 8132.1738 -8121.4233 8130.5703 -8120.7354 8130.377 c-8120.9233 8130.4287 -8121.3135 8131.2949 -8121.2026 8131.6367 C-8120.9482 8131.0928 -8120.4111 8130.8193 -8119.8994 8130.6094 C-8121.1626 8131.6094 -8121.6943 8134.4111 -8120.9082 8137.9512 c-8120.9775 8138.2197 lf-8123.2222 8138.5254 m-8125.6035 8136.1016 -8127.0474 8135.2773 -8125.1035 8132.668 c-8125.2202 8132.8262 -8125.3838 8133.7168 -8125.1758 8134.0117 C-8125.0942 8133.418 -8124.6626 8132.998 -8124.2358 8132.6455 C-8125.9395 8136.0732 -8123.2222 8138.5254 yf-8115.6577 8137.4199 m-8115.9897 8135.5615 -8114.4922 8134.4688 -8112.8662 8133.8496 C-8113.4194 8133.8662 -8114.0176 8133.9307 -8114.4482 8134.3496 C-8114.4302 8133.9893 -8113.7598 8133.3184 -8113.5654 8133.3359 c-8114.2778 8133.2744 -8116.4951 8132.8447 -8115.8408 8137.6191 c-8115.6577 8137.4199 lf-8112.5576 8138.1133 m-8112.1538 8136.7266 -8109.9502 8136.459 V-8110.5342 8136.2871 -8111.2314 8136.3662 -8111.6626 8136.7852 C-8111.6455 8136.4258 -8110.8408 8135.7178 -8110.6479 8135.7568 c-8112.3921 8135.4141 -8112.6782 8137.9072 y-8112.5576 8138.1133 lf-8109.1152 8139.3213 m-8108.8408 8138.627 -8108.0942 8138.1201 -8107.2646 8138 C-8107.6475 8137.8975 -8108.0854 8137.9873 -8108.4297 8138.3242 C-8108.4175 8138.0352 -8107.7744 8137.4863 -8107.6182 8137.502 c-8109.2729 8137.3496 -8109.1152 8139.3213 Yf-8118.5562 8137.4629 m-8118.6504 8134.1309 -8117.4175 8132.4541 -8115.9761 8131.6514 C-8116.5264 8131.7148 -8117.1162 8131.8271 -8117.5103 8132.2793 C-8117.5249 8131.9189 -8116.9087 8131.1953 -8116.7134 8131.1973 c-8117.4287 8131.1943 -8120.0034 8131.0898 -8118.7866 8137.7109 c-8118.5562 8137.4629 lf-8133.7944 8158.0137 m-8132.3882 8162.7754 -8130.1006 8164.0762 -8128.4575 8164.0518 C-8131.5635 8164.4893 -8129.1567 8166.3701 -8128.0195 8166.8945 C-8131.6074 8165.9766 -8128.4795 8168.5791 -8128.1729 8168.7549 C-8131.6162 8167.7676 -8134.0825 8160.6309 -8133.7944 8158.0137 Cf-8134.8022 8152.0488 m-8140.8481 8148.7002 -8142.4521 8151.6025 -8142.6465 8152.291 c-8142.5938 8152.1025 -8141.7295 8151.7119 -8141.3857 8151.8242 C-8141.9297 8152.0781 -8142.2017 8152.6152 -8142.4126 8153.127 C-8141.4126 8151.8633 -8138.6113 8151.334 -8135.0703 8152.1182 c-8134.8022 8152.0488 lf-8134.4966 8149.8037 m-8136.9214 8147.4229 -8137.7446 8145.9805 -8140.3535 8147.9229 c-8140.1968 8147.8066 -8139.3057 8147.6426 -8139.0112 8147.8496 C-8139.6064 8147.9307 -8140.0239 8148.3633 -8140.3774 8148.79 C-8136.9487 8147.0879 -8134.4966 8149.8037 yf-8135.6025 8157.3682 m-8137.4614 8157.0361 -8138.5537 8158.5342 -8139.1729 8160.1602 C-8139.1558 8159.6074 -8139.0918 8159.0098 -8138.6719 8158.5791 C-8139.0327 8158.5957 -8139.7041 8159.2656 -8139.6865 8159.4609 c-8139.7485 8158.75 -8140.1777 8156.5313 -8135.4038 8157.1846 c-8135.6025 8157.3682 lf-8134.9087 8160.4688 m-8136.2959 8160.873 -8136.5649 8163.0762 V-8136.7354 8162.4922 -8136.6558 8161.7949 -8136.2368 8161.3633 C-8136.5967 8161.3809 -8137.3042 8162.1865 -8137.2666 8162.3789 c-8137.6079 8160.6348 -8135.1152 8160.3477 y-8134.9087 8160.4688 lf-8133.7007 8163.9111 m-8134.3955 8164.1846 -8134.9009 8164.9307 -8135.0234 8165.7617 C-8135.1265 8165.3789 -8135.0337 8164.9404 -8134.6982 8164.5967 C-8134.9873 8164.6104 -8135.5361 8165.252 -8135.5215 8165.4082 c-8135.6729 8163.7529 -8133.7007 8163.9111 Yf-8135.5591 8154.4697 m-8138.8921 8154.377 -8140.5679 8155.6094 -8141.3696 8157.0508 C-8141.3081 8156.502 -8141.1953 8155.9102 -8140.7422 8155.5146 C-8141.1035 8155.5029 -8141.8262 8156.1162 -8141.8257 8156.3135 c-8141.8286 8155.5967 -8141.9321 8153.0234 -8135.3115 8154.2402 c-8135.5591 8154.4697 lfuu-8145.0234 8130.709 m-8145.2856 8130.1953 -8145.0479 8129.6689 -8143.2905 8129.6504 C-8144.0322 8128.9082 L-8145.9927 8128.9941 -8146.3423 8130.1777 -8146.1665 8130.7578 c-8145.9736 8131.3906 -8145.5488 8131.9023 -8145.2085 8132.25 C-8146.2031 8132.6113 -8146.2505 8133.3916 -8146.0479 8133.79 c-8145.7729 8134.334 -8145.2998 8134.752 -8144.9487 8135.0176 C-8145.9448 8135.377 -8145.8623 8136.1133 -8145.6074 8136.457 c-8145.2856 8136.8906 -8144.8174 8137.2031 -8144.4751 8137.4023 C-8145.4585 8137.8301 -8145.3022 8138.5234 -8145.0239 8138.8154 c-8144.6929 8139.166 -8144.2466 8139.3916 -8143.9199 8139.5322 C-8144.7695 8140.0225 -8144.5537 8140.6318 -8144.2715 8140.8633 c-8143.9458 8141.1318 -8143.5342 8141.2842 -8143.23 8141.377 C-8143.9395 8141.9082 -8143.6802 8142.4297 -8143.4014 8142.6074 c-8143.0698 8142.8174 -8142.6714 8142.9082 -8142.3857 8142.9541 C-8142.9673 8143.5098 -8142.6768 8143.9482 -8142.4097 8144.0762 c-8141.9326 8144.3037 -8141.3511 8144.2764 -8141.1768 8144.2813 c-8140.6343 8144.2959 -8139.8838 8144.125 -8139.4272 8144.0703 c-8138.3442 8143.9434 -8134.5718 8143.2754 -8132.9023 8143.4385 C-8133.1704 8143.2285 -8133.1714 8143.2285 v-8135.1304 8143.041 -8138.0479 8143.4678 -8139.1294 8143.5957 c-8139.9839 8143.6953 -8141.1182 8143.9951 -8141.9951 8143.7295 c-8142.2593 8143.6494 -8142.3696 8143.4453 -8141.8906 8143.0215 C-8141.3135 8143.0732 -8140.5737 8143.002 -8140.1118 8143.0039 c-8138.9009 8143.0098 -8134.6504 8142.7832 -8132.8311 8143.1895 C-8133.0986 8142.9209 -8133.0986 8142.9199 v-8135.2344 8142.4492 -8138.5098 8142.5254 -8139.7202 8142.5186 c-8140.6758 8142.5137 -8141.9673 8142.6914 -8142.8984 8142.2783 c-8143.1777 8142.1563 -8143.2729 8141.918 -8142.6953 8141.5166 C-8142.0615 8141.6602 -8141.2153 8141.6816 -8140.6968 8141.7471 c-8139.3623 8141.918 -8134.6431 8142.2441 -8132.6929 8142.9375 C-8132.9502 8142.6064 -8132.9512 8142.6064 v-8135.2422 8141.7969 -8138.8647 8141.4375 -8140.1992 8141.2656 c-8141.2529 8141.1309 -8142.7007 8141.1504 -8143.6719 8140.5703 c-8143.9624 8140.3975 -8144.0352 8140.123 -8143.3481 8139.7578 C-8142.6704 8139.998 -8141.7578 8140.1328 -8141.2026 8140.2754 c-8139.7534 8140.6445 -8134.5938 8141.6426 -8132.5361 8142.6689 C-8132.7754 8142.2695 -8132.7759 8142.2695 v-8135.1934 8141.0664 -8139.1392 8140.1797 -8140.5879 8139.8105 c-8141.7314 8139.5186 -8143.3311 8139.3457 -8144.3242 8138.5723 c-8144.6182 8138.3457 -8144.6626 8138.0352 -8143.8745 8137.7305 C-8143.1606 8138.082 -8142.1802 8138.3535 -8141.5889 8138.584 c-8140.0415 8139.1865 -8134.4863 8140.9863 -8132.3564 8142.3984 C-8132.5654 8141.9258 -8132.5674 8141.9248 v-8135.0698 8140.2695 -8139.3018 8138.7578 -8140.8486 8138.1543 c-8142.0703 8137.6777 -8143.8115 8137.2695 -8144.8018 8136.2842 c-8145.0786 8136.0098 -8145.1006 8135.6846 -8144.3384 8135.4551 C-8143.5942 8135.9404 -8142.5234 8136.3584 -8141.8926 8136.6895 c-8140.2446 8137.5518 -8134.2441 8140.2246 -8132.1055 8142.0957 C-8132.2407 8141.5186 -8132.2417 8141.5186 v-8134.7559 8139.3281 -8139.2954 8137.127 -8140.9438 8136.2617 c-8142.2456 8135.5801 -8144.1602 8134.9248 -8145.0815 8133.6709 c-8145.3135 8133.3555 -8145.2974 8133.0127 -8144.6118 8132.8105 C-8143.8594 8133.4668 -8142.6641 8134.0762 -8141.9888 8134.5322 c-8140.27 8135.6953 -8133.9126 8139.377 -8131.8442 8141.7637 C-8132.1377 8140.9902 -8132.1382 8140.9893 v-8134.5718 8138.1934 -8139.0825 8135.2842 -8140.8018 8134.1221 c-8142.1582 8133.2031 -8144.2295 8132.2607 -8145.0234 8130.709 cfUu-8142.2329 8127.918 m-8142.7446 8127.6543 -8143.2715 8127.8926 -8143.2905 8129.6504 C-8144.0313 8128.9082 L-8143.9473 8126.9473 -8142.7622 8126.5977 -8142.1826 8126.7754 c-8141.5503 8126.9658 -8141.0386 8127.3916 -8140.6919 8127.7324 C-8140.3306 8126.7373 -8139.5498 8126.6904 -8139.1504 8126.8906 c-8138.6064 8127.168 -8138.1895 8127.6406 -8137.9224 8127.9922 C-8137.5649 8126.9951 -8136.8281 8127.0781 -8136.4834 8127.334 c-8136.0498 8127.6543 -8135.7368 8128.123 -8135.5376 8128.4648 C-8135.1113 8127.4824 -8134.4175 8127.6387 -8134.1255 8127.918 c-8133.7759 8128.248 -8133.5488 8128.6943 -8133.4082 8129.0215 C-8132.9185 8128.1719 -8132.3086 8128.3877 -8132.0767 8128.6689 c-8131.8086 8128.9951 -8131.6553 8129.4053 -8131.5649 8129.7109 C-8131.0327 8129.002 -8130.5103 8129.2607 -8130.3345 8129.5391 c-8130.1235 8129.8701 -8130.0322 8130.2695 -8129.9858 8130.5537 C-8129.4312 8129.9727 -8128.9912 8130.2637 -8128.8638 8130.5313 c-8128.6367 8131.0078 -8128.6655 8131.5898 -8128.6592 8131.7637 c-8128.6431 8132.3066 -8128.8159 8133.0566 -8128.8696 8133.5137 c-8128.9966 8134.5957 -8129.6655 8138.3682 -8129.5034 8140.0381 C-8129.7129 8139.7695 l-8129.8999 8137.8105 -8129.4727 8134.8926 -8129.3457 8133.8105 c-8129.2446 8132.957 -8128.9458 8131.8223 -8129.2114 8130.9453 c-8129.2915 8130.6816 -8129.4946 8130.5703 -8129.9199 8131.0508 C-8129.8682 8131.6279 -8129.9395 8132.3662 -8129.9375 8132.8281 c-8129.9302 8134.04 -8130.1567 8138.29 -8129.7524 8140.1094 C-8130.0195 8139.8428 -8130.0195 8139.8418 v-8130.4922 8137.7061 -8130.4155 8134.4316 -8130.4214 8133.2207 c-8130.4272 8132.2646 -8130.25 8130.9736 -8130.6616 8130.043 c-8130.7847 8129.7637 -8131.0234 8129.668 -8131.4238 8130.2461 C-8131.2798 8130.8789 -8131.2593 8131.7246 -8131.1929 8132.2441 c-8131.0225 8133.5781 -8130.6958 8138.2959 -8130.0034 8140.248 C-8130.3345 8139.9902 -8130.3354 8139.9893 v-8131.1455 8137.6982 -8131.5039 8134.0762 -8131.6753 8132.7402 c-8131.8096 8131.6885 -8131.79 8130.2402 -8132.3706 8129.2695 c-8132.5435 8128.9785 -8132.8174 8128.9053 -8133.1816 8129.5938 C-8132.9434 8130.2695 -8132.8081 8131.1836 -8132.6665 8131.7383 c-8132.2969 8133.1865 -8131.2993 8138.3477 -8130.27 8140.4053 C-8130.6704 8140.166 -8130.6714 8140.166 v-8131.8745 8137.7471 -8132.7607 8133.8008 -8133.1294 8132.3535 c-8133.4214 8131.209 -8133.5962 8129.6094 -8134.3662 8128.6172 c-8134.5962 8128.3232 -8134.9058 8128.2783 -8135.2114 8129.0664 C-8134.8594 8129.7793 -8134.5874 8130.7617 -8134.3574 8131.3516 c-8133.7534 8132.8984 -8131.9546 8138.4541 -8130.5415 8140.585 C-8131.0161 8140.375 l-8132.6704 8137.8711 -8134.1826 8133.6387 -8134.7866 8132.0918 c-8135.2622 8130.8701 -8135.6714 8129.1289 -8136.6558 8128.1387 c-8136.9312 8127.8623 -8137.2559 8127.8398 -8137.4858 8128.6016 C-8137.0015 8129.3457 -8136.5825 8130.418 -8136.2529 8131.0469 c-8135.3887 8132.6953 -8132.7158 8138.6973 -8130.8447 8140.8359 C-8131.4209 8140.6992 -8131.4214 8140.6992 v-8133.6128 8138.1846 -8135.8145 8133.6455 -8136.6782 8131.9961 c-8137.3599 8130.6943 -8138.0161 8128.7793 -8139.2695 8127.8594 c-8139.5854 8127.627 -8139.9272 8127.6426 -8140.1313 8128.3281 C-8139.4736 8129.082 -8138.8638 8130.2764 -8138.4072 8130.9512 c-8137.2441 8132.6709 -8133.5635 8139.0273 -8131.1768 8141.0967 C-8131.9502 8140.8037 -8131.9512 8140.8018 v-8134.7471 8138.3682 -8137.6558 8133.8584 -8138.8184 8132.1387 c-8139.7368 8130.7822 -8140.6802 8128.7119 -8142.2329 8127.918 cfUU*u1 D-8092.0264 8132.0566 m-8098.5264 8132.0566 L-8098.1826 8132.4189 -8097.7622 8132.7578 -8097.1777 8133.0332 c-8097.1978 8133.0234 -8096.3994 8133.1563 -8096.2622 8133.332 c-8096.0967 8133.541 -8097.7886 8133.582 -8098.6929 8132.5342 C-8099.3486 8135.709 L-8099.8135 8136.0273 L-8099.0918 8132.0977 L-8099.5249 8131.5703 -8099.8594 8131.002 -8100.3687 8130.5186 C-8101.0337 8136.6289 L-8101.29 8136.7754 L-8100.8286 8130.1475 L-8101.1104 8129.957 -8101.4424 8129.791 -8101.8486 8129.6621 C-8102.7119 8137.0225 L-8102.9482 8137.0078 L-8102.3369 8129.5322 L-8102.6729 8129.4609 -8103.0518 8129.4111 -8103.4834 8129.3857 C-8104.0303 8136.9541 L-8104.1992 8136.9521 L-8103.9814 8129.3711 L-8104.4814 8129.377 -8104.9175 8129.4473 -8105.3042 8129.5674 C-8105.4155 8136.7061 L-8105.6338 8136.6689 L-8105.7935 8129.7549 L-8106.2998 8129.9863 -8106.7266 8130.3018 -8107.1279 8130.6455 C-8107.0454 8136.2412 L-8107.3774 8136.0273 L-8107.5752 8131.043 L-8107.9434 8131.377 -8108.3096 8131.7168 -8108.7178 8132.0127 C-8108.7217 8135.3389 L-8109.1455 8135.0645 L-8109.1553 8132.2988 L-8109.6191 8132.5693 -8110.5854 8133.0098 -8111.4014 8132.8672 C-8110.1714 8132.543 -8109.7925 8132.3301 -8109.5034 8132.0566 C-8112.7295 8132.0566 L-8108.8955 8136.4512 -8102.3394 8140.6865 -8097.3018 8134.0225 C-8097.1807 8133.8838 -8096.8174 8133.5625 -8096.1255 8133.6475 C-8092.0264 8133.6475 L-8092.0264 8134.3672 L-8095.4834 8134.3672 L-8095.1318 8134.6777 -8094.8223 8135.4863 -8095.0386 8135.8574 C-8092.0264 8135.8574 L-8092.0264 8136.9385 L-8095.1689 8136.9385 L-8095.2935 8137.4492 -8095.5439 8137.8857 -8095.8218 8138.3311 C-8092.0264 8138.3311 L-8092.0264 8139.9873 L-8096.7354 8139.9873 L-8096.9424 8140.4453 -8097.1016 8140.9082 -8097.1768 8141.4121 C-8092.0264 8141.4121 L-8092.0264 8142.4922 L-8097.1714 8142.4922 L-8097.1074 8142.9834 -8096.9614 8143.4668 -8096.7378 8143.9111 C-8092.0264 8143.9111 L-8092.0264 8144.6309 L-8096.2744 8144.6309 L-8095.9375 8145.0039 -8094.8535 8145.5938 -8094.9375 8146.0225 C-8092.0239 8146.0225 L-8092.0239 8146.4824 L-8092.3721 8146.4824 L-8092.3721 8147.6826 L-8092.0239 8147.6826 L-8092.0239 8148.1426 L-8099.9736 8148.1426 L-8100.4082 8148.4375 -8101.2192 8148.4521 -8101.9897 8148.1426 C-8105.8564 8148.1426 L-8106.1162 8148.4609 -8107.1807 8148.5693 -8107.6846 8148.1426 C-8108.8232 8148.1426 L-8109.0439 8148.3994 -8109.3174 8148.6387 -8109.6782 8148.8975 C-8092.0264 8148.8975 L-8092.0264 8149.3809 L-8110.8394 8149.3809 L-8111.1982 8149.5615 -8112.2417 8149.8389 -8113.3774 8149.3809 C-8123.6406 8149.3809 L-8123.6406 8159.6494 L-8123.1826 8160.7861 -8123.4614 8161.8281 -8123.6455 8162.1895 C-8123.6455 8181 L-8124.1279 8181 L-8124.1279 8163.3477 L-8124.3838 8163.709 -8124.6235 8163.9824 -8124.8794 8164.2031 C-8124.8794 8165.3418 L-8124.4536 8165.8457 -8124.5615 8166.9082 -8124.8794 8167.1689 C-8124.8794 8171.0361 L-8124.5698 8171.8076 -8124.5854 8172.6182 -8124.8833 8173.0518 C-8124.8833 8180.998 L-8125.3394 8180.998 L-8125.3394 8180.6543 L-8126.5435 8180.6543 L-8126.5435 8180.998 L-8127.0039 8180.998 L-8127.0039 8178.0879 L-8127.4287 8178.1738 -8128.0186 8177.0898 -8128.3955 8176.752 C-8128.3955 8180.9951 L-8129.1113 8180.9951 L-8129.1113 8176.2891 L-8129.5552 8176.0654 -8130.0376 8175.9189 -8130.5298 8175.8555 C-8130.5298 8180.9951 L-8131.6138 8180.9951 L-8131.6138 8175.8496 L-8132.1143 8175.9248 -8132.5767 8176.085 -8133.0391 8176.29 C-8133.0391 8180.9951 L-8134.6958 8180.9951 L-8134.6958 8177.2041 L-8135.1362 8177.4824 -8135.5728 8177.7324 -8136.0854 8177.8555 C-8136.0854 8180.9951 L-8137.1689 8180.9951 L-8137.1689 8177.9893 L-8137.5552 8178.1289 -8138.3486 8177.8945 -8138.6543 8177.543 C-8138.6543 8180.9951 L-8139.3794 8180.9951 L-8139.3794 8176.9014 L-8139.4634 8176.209 -8139.1382 8175.8457 -8139.0015 8175.7227 C-8132.3359 8170.6885 -8136.5713 8164.1309 -8140.9658 8160.2959 C-8140.9658 8163.5244 L-8140.6919 8163.2344 -8140.48 8162.8555 -8140.1558 8161.625 C-8140.0127 8162.4414 -8140.4526 8163.4082 -8140.7246 8163.8711 C-8137.9575 8163.8828 L-8137.6831 8164.3047 L-8141.0103 8164.3066 L-8141.3066 8164.7168 -8141.6455 8165.084 -8141.98 8165.4512 C-8136.9951 8165.6475 L-8136.7817 8165.9814 L-8142.3774 8165.8984 L-8142.7202 8166.2998 -8143.0361 8166.7266 -8143.2681 8167.2314 C-8136.3535 8167.3926 L-8136.3169 8167.6113 L-8143.4546 8167.7227 L-8143.5742 8168.1094 -8143.6465 8168.5439 -8143.6514 8169.0449 C-8136.0688 8168.8262 L-8136.0688 8168.9951 L-8143.6362 8169.543 L-8143.6113 8169.9746 -8143.5615 8170.3545 -8143.4888 8170.6895 C-8136.0142 8170.0781 L-8135.9995 8170.3145 L-8143.3599 8171.1777 L-8143.2314 8171.585 -8143.0654 8171.916 -8142.8755 8172.1973 C-8136.2485 8171.7354 L-8136.3945 8171.9932 L-8142.5034 8172.6572 L-8142.0215 8173.168 -8141.4521 8173.502 -8140.9238 8173.9336 C-8136.9946 8173.2139 L-8137.3135 8173.6768 L-8140.4878 8174.334 L-8139.4409 8175.2373 -8139.4814 8176.9297 -8139.6914 8176.7637 c-8139.8657 8176.627 -8139.9985 8175.8281 -8139.9897 8175.8486 c-8140.2656 8175.2637 -8140.6035 8174.8438 -8140.9697 8174.502 C-8140.9697 8181 L-8141.4536 8181 L-8141.4536 8174.085 L-8142.6582 8173.1377 -8143.9551 8172.5674 -8144.1167 8169.4111 c-8144.25 8166.8311 -8142.5562 8165.7656 -8141.4497 8164.2871 C-8141.4497 8159.7441 L-8142.5767 8158.418 -8143.5225 8156.9912 -8143.9614 8155.1455 C-8144.8809 8150.3662 -8141.7568 8144.8545 -8136.7959 8144.4863 C-8136.7183 8144.6133 L-8141.1494 8145.5352 -8143.8442 8150.6641 -8142.9814 8155.1455 C-8142.0635 8159.0029 -8138.9395 8161.0234 -8136.5503 8164.1475 C-8134.8975 8166.5361 -8134.3457 8169.1094 -8135.0806 8171.8652 c-8135.8545 8174.6133 -8138.25 8175.5977 -8138.5649 8176.5303 c-8138.8506 8177.375 -8137.6689 8177.7002 -8136.6968 8177.6348 C-8134.5454 8177.4395 -8133.1602 8174.4922 -8129.3184 8175.7559 c-8128.2222 8176.1162 -8127.5913 8176.9375 -8127.3042 8177.5469 c-8127.1104 8177.957 -8125.7241 8177.4395 -8126.9165 8175.2207 C-8129.8774 8175.0879 -8129.4521 8173.0645 -8129.2026 8173.2109 c-8127.5015 8174.209 -8126.1826 8172.3047 -8127.1055 8171.2959 c-8129.2129 8168.9902 -8130.8481 8169.2861 -8132.9248 8165.3174 c-8135.2095 8160.9521 -8136.2695 8155.0723 -8133.7959 8150.9082 C-8133.7954 8150.1387 L-8134.0479 8149.5439 -8134.0249 8149.085 -8134.2134 8148.168 c-8134.3818 8147.3535 -8134.6689 8147.085 -8134.9575 8146.9121 C-8135.1304 8146.7969 -8135.5015 8146.9053 -8135.5054 8147.1445 c-8135.52 8147.7461 -8134.7842 8147.5225 -8134.8271 8147.584 c-8135.1895 8148.0869 -8135.7329 8147.7295 -8135.8345 8147.377 c-8135.9648 8146.9287 -8135.6606 8146.5762 -8135.3145 8146.4902 C-8134.6655 8146.3594 -8134.1968 8146.9277 -8133.9575 8147.457 c-8133.4365 8148.6074 -8133.4746 8150.252 -8132.2607 8150.8574 c-8131.4385 8151.2471 -8130.5537 8150.9277 -8129.7271 8150.6328 c-8126.8296 8149.6016 -8123.3096 8146.082 -8122.2783 8143.1836 c-8121.9834 8142.3574 -8121.6641 8141.4727 -8122.0537 8140.6494 c-8122.6606 8139.4375 -8124.3042 8139.4746 -8125.4546 8138.9541 c-8125.9834 8138.7148 -8126.5513 8138.2461 -8126.4214 8137.5967 C-8126.3345 8137.25 -8125.9824 8136.9473 -8125.5327 8137.0762 c-8125.1826 8137.1797 -8124.8242 8137.7227 -8125.3281 8138.084 c-8125.3882 8138.127 -8125.1655 8137.3906 -8125.7681 8137.4053 c-8126.0054 8137.4111 -8126.1143 8137.7813 -8125.9995 8137.9541 C-8125.8257 8138.2422 -8125.5591 8138.5293 -8124.7422 8138.6973 c-8123.7085 8138.9102 -8123.2578 8138.8535 -8122.5386 8139.2266 C-8122.1167 8139.2266 L-8117.9546 8136.7529 -8112.0674 8137.8008 -8107.7095 8140.0977 c-8107.0527 8140.4551 -8106.4834 8140.8008 -8105.9126 8141.1475 c-8104.5488 8141.9766 -8102.5542 8144.8857 Y-8102.1782 8145.332 -8101.9521 8145.7979 -8101.5225 8146.0625 c-8100.3569 8146.7783 -8098.8184 8145.5215 -8099.8154 8143.8193 c-8099.9614 8143.5703 -8097.9385 8143.1455 -8097.8057 8146.1064 C-8095.5874 8147.2988 -8095.0698 8145.9121 -8095.4795 8145.7178 c-8096.0889 8145.4316 -8096.9087 8144.7998 -8097.2705 8143.7041 c-8098.5342 8139.8623 -8095.3599 8138.0234 -8095.4463 8136.3262 C-8095.3008 8135.5322 -8095.6514 8134.1719 -8096.4961 8134.459 c-8097.4282 8134.7725 -8098.4126 8137.168 -8101.1606 8137.9414 c-8103.9175 8138.6768 -8106.4897 8138.125 -8108.8774 8136.4717 C-8112.0034 8134.084 -8114.0234 8130.959 -8117.8818 8130.041 C-8122.3623 8129.1777 -8127.4902 8131.873 -8128.4126 8136.3037 C-8128.5391 8136.2266 L-8128.1729 8131.2656 -8122.6592 8128.1426 -8117.8818 8129.0615 C-8116.0361 8129.502 -8114.6104 8130.4453 -8113.2822 8131.5723 C-8108.7393 8131.5723 L-8107.2607 8130.4668 -8106.1943 8128.7725 -8103.6143 8128.9053 c-8100.4585 8129.0664 -8099.8882 8130.3633 -8098.9409 8131.5723 C-8092.0264 8131.5723 L-8092.0264 8132.0566 Lf0 D-8121.1362 8141.4121 m-8113.5166 8141.4121 L-8114.5635 8140.8301 -8115.5435 8140.3184 -8116.8057 8139.9873 C-8121.6079 8139.9873 L-8121.2998 8140.3809 -8121.1055 8140.8701 -8121.1362 8141.4121 Cf-8122.0591 8143.9111 m-8110.5254 8143.9111 L-8110.6338 8143.6201 -8111.0063 8142.9404 -8111.8042 8142.4922 C-8121.4321 8142.4922 L-8121.6118 8142.9727 -8121.8232 8143.4463 -8122.0591 8143.9111 Cf-8110.8096 8146.0225 m-8110.3174 8145.4395 -8110.2568 8145.2207 -8110.3857 8144.6309 C-8122.4521 8144.6309 L-8122.7295 8145.1074 -8123.0322 8145.5723 -8123.3599 8146.0225 C-8115.2568 8146.0225 L-8114.9111 8145.2041 -8114.1665 8145.3711 -8113.8218 8146.0225 C-8110.8096 8146.0225 Lf-8112.1201 8146.4824 m-8112.1201 8146.8242 L-8111.5664 8146.7861 -8111.4995 8146.752 -8111.1982 8146.4824 C-8112.1201 8146.4824 Lf-8113.4863 8146.4824 m-8113.3311 8146.6719 -8113.0264 8146.8154 -8112.8257 8146.8457 C-8112.8257 8146.4824 L-8113.4863 8146.4824 Lf-8116.3535 8146.4824 m-8116.3535 8147.6826 L-8115.6465 8147.6826 L-8115.6465 8146.4824 L-8116.3535 8146.4824 Lf-8117.7622 8146.4824 m-8117.7622 8147.6826 L-8117.0576 8147.6826 L-8117.0576 8146.4824 L-8117.7622 8146.4824 Lf-8119.1729 8146.4824 m-8119.1729 8147.6826 L-8118.4678 8147.6826 L-8118.4678 8146.4824 L-8119.1729 8146.4824 Lf-8120.5835 8146.4824 m-8120.5835 8147.6826 L-8119.8774 8147.6826 L-8119.8774 8146.4824 L-8120.5835 8146.4824 Lf-8121.9946 8146.4824 m-8121.9946 8147.6826 L-8121.2886 8147.6826 L-8121.2886 8146.4824 L-8121.9946 8146.4824 Lf-8127 8157.7695 m-8127 8149.6504 L-8127.4497 8149.9756 -8127.9146 8150.2754 -8128.3911 8150.5449 C-8128.3911 8162.6406 L-8127.8018 8162.7695 -8127.5825 8162.709 -8127 8162.2158 C-8127 8159.2041 L-8127.6514 8158.8613 -8127.8169 8158.1152 -8127 8157.7695 Cf-8126.5391 8157.3799 m-8125.3394 8157.3799 L-8125.3394 8156.6748 L-8126.5391 8156.6748 L-8126.5391 8157.3799 Lf-8125.3394 8155.9688 m-8125.3394 8155.2637 L-8126.5391 8155.2637 L-8126.5391 8155.9688 L-8125.3394 8155.9688 Lf-8125.3394 8154.5586 m-8125.3394 8153.8535 L-8126.5391 8153.8535 L-8126.5391 8154.5586 L-8125.3394 8154.5586 Lf-8125.3394 8153.1484 m-8125.3394 8152.4434 L-8126.5391 8152.4434 L-8126.5391 8153.1484 L-8125.3394 8153.1484 Lf-8125.3394 8151.7373 m-8125.3394 8151.0313 L-8126.5391 8151.0313 L-8126.5391 8151.7373 L-8125.3394 8151.7373 Lf-8125.3394 8150.3262 m-8125.3394 8149.6201 L-8126.5391 8149.6201 L-8126.5391 8150.3262 L-8125.3394 8150.3262 Lf-8125.3394 8148.918 m-8125.3394 8148.2725 L-8125.5728 8148.4941 -8125.8135 8148.709 -8126.0591 8148.918 C-8125.3394 8148.918 Lf-8123.4058 8147.6826 m-8122.6992 8147.6826 L-8122.6992 8146.4824 L-8123.4058 8146.4824 L-8123.4058 8147.6826 Lf-8124.7495 8147.6826 m-8124.1094 8147.6826 L-8124.1094 8146.9746 L-8124.3159 8147.2158 -8124.5288 8147.4521 -8124.7495 8147.6826 Cf-8130.5298 8151.5273 m-8130.5298 8161.2227 L-8130.0815 8162.0186 -8129.4014 8162.3926 -8129.1113 8162.502 C-8129.1113 8150.9258 L-8129.5762 8151.1563 -8130.0488 8151.3564 -8130.5298 8151.5273 Cf-8133.0352 8151.209 m-8133.0352 8156.2207 L-8132.7041 8157.4844 -8132.1929 8158.4629 -8131.6094 8159.5098 C-8131.6094 8151.7725 L-8132.1606 8151.7705 -8132.6494 8151.5439 -8133.0352 8151.209 Cf-8125.3394 8179.2441 m-8126.5391 8179.2441 L-8126.5391 8179.9482 L-8125.3394 8179.9482 L-8125.3394 8179.2441 Lf-8125.3394 8177.834 m-8126.3896 8177.834 L-8126.4375 8177.8838 -8126.4878 8177.9297 -8126.5391 8177.9678 C-8126.5391 8178.5381 L-8125.3394 8178.5381 L-8125.3394 8177.834 Lf-8125.3394 8176.4209 m-8126.0039 8176.4209 L-8125.9702 8176.6475 -8125.9595 8176.9121 -8126.0137 8177.1279 C-8125.3394 8177.1279 L-8125.3394 8176.4209 Lf-8125.3394 8175.0117 m-8126.5015 8175.0117 L-8126.3872 8175.2461 -8126.2798 8175.4814 -8126.1919 8175.7168 C-8125.3394 8175.7168 L-8125.3394 8175.0117 Lf-8125.3394 8173.9033 m-8125.4614 8174.0625 -8125.5938 8174.2197 -8125.6753 8174.3066 C-8125.3394 8174.3066 L-8125.3394 8173.9033 Lf-8125.4399 8158.4395 m-8125.6968 8158.2891 -8127.0845 8157.8135 -8127.0737 8158.5381 c-8127.0674 8158.9502 -8126.4512 8159.2412 -8126.2495 8159.4473 c-8125.6338 8160.0703 -8125.1885 8161.5254 -8126.2974 8162.4238 c-8128.6328 8164.3145 -8130.1865 8162.5879 Y-8134.1118 8158.7324 -8134.1104 8153.1113 Y-8135.2295 8157.334 -8133.9663 8162.3936 -8132.4048 8165.1426 c-8129.8818 8169.584 -8128.9575 8168.0566 -8126.6113 8170.9482 c-8125.8047 8171.9434 -8126.1294 8174.3818 -8128.9546 8173.75 c-8129.2026 8173.6934 -8128.7759 8174.2949 -8128.2681 8174.5498 c-8126.1104 8175.6406 -8124.8618 8173.1631 -8125.1338 8171.8594 c-8125.4761 8170.2109 -8126.0986 8169.3662 -8128.1616 8168.2246 C-8127.8311 8168.2373 -8126.2134 8168.541 -8125.2295 8167.0088 c-8125.0195 8166.6826 -8124.8745 8165.7578 -8125.3042 8165.877 c-8125.3906 8165.9023 -8125.6416 8166.1973 -8125.9414 8166.3613 c-8127.9321 8167.3945 -8128.7075 8165.0137 Y-8126.4165 8164.8418 -8125.7515 8164.7637 -8124.2559 8162.7637 c-8124.0542 8162.4941 -8123.1162 8159.8047 -8125.4399 8158.4395 cf-8126.5391 8165.1367 m-8126.5391 8166.0225 L-8126.2993 8165.998 -8125.9302 8165.957 -8125.3394 8165.4033 C-8125.3394 8165.1367 L-8126.5391 8165.1367 Lf-8127.9946 8165.2305 m-8127.8042 8165.7031 -8127.4185 8165.9473 -8127 8166.0127 C-8127 8165.1709 L-8127.3857 8165.2354 -8127.9946 8165.2305 Yf-8125.3394 8168.666 m-8125.3394 8167.959 L-8125.6382 8167.959 L-8125.9136 8168.1475 -8126.2246 8168.293 -8126.5391 8168.3818 C-8126.5391 8168.666 L-8125.3394 8168.666 Lf-8125.9897 8169.3682 m-8125.7935 8169.5342 -8125.5576 8169.7813 -8125.3394 8170.1084 C-8125.3394 8169.3682 L-8125.9897 8169.3682 Lf-8127.2495 8168.4746 m-8127.1914 8168.5273 -8127.1025 8168.5967 -8127 8168.6719 C-8127 8168.4668 L-8127.0835 8168.4746 -8127.1675 8168.4785 -8127.2495 8168.4746 Cf-8126.5391 8160.9063 m-8126.5391 8161.8262 L-8126.2715 8161.5273 -8126.2358 8161.46 -8126.1982 8160.9063 C-8126.5391 8160.9063 Lf-8126.1758 8160.2012 m-8126.2065 8160.002 -8126.3506 8159.6943 -8126.5391 8159.54 C-8126.5391 8160.2012 L-8126.1758 8160.2012 Lf-8114.1865 8148.8975 m-8114.4233 8148.6943 -8114.6401 8148.4463 -8114.8271 8148.1426 C-8124.8794 8148.1426 L-8124.8794 8158.1992 L-8124.5762 8158.3857 -8124.3271 8158.6025 -8124.1255 8158.8408 C-8124.1265 8148.8975 L-8114.1865 8148.8975 Lf-8107.6226 8147.6826 m-8107.0698 8147.0928 -8107.0298 8146.7227 -8107.0034 8146.4824 C-8107.8887 8146.4824 L-8107.8887 8147.6826 L-8107.6226 8147.6826 Lf-8107.8564 8146.0225 m-8107.0127 8146.0225 L-8107.0791 8145.6045 -8107.3232 8145.2188 -8107.7959 8145.0273 C-8107.7915 8145.6367 -8107.8564 8146.0225 Vf-8104.3623 8146.4824 m-8104.6455 8146.4824 L-8104.7334 8146.7979 -8104.8799 8147.1084 -8105.0674 8147.3838 C-8105.0674 8147.6826 L-8104.3623 8147.6826 L-8104.3623 8146.4824 Lf-8104.3545 8146.0225 m-8104.4302 8145.9199 -8104.4995 8145.8311 -8104.5518 8145.7734 C-8104.5479 8145.8555 -8104.5518 8145.9395 -8104.5601 8146.0225 C-8104.3545 8146.0225 Lf-8102.9185 8147.6826 m-8103.2446 8147.4648 -8103.4912 8147.2305 -8103.6577 8147.0332 C-8103.6577 8147.6826 L-8102.9185 8147.6826 Lf-8098.7202 8147.3477 m-8098.8066 8147.4287 -8098.9639 8147.5615 -8099.1226 8147.6826 C-8098.7202 8147.6826 L-8098.7202 8147.3477 Lf-8098.4751 8144.7549 m-8098.7329 8144.2461 -8099.0913 8143.8945 -8099.2778 8144.0684 c-8099.4248 8144.2041 -8098.4424 8145.9434 -8099.9009 8146.7725 c-8100.7158 8147.2354 -8101.8721 8146.873 -8102.2842 8146.3066 c-8104.5615 8143.1836 -8104.4746 8142.5586 -8107.8848 8140.6172 c-8110.6318 8139.0537 -8115.6943 8137.793 -8119.9155 8138.9121 C-8114.2935 8138.9102 -8110.4385 8142.8359 V-8108.7119 8144.3906 -8110.6025 8146.7246 v-8111.5015 8147.834 -8112.9551 8147.3887 -8113.5791 8146.7734 c-8113.7842 8146.5703 -8114.0752 8145.9551 -8114.4873 8145.9482 c-8115.2134 8145.9385 -8114.7378 8147.3242 -8114.5874 8147.582 c-8113.2217 8149.9063 -8110.5322 8148.9678 -8110.2622 8148.7656 c-8108.2622 8147.2705 -8108.1846 8146.6064 -8108.0127 8144.3145 C-8105.6328 8145.0898 -8106.6655 8147.0801 v-8106.8286 8147.3809 -8107.1245 8147.6318 -8107.1489 8147.7178 c-8107.2695 8148.1475 -8106.3423 8148.0029 -8106.0176 8147.7949 c-8104.4858 8146.8086 -8104.7881 8145.1914 -8104.8018 8144.8613 C-8103.6602 8146.9248 -8102.8154 8147.5469 -8101.1675 8147.8887 c-8099.8633 8148.1602 -8097.3857 8146.9121 -8098.4751 8144.7549 cf-8097.3096 8146.8301 m-8097.5454 8146.7422 -8097.7817 8146.6357 -8098.0142 8146.5215 C-8098.0142 8147.6826 L-8097.3096 8147.6826 L-8097.3096 8146.8301 Lf-8095.8994 8147.0088 m-8096.1143 8147.0625 -8096.3794 8147.0518 -8096.6055 8147.0186 C-8096.6055 8147.6826 L-8095.8994 8147.6826 L-8095.8994 8147.0088 Lf-8093.7822 8147.6826 m-8093.0767 8147.6826 L-8093.0767 8146.4824 L-8093.7822 8146.4824 L-8093.7822 8147.6826 Lf-8095.1934 8147.6826 m-8094.4878 8147.6826 L-8094.4878 8146.4824 L-8095.0586 8146.4824 L-8095.0967 8146.5342 -8095.1426 8146.585 -8095.1934 8146.6328 C-8095.1934 8147.6826 Lf*UU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed 3)0 Auu0 J 0 j 1 w 4 M []0 d0 XR-4278.5 4308.291 m-4179.5693 4308.291 L-4179.5693 4291.9272 L-4278.5 4291.9272 L-4278.5 4308.291 Lnuu0 O0.713893 0.653498 0.668727 0.767117 0.113725 0.113725 0.105882 Xa-4182.0068 4297.6094 m-4181.7832 4297.5537 -4181.5879 4297.8643 -4181.6719 4298.0039 C-4181.2158 4297.6274 -4181.2061 4298.0557 -4181.1475 4297.3262 C-4180.8545 4296.9683 -4180.542 4297.4639 -4180.875 4297.7598 C-4180.0313 4297.3135 L-4180.5361 4297.1997 L-4180.3984 4296.5933 -4179.7295 4297.3809 -4179.5693 4296.6743 C-4180.4834 4296.7334 L-4180.4375 4296.5313 L-4180.6455 4296.749 -4181.0498 4296.6582 -4181.1904 4296.5732 C-4181.168 4296.4736 -4181.1826 4296.3115 -4181.0215 4296.2935 C-4182.124 4296.2471 -4181.3184 4297.3545 -4182.2334 4297.5557 C-4182.1763 4297.541 -4182.1055 4297.5493 -4182.0068 4297.6094 Cf-4182.9443 4296.125 m-4183.3291 4296.8853 L-4183.9746 4296.6895 L-4183.9814 4296.9517 -4184.4521 4297.1641 -4184.1338 4297.3955 C-4184.0713 4297.3545 -4183.9482 4297.2759 -4183.8486 4297.2998 C-4183.9209 4297.8672 -4184.707 4297.583 -4184.5176 4298.1572 C-4184.0068 4298.0068 -4183.9287 4298.1318 -4183.6143 4297.6709 C-4183.1465 4297.7236 -4182.8057 4297.8545 -4182.5869 4298.0615 C-4182.4482 4297.9751 -4182.4287 4297.6274 -4182.252 4297.5576 C-4182.291 4297.5664 -4182.3271 4297.5752 -4182.3721 4297.5796 C-4182.3911 4296.7261 L-4182.5381 4296.9063 -4182.6777 4296.8213 -4182.8408 4296.8389 C-4182.085 4295.8423 L-4182.3291 4295.0435 -4183.0713 4295.5127 -4183.3682 4295.1807 C-4183 4295.8984 -4183.6611 4295.5376 -4182.9443 4296.125 Cf-4182.252 4297.5576 m-4182.2471 4297.5576 -4182.2393 4297.5566 -4182.2334 4297.5557 C-4182.2393 4297.5566 -4182.2471 4297.5566 -4182.252 4297.5576 Cf-4238.707 4302.5225 m-4238.8682 4302.5376 -4238.915 4302.7393 -4238.9385 4302.8408 C-4237.1299 4302.8247 L-4237.1865 4302.6006 -4237.707 4302.3232 -4237.3594 4302.1895 C-4237.5146 4301.9414 -4237.9873 4302.1533 -4238.0557 4302.4561 C-4237.9248 4302.1143 L-4238.3418 4302.5518 -4238.626 4301.6919 -4238.3545 4301.4336 C-4238.3896 4301.4385 L-4239.5439 4303.123 L-4239.1201 4303.2212 -4239.2178 4302.5435 -4238.707 4302.5225 Cf-4275.8564 4301.665 m-4275.6221 4301.5869 -4275.5938 4301.5059 -4275.6201 4301.4229 C-4275.7041 4301.4854 -4275.7842 4301.5576 -4275.8564 4301.665 Cf-4239.8135 4303.5181 m-4240.1753 4304.0454 L-4240.0303 4303.9033 -4239.9033 4303.7139 -4239.8135 4303.5181 Cf-4237.3086 4295.499 m-4237.3081 4295.4712 -4237.3042 4295.4463 -4237.3135 4295.4087 C-4237.4761 4295.6782 L-4237.4736 4295.6782 -4237.4727 4295.6782 -4237.4717 4295.6782 C-4237.4121 4295.6187 -4237.3584 4295.5591 -4237.3086 4295.499 Cf-4248.0215 4305.499 m-4248.0601 4305.5127 -4248.0938 4305.5181 -4248.1396 4305.5356 C-4248.0967 4305.5313 -4248.0576 4305.5176 -4248.0215 4305.499 Cf-4232.4087 4292.4854 m-4233.2129 4292.9927 L-4233.1055 4292.7524 -4233.4937 4292.8247 -4233.3242 4292.5449 C-4233.3857 4292.583 -4233.6729 4292.6782 -4233.5947 4292.8013 C-4233.4307 4292.7856 L-4233.8545 4293.4854 -4233.5977 4293.7544 -4234.3008 4294.2871 C-4233.8643 4294.7017 -4233.6729 4294.3223 -4233.4414 4294.0039 C-4233.3633 4293.9551 -4233.2979 4293.9336 -4233.2314 4293.9072 C-4232.5625 4292.9292 L-4232.4087 4292.4854 Lf-4264.6504 4297.6934 m-4264.6416 4297.6392 L-4264.6494 4297.6582 -4264.6514 4297.6763 -4264.6504 4297.6934 Cf-4264.6064 4297.415 m-4264.6416 4297.6392 L-4264.5986 4297.5269 -4264.4326 4297.4199 -4264.6064 4297.415 Cf-4239.6807 4303.0654 m-4239.6919 4303.1953 -4239.7383 4303.3545 -4239.8135 4303.5181 C-4239.5439 4303.123 L-4239.582 4303.1152 -4239.6328 4303.0879 -4239.6807 4303.0654 Cf-4239.0674 4301.5376 m-4238.3896 4301.4385 L-4238.1396 4301.0752 L-4238.3994 4301.2124 -4238.7021 4301.3062 -4239.0674 4301.5376 Cf-4246.9512 4305.9102 m-4248.3545 4306.0176 -4246.6064 4305.0869 -4247.251 4304.8887 C-4247.6406 4304.9854 -4247.7783 4305.3765 -4248.0215 4305.499 C-4246.9082 4305.165 -4248.1719 4306.7856 -4247.0498 4306.5791 C-4247.209 4307.2856 -4247.8594 4307.3496 -4248.2402 4307.1582 C-4248.6709 4306.4771 -4247.8633 4306.6592 -4247.7656 4305.9912 C-4248.2158 4306.1021 -4248.1367 4306.2261 -4248.3281 4306.6064 C-4249.0352 4306.4478 -4249.791 4307.4429 -4250.2139 4306.499 C-4250.7256 4306.6494 -4250.6919 4306.9751 -4250.9863 4307.334 C-4251.0449 4308.063 -4250.2246 4307.7168 -4250.0352 4308.291 C-4250.0742 4308.2295 -4250.1514 4308.1064 -4250.1289 4308.0039 C-4249.6865 4308.1572 L-4250.1064 4307.9033 -4249.6279 4307.4287 -4249.4033 4307.3716 C-4249.2402 4307.3564 -4248.915 4307.3232 -4248.96 4307.5254 C-4249.207 4307.6816 L-4248.8887 4307.9126 -4248.5049 4307.1504 -4248.1689 4307.5454 C-4248.1514 4307.709 -4248.2783 4307.7856 -4248.2979 4307.8877 C-4247.9209 4307.3896 -4247.5576 4307.4185 -4247 4307.0664 C-4247.3232 4307.7896 L-4246.877 4306.9893 -4245.8672 4307.2168 -4245.167 4307.6392 C-4245.2451 4307.5166 -4245.3848 4307.4307 -4245.3008 4307.291 C-4244.8896 4307.1182 -4244.5791 4307.6143 -4244.7695 4307.9951 C-4244.3682 4307.3955 -4243.2393 4308.5 -4242.6919 4307.7207 C-4240.1753 4304.0454 L-4240.2695 4304.1377 -4240.3701 4304.2124 -4240.4746 4304.2437 C-4240.7031 4303.6094 -4240.8262 4303.6865 -4240.4258 4303.0879 C-4240.8193 4303.4238 -4240.6689 4303.9336 -4241.2598 4303.96 C-4241.0283 4303.6406 -4240.9697 4302.9121 -4241.5361 4302.8369 C-4242.9521 4303.4712 -4243.8906 4305.2759 -4245.2129 4306.1982 C-4245.2617 4305.709 -4246.2998 4305.8462 -4246.8047 4305.7314 C-4246.6123 4305.2061 -4246.2373 4305.0566 -4245.8486 4304.9502 C-4246.0928 4304.917 -4246.5127 4304.9033 -4246.8242 4304.8799 C-4246.9512 4305.9102 Lf-4243.6631 4304.2661 m-4243.6982 4304.2227 -4243.7354 4304.1982 -4243.7725 4304.1753 C-4243.7529 4304.2158 -4243.7197 4304.2471 -4243.6631 4304.2661 Cf-4245.7305 4304.9648 m-4245.7256 4304.9473 -4245.7275 4304.9326 -4245.7256 4304.9126 C-4245.7666 4304.9238 -4245.8071 4304.9385 -4245.8486 4304.9502 C-4245.8071 4304.9541 -4245.7598 4304.96 -4245.7305 4304.9648 Cf-4240.0127 4301.9604 m-4239.9287 4301.8213 -4239.8662 4301.7822 -4239.7822 4301.6416 C-4239.834 4301.6895 -4239.8994 4301.7271 -4239.9619 4301.7695 C-4240.0215 4301.8354 -4240.0498 4301.9014 -4240.0127 4301.9604 Cf-4239.7295 4302.8213 m-4239.7744 4303.0225 L-4239.7383 4303.0449 -4239.7129 4303.0493 -4239.6807 4303.0654 C-4239.6709 4302.957 -4239.6816 4302.8662 -4239.7295 4302.8213 Cf-4252.3135 4301.4873 m-4252.4482 4301.5933 L-4252.3672 4301.5854 -4252.332 4301.542 -4252.3135 4301.4873 Cf-4248.5146 4305.0796 m-4248.0264 4305.0313 -4248.4561 4304.3496 -4247.7656 4304.3462 C-4247.9683 4304.3013 L-4247.4727 4303.9893 -4246.6025 4304.1328 -4246.0137 4304.1064 C-4246.0801 4304.3984 -4245.6567 4304.4604 -4245.7256 4304.9126 C-4245.3232 4304.8062 -4244.9248 4304.7061 -4244.7178 4304.2393 C-4244.4683 4304.3926 -4244.0898 4303.9824 -4243.7725 4304.1753 C-4243.9063 4303.9019 -4243.3213 4303.2515 -4244.0928 4303.5854 C-4244.0303 4303.5479 -4244.0693 4303.4854 -4244.0078 4303.4473 C-4244.5049 4303.0664 -4244.7041 4303.7124 -4245.1318 4303.7212 C-4245.3877 4303.4517 -4244.7139 4303.2856 -4244.9551 4303.1782 C-4245.4893 4303.4292 -4246.6318 4302.8535 -4246.5967 4303.8677 C-4246.9854 4303.9395 -4247.0391 4303.7158 -4247.1553 4303.5303 C-4247.7705 4304.6108 -4249.4385 4303.0664 -4249.4326 4304.4478 C-4249.208 4304.3936 -4248.8423 4304.4229 -4248.5127 4304.1274 C-4248.5146 4305.0796 Lf-4240.832 4302.0313 m-4240.8623 4302.0254 -4240.9023 4302.0303 -4240.9272 4302.0181 C-4240.8994 4302.0254 -4240.8643 4302.0303 -4240.832 4302.0313 Cf*u1 D-4234.6738 4306.0356 m-4234.8779 4306.9395 L-4236.04 4307.1553 -4236.46 4306.9014 -4237.4761 4306.9375 C-4237.5537 4306.8135 -4237.4307 4306.7349 -4237.3682 4306.6953 C-4238.082 4306.7998 -4239.1514 4306.6104 -4239.6709 4307.0254 C-4239.8984 4307.0181 -4240.4951 4306.7314 -4240.2695 4306.4648 C-4240.3799 4306.5454 -4240.5063 4306.623 -4240.6338 4306.5942 C-4240.667 4306.2695 -4240.3486 4306.5015 -4240.3418 4306.2349 C-4240.4424 4306.2134 -4240.4814 4306.1504 -4240.5049 4306.2524 C-4240.335 4305.9736 -4240.6807 4305.1509 -4239.8896 4305.1719 C-4239.583 4305.9307 -4240.4385 4305.2598 -4240.2578 4306.0967 C-4239.9951 4306.1021 -4240.0254 4305.7783 -4240.0029 4305.6763 C-4239.6689 4305.6953 -4239.6777 4305.9053 -4239.6953 4306.0967 C-4239.5674 4305.8369 -4239.1465 4306.1982 -4238.9697 4305.8037 C-4238.3193 4305.7393 -4239.0049 4306.4326 -4238.5801 4306.4229 C-4238.335 4305.5752 L-4237.6289 4305.7349 L-4236.6064 4305.4375 -4237.7754 4304.2705 -4236.6064 4303.791 C-4236.7598 4304.2334 -4236.291 4304.9766 -4235.7471 4305.1533 C-4236.0728 4305.1846 -4236.6743 4305.7373 -4237.0947 4305.4854 C-4236.502 4306.1494 -4237.9097 4305.5654 -4237.6025 4306.3252 C-4237.3096 4305.9648 -4236.8213 4305.917 -4236.4409 4306.1108 C-4236.5654 4306.1895 L-4236.1611 4306.2793 -4235.8545 4305.3926 -4235.2959 4305.7314 C-4235.0186 4305.7041 -4235.0703 4305.9429 -4235.1191 4306.1416 C-4234.8843 4306.0142 -4234.6743 4305.8486 -4234.6738 4306.0356 Cf0 D-4235.2783 4306.2134 m-4235.6494 4306.1294 L-4235.5615 4306.2695 -4235.4229 4306.2646 -4235.2783 4306.2134 Cf*U-4188.1377 4296.2349 m-4188.1006 4296.2573 -4188.0586 4296.2803 -4188.0249 4296.3037 C-4188.0498 4296.2646 -4188.0923 4296.2471 -4188.1377 4296.2349 Cf-4221.0967 4295.9102 m-4220.8818 4295.9385 L-4220.9658 4295.9092 -4221.0342 4295.9053 -4221.0967 4295.9102 Cf-4216.2695 4293.1104 m-4215.9551 4292.9126 L-4216.0791 4292.9253 -4216.1763 4293.0039 -4216.2695 4293.1104 Cf-4190.7021 4296.1768 m-4190.7129 4296.1709 L-4190.7305 4296.1846 -4190.7441 4296.2041 -4190.7627 4296.2158 C-4190.7021 4296.1768 Lf-4206.5869 4295.0933 m-4206.5391 4295.165 -4206.4854 4295.23 -4206.4121 4295.2803 C-4206.4209 4295.1963 -4206.4863 4295.1353 -4206.5869 4295.0933 Cf-4216.3271 4293.1475 m-4216.3193 4293.1553 -4216.3145 4293.1572 -4216.3081 4293.1631 C-4216.2959 4293.1455 -4216.2822 4293.1265 -4216.2695 4293.1104 C-4216.3271 4293.1475 Lf-4223.2231 4293.4385 m-4223.2695 4293.4648 -4223.3115 4293.4854 -4223.3608 4293.5225 C-4223.2959 4293.5059 -4223.2559 4293.4741 -4223.2231 4293.4385 Cf-4222.9199 4295.8408 m-4222.9697 4295.8623 -4223.0166 4295.8887 -4223.0537 4295.9253 C-4222.9199 4295.8408 Lf-4230.3574 4294.1934 m-4230.6475 4294.3145 L-4230.5049 4294.3013 -4230.4199 4294.2544 -4230.3574 4294.1934 Cf-4223.6865 4295.2856 m-4223.7031 4295.3252 -4223.7197 4295.3633 -4223.7314 4295.4014 C-4223.6914 4295.375 -4223.6719 4295.3252 -4223.6865 4295.2856 Cf-4186.2979 4298.7617 m-4186.3042 4298.7617 -4186.3115 4298.7646 -4186.3154 4298.7646 C-4186.3223 4298.8633 L-4186.2979 4298.7617 Lf-4185.5938 4297.5269 m-4185.5107 4297.5015 -4185.4238 4297.479 -4185.3389 4297.457 C-4185.4336 4297.4517 -4185.5254 4297.4785 -4185.5938 4297.5269 Cf-4202.3809 4296.457 m-4202.3042 4296.5796 -4202.124 4296.7261 -4202.208 4296.8662 C-4202.0615 4296.6895 -4202.0713 4296.2603 -4202.3809 4296.457 Cf-4187.709 4304.0664 m-4187.6631 4303.9517 -4187.6055 4303.8643 -4187.5479 4303.7783 C-4187.6553 4303.9019 -4187.749 4304.0039 -4187.709 4304.0664 Cf-4187.5479 4303.7783 m-4187.4951 4303.7173 -4187.4385 4303.6533 -4187.3911 4303.5869 C-4187.4463 4303.6416 -4187.499 4303.7061 -4187.5479 4303.7783 Cf-4204.3311 4303.4912 m-4204.3506 4303.4336 -4204.3799 4303.3853 -4204.4199 4303.3701 C-4204.4082 4303.4854 -4204.376 4303.5103 -4204.3311 4303.4912 Cf-4185.1338 4297.5928 m-4185.0879 4297.3911 -4183.9814 4296.9517 -4184.9121 4296.8486 C-4184.876 4296.2192 -4184.3154 4296.5576 -4184.0674 4296.4019 C-4184.2471 4296.2544 -4183.9775 4295.998 -4184.0322 4295.7734 C-4184.1553 4295.8496 -4184.3018 4296.0303 -4184.5049 4295.9854 C-4184.5986 4295.6982 -4184.29 4295.5024 -4184.0488 4295.6104 C-4184.3457 4295.2783 -4183.6719 4295.1118 -4184.0923 4294.8574 C-4184.9902 4295.0791 -4185.625 4295.3076 -4186.2568 4296.2261 C-4185.7451 4296.0752 -4185.1719 4295.8877 -4184.752 4296.1406 C-4184.9287 4296.6846 L-4185.4033 4296.2061 -4185.6963 4296.563 -4186.1631 4296.5127 C-4185.1143 4296.8013 L-4184.623 4297.2544 -4184.9521 4297.3584 -4185.3389 4297.457 C-4185.2441 4297.4639 -4185.1577 4297.4966 -4185.1338 4297.5928 Cf-4185.8398 4302.3662 m-4185.8223 4302.3809 L-4185.8071 4302.3623 -4185.7881 4302.3496 -4185.7783 4302.3267 C-4185.8398 4302.3662 Lf-4230.3042 4305.2017 m-4230.3945 4305.4077 L-4230.3193 4305.3145 -4230.2959 4305.2515 -4230.3042 4305.2017 Cf-4186.4658 4299.7314 m-4186.4648 4299.7314 L-4186.4717 4299.7373 -4186.4736 4299.7373 -4186.4658 4299.7314 Cf-4228.0635 4305.2437 m-4228.0664 4305.2583 -4228.0693 4305.2744 -4228.0752 4305.291 C-4228.0674 4305.2744 -4228.0674 4305.2583 -4228.0635 4305.2437 Cf-4227.4639 4293.5142 m-4227.4683 4293.4893 -4227.4697 4293.4648 -4227.4795 4293.4404 C-4227.5273 4293.4712 -4227.5039 4293.4966 -4227.4639 4293.5142 Cf-4228.0615 4305.1934 m-4228.0615 4305.21 -4228.0601 4305.2261 -4228.0635 4305.2437 C-4228.0615 4305.2261 -4228.0576 4305.209 -4228.0615 4305.1934 Cf-4217.1641 4303.1963 m-4217.1982 4303.1021 -4217.2529 4303.0127 V-4217.2734 4303.063 -4217.2529 4303.1221 -4217.1641 4303.1963 Cf-4219.3154 4302.3911 m-4219.3154 4302.3911 L-4219.3291 4302.3711 -4219.3369 4302.3535 -4219.3545 4302.3311 C-4219.3154 4302.3911 Lf-4202.8896 4294.0068 m-4202.9961 4293.999 -4203.0762 4294.0127 -4203.1436 4294.0356 C-4203.0654 4294.0493 -4202.9814 4294.0479 -4202.8896 4294.0068 Cf-4228.0752 4305.291 m-4228.0977 4305.3486 -4228.1299 4305.4077 -4228.1826 4305.4814 c-4228.124 4305.4033 -4228.0938 4305.3433 -4228.0752 4305.291 Cf-4213.8843 4300.4478 m-4213.9072 4300.4692 -4213.9287 4300.4893 -4213.9502 4300.5078 C-4213.9375 4300.5181 -4213.9238 4300.5225 -4213.9111 4300.5352 C-4213.8843 4300.4478 Lf-4212.7617 4300.8486 m-4212.7998 4300.9102 -4212.8174 4300.9741 -4212.8389 4301.0303 C-4212.4385 4300.8037 -4211.7021 4301.0493 -4211.6152 4300.4712 C-4211.751 4300.4854 -4212.4561 4300.1455 -4212.3359 4299.8062 C-4212.6152 4299.9512 -4213.0283 4299.5454 -4213.1787 4299.6406 C-4212.7197 4299.957 -4213.1289 4300.1289 -4213.4385 4300.3232 C-4213.7197 4300.1553 -4213.3857 4299.8584 -4213.6279 4299.7515 C-4214.2793 4299.8145 L-4213.7119 4299.8916 L-4213.8843 4300.4478 L-4213.8633 4300.4292 -4213.8486 4300.417 -4213.8262 4300.3955 C-4212.8662 4300.1353 -4213.7451 4301.21 -4212.7617 4300.8486 Cf-4212.8389 4301.0303 m-4212.8994 4301.0654 -4212.9521 4301.1079 -4212.9932 4301.167 C-4212.9023 4301.1582 -4212.8672 4301.1016 -4212.8389 4301.0303 Cf-4208.917 4301.9478 m-4208.8682 4301.9292 -4208.8145 4301.9033 -4208.7471 4301.8599 c-4208.7793 4301.8809 -4208.8535 4301.9077 -4208.917 4301.9478 Cf-4237.6582 4301.167 m-4237.6416 4301.3311 -4237.082 4301.6685 -4237.0923 4301.2407 C-4237.0923 4301.2407 L-4237.2583 4301.1982 -4237.4258 4301.1533 -4237.5938 4301.1064 C-4237.6582 4301.167 Lf-4198.2334 4299.4604 m-4198.2959 4299.4478 -4198.3584 4299.4429 -4198.4209 4299.4502 C-4198.4346 4299.4712 -4198.4473 4299.4951 -4198.457 4299.5166 C-4198.4189 4299.5796 -4198.2959 4299.5015 -4198.2334 4299.4604 Cf-4212.1631 4299.605 m-4212.2656 4299.6709 -4212.3115 4299.7383 -4212.3359 4299.8062 C-4212.2695 4299.7725 -4212.208 4299.7173 -4212.1631 4299.605 Cf-4198.1982 4300.4785 m-4198.1191 4300.6006 -4198.002 4300.7871 -4197.9854 4300.9502 C-4197.8232 4300.9541 -4197.709 4300.7295 -4197.5439 4300.6494 C-4197.7305 4300.7119 -4197.9463 4300.6685 -4198.1982 4300.4785 Cf-4197.5303 4300.6416 m-4197.5352 4300.6455 -4197.54 4300.6475 -4197.5439 4300.6494 C-4197.5391 4300.6494 -4197.5352 4300.644 -4197.5303 4300.6416 Cf*u1 D-4237.9912 4300.9854 m-4238.0391 4301.0181 -4238.0889 4301.0479 -4238.1396 4301.0752 C-4238.0625 4300.9604 L-4238.1914 4300.9185 -4238.3193 4300.8774 -4238.4473 4300.8311 C-4238.4937 4300.8584 -4238.5439 4300.8843 -4238.6055 4300.8984 C-4238.5811 4300.8843 -4238.5615 4300.8389 -4238.5498 4300.792 C-4238.5913 4300.7764 -4238.6318 4300.7593 -4238.6729 4300.7422 C-4238.9795 4301.1851 -4239.7417 4301.5088 -4239.9619 4301.7695 C-4240.2529 4301.959 -4240.6089 4302.0664 -4240.832 4302.0313 C-4240.625 4302.041 -4240.3506 4301.9517 -4240.4326 4301.707 C-4240.8535 4301.4517 -4241.0576 4300.7173 -4241.7832 4301.3486 C-4241.3574 4301.3389 L-4242.3145 4302.2896 L-4242.6494 4301.8955 -4241.8369 4301.8145 -4241.7041 4301.4727 C-4242.4482 4301.9414 -4243.0674 4300.6895 -4243.4121 4301.5127 C-4243.4609 4301.0244 -4243.542 4300.21 -4244.0303 4300.2583 C-4243.6787 4300.8145 -4244.3232 4300.6157 -4244.0342 4301.2119 C-4244.2031 4301.4912 -4244.5791 4301.0356 -4244.6074 4301.4014 C-4244.5615 4301.1992 L-4245.3955 4300.4263 -4245.668 4301.6377 -4246.0249 4302.0356 C-4247.0234 4302.2349 -4247.4814 4301.9185 -4248.2959 4302.0015 C-4248.3281 4301.6743 -4248.5498 4300.7744 -4248.876 4300.8086 C-4249.0283 4301.2515 -4249.7646 4301.4561 -4249.8398 4302.0225 C-4249.2559 4302.2598 -4249.3623 4301.5479 -4249.0127 4301.415 C-4248.7217 4302.0093 -4248.9863 4302.0024 -4248.5889 4302.3584 C-4248.9097 4302.1274 -4250.0381 4302.6685 -4250.3896 4302.1104 C-4250.2656 4302.0313 L-4250.8262 4301.6934 -4250.9336 4300.291 -4251.8682 4301.1396 C-4252.3135 4301.4873 L-4252.292 4301.4307 -4252.29 4301.3643 -4252.2783 4301.3135 C-4253.0078 4301.2544 -4252.8086 4300.6094 -4253.6143 4301.1182 c-4253.5522 4301.0791 -4253.5913 4301.0166 -4253.5283 4300.9785 C-4253.9873 4300.6597 -4254.4502 4301.2998 -4254.7979 4301.4336 C-4255.0098 4300.9604 -4254.7471 4300.9683 -4254.6162 4300.6265 C-4255.4238 4300.4429 -4256.2959 4301.2544 -4256.7979 4301.8311 C-4257.3184 4301.5537 L-4257.0098 4301.3584 -4256.6318 4300.8599 -4256.7266 4300.5742 C-4257.0127 4300.6685 -4256.957 4300.8926 -4257.3623 4300.8013 C-4257.293 4300.499 -4257.123 4300.2173 -4256.9326 4299.8369 C-4257.7705 4299.3311 -4257.1201 4300.9092 -4257.7061 4299.9814 C-4257.9697 4299.9751 -4258.1221 4300.417 -4258.1514 4300.7822 C-4258.6279 4300.3037 L-4258.6807 4300.7695 -4259.2695 4300.7959 -4259.6553 4300.8662 C-4259.7021 4301.0664 -4259.3447 4301.3623 -4259.1982 4301.1816 C-4259.2275 4301.5479 -4259.6377 4301.7192 -4259.9014 4301.7124 C-4259.998 4300.7373 -4261.6299 4301.8535 -4261.3174 4300.7041 C-4262.5029 4301.021 -4264.1689 4301.1201 -4264.9512 4301.5269 C-4265.209 4301.2573 -4265.7354 4301.2437 -4265.4199 4300.7856 C-4266.374 4300.7822 -4266.8662 4301.7832 -4267.8135 4301.5166 C-4267.8921 4301.394 -4267.3857 4301.5078 -4267.4189 4301.1816 C-4268.0381 4301.5732 -4268.5459 4300.7695 -4269.5063 4301.0303 C-4269.3447 4301.0127 -4269.2979 4300.8115 -4269.2754 4300.71 C-4269.2583 4300.8716 -4269.6689 4301.0454 -4269.917 4301.2017 C-4270.0566 4301.1182 -4269.7314 4301.0854 -4269.8096 4300.9604 C-4271.665 4300.4873 -4273.0791 4301.8135 -4274.9248 4301.7695 c-4274.3975 4301.7822 -4274.1982 4301.1353 -4274.1929 4300.8716 C-4274.709 4300.8599 L-4274.9082 4301.1816 -4275.2959 4301.1816 -4275.6201 4301.4229 C-4275.6602 4301.3013 -4275.8174 4301.1709 -4275.6567 4301.0181 C-4276.6768 4300.3643 -4277.25 4302.1982 -4278.5 4301.8623 C-4276.9863 4300.5591 L-4277.3608 4300.105 L-4276.6953 4299.5127 L-4277.0928 4299.1553 -4277.4385 4299.9814 -4277.4863 4299.4912 C-4277.4023 4299.3535 -4277.2002 4299.3975 -4277.1934 4299.1328 C-4277.5752 4298.9414 -4277.6055 4299.3062 -4277.8921 4299.4014 C-4277.1362 4298.4053 -4275.6543 4298.4209 -4274.8564 4298.1768 C-4274.7314 4298.0977 -4274.9639 4298.417 -4274.9863 4298.5181 C-4274.6611 4298.4854 -4274.4658 4298.7959 -4274.0557 4298.623 C-4273.8018 4298.2017 -4274.25 4298.3135 -4274.4521 4298.2695 C-4274.4238 4297.9033 -4274.3223 4297.9253 -4274.0977 4297.8701 C-4274.0488 4298.3584 -4272.8633 4298.0435 -4272.5732 4298.6392 C-4271.3721 4298.4854 -4272.7656 4297.375 -4271.5928 4297.5869 C-4271.2422 4298.1455 L-4270.5615 4297.7139 -4269.6807 4297.3311 -4268.9102 4297.4502 C-4269.0728 4297.4683 L-4269.1807 4297.707 -4269.002 4297.8545 -4268.9229 4297.9766 C-4268.3408 4298.2158 -4267.8174 4297.5376 -4267.4648 4298.0967 C-4266.8008 4297.5024 -4265.6934 4297.063 -4264.9346 4296.7568 C-4264.7295 4297.4932 -4265.9248 4297.3809 -4266.2407 4297.8413 C-4265.5498 4297.8389 L-4265.9766 4297.8486 -4266.1455 4298.1289 -4266.4014 4298.5479 C-4265.7959 4298.6846 -4265.5967 4298.04 -4265.0225 4297.8535 C-4265.0674 4298.0537 -4264.9902 4298.1768 -4264.7256 4298.1816 C-4264.6504 4297.6934 L-4264.6455 4297.7334 -4264.6162 4297.7705 -4264.5342 4297.8013 C-4263.5127 4297.5024 L-4263.7295 4297.2935 -4263.7402 4296.8677 -4264.0039 4296.8623 C-4263.9097 4297.1475 -4264.1338 4297.2041 -4264.3975 4297.1963 C-4264.166 4296.8774 -4264.6553 4296.9272 -4264.6494 4296.6631 C-4264.1201 4296.6763 -4263.4697 4296.6104 -4263.1221 4296.4766 C-4263.0098 4296.9272 L-4262.5049 4297.041 -4261.9717 4296.7896 -4261.6299 4296.9209 C-4261.7373 4297.1597 L-4261.1318 4297.2979 -4260.5361 4297.0078 -4259.998 4297.4473 C-4259.458 4296.9326 -4258.7783 4296.5039 -4258.3369 4295.9648 C-4258.1006 4295.3843 -4256.752 4296.6953 -4256.1436 4295.8774 C-4256.1025 4295.9395 -4256.5615 4296.3145 -4256.7695 4296.5342 C-4256.3643 4296.624 -4256.042 4295.9014 -4255.915 4296.5132 C-4256.8242 4296.3076 -4255.8662 4297.0015 -4256.2759 4297.1753 C-4255.8506 4297.1641 -4255.4014 4297.0537 -4255.1929 4296.8354 C-4255.8818 4296.8398 -4254.9482 4295.9893 -4255.6455 4296.2559 C-4255.1055 4295.7412 -4254.3682 4295.5356 -4253.7241 4295.7349 C-4253.7305 4295.999 -4253.6514 4296.1221 -4253.4111 4296.2314 C-4253.2178 4295.8486 L-4252.916 4295.9185 -4253.7998 4296.3013 -4253.1934 4296.4385 C-4252.5693 4295.7832 -4251.3145 4296.8096 -4251.041 4295.5977 C-4250.5654 4296.0767 -4251.9463 4296.083 -4251.2295 4296.6685 C-4251.6465 4297.1064 -4252.2217 4296.605 -4252.3594 4297.21 C-4251.9502 4297.0376 -4252.21 4297.7212 -4251.9463 4297.7271 C-4251.4902 4297.3545 L-4251.5913 4297.3311 L-4250.8262 4296.7603 -4249.6143 4297.0342 -4248.6377 4296.9375 C-4247.8105 4296.3281 -4247.2407 4295.4478 -4246.248 4295.5142 C-4246.541 4295.8716 -4245.4238 4295.8584 -4246.0488 4296.5132 C-4245.5898 4296.8286 -4245.1362 4296.4551 -4245.127 4296.1909 C-4245.5313 4296.1006 -4245.2695 4296.1064 -4245.6094 4295.9766 C-4245.3799 4295.6563 -4244.8506 4295.6709 -4244.6328 4295.8799 C-4244.7334 4295.8564 -4244.6953 4295.9185 -4244.7178 4296.0181 C-4244.2354 4296.2334 -4244.4863 4295.6997 -4244.1377 4295.5664 C-4244.0273 4296.0142 -4243.3682 4295.6865 -4243.0498 4295.9185 C-4242.5879 4295.2793 L-4242.8418 4295.6992 -4242.1455 4295.4326 -4242.0728 4295.8188 C-4241.7417 4295.5225 -4241.4639 4295.0024 -4240.96 4295.1157 C-4241.168 4295.3354 -4240.5 4295.4326 -4240.4912 4295.8584 C-4239.6279 4296.2661 -4239.0615 4294.6963 -4238.2441 4295.3062 C-4238.2695 4295.4063 -4238.4346 4295.6865 -4238.1953 4295.7935 C-4238.0068 4295.6743 -4237.6777 4295.7246 -4237.4761 4295.6782 C-4237.4824 4295.6904 L-4237.4785 4295.6865 -4237.4761 4295.6816 -4237.4717 4295.6782 C-4237.373 4295.6553 -4237.3115 4295.6021 -4237.3086 4295.499 C-4236.9639 4295.082 -4236.7861 4294.6553 -4236.1079 4294.3013 C-4236.1577 4293.8135 -4236.7305 4294.0024 -4236.9785 4294.1597 C-4237.1929 4294.6416 L-4237.3975 4293.9053 -4237.8047 4294.7695 -4237.9609 4294.521 C-4237.5537 4293.6582 -4236.3818 4293.8701 -4235.6787 4293.3398 C-4236.1074 4292.6597 -4237.04 4292.5537 -4237.8535 4292.6353 C-4237.4951 4292.9287 L-4237.9209 4292.9385 L-4237.5088 4293.457 L-4237.9121 4293.3662 -4238.2607 4293.499 -4238.625 4293.4692 C-4238.1982 4293.46 -4238.0322 4294.1328 -4238.2734 4294.0264 C-4238.749 4293.5479 -4238.7695 4294.3389 -4239.1328 4294.3096 C-4238.9307 4294.3545 -4238.667 4294.3623 -4238.8369 4294.6416 C-4239.5537 4294.0557 -4239.7471 4294.4375 -4240.3994 4293.8115 C-4240.3184 4294.625 -4241.2139 4293.8926 -4241.3115 4294.5591 C-4241.0088 4294.6274 L-4241.6504 4295.1187 L-4242.2422 4294.4561 -4241.126 4294.4429 -4242.0273 4293.9741 C-4242.8584 4293.8926 -4242.8369 4294.7471 -4243.4902 4294.8101 C-4243.2754 4294.3286 -4242.7568 4293.915 -4242.2295 4293.9287 C-4242.5488 4293.6963 L-4242.3799 4293.417 -4241.6504 4293.4756 -4241.2861 4293.5044 C-4241.8877 4294.0576 -4241.0049 4293.6743 -4240.7314 4294.1064 C-4240.6807 4293.6406 -4241.0674 4293.7139 -4240.6113 4293.3398 C-4241.0381 4293.3486 -4241.1006 4293.3877 -4241.6445 4293.2119 C-4240.4697 4293.4238 -4240.5879 4291.5933 -4239.5625 4291.9854 C-4240.0352 4292.1963 -4239.3975 4292.6582 -4239.3408 4292.8843 C-4239.1182 4292.8281 -4238.667 4292.7173 -4238.4814 4292.6006 C-4238.6494 4291.9272 L-4238.0522 4291.6353 -4237.8447 4293.0625 -4237.1553 4292.3677 C-4237.0654 4291.9648 -4237.7617 4292.2314 -4237.6377 4292.1533 C-4236.6943 4291.73 -4236.3545 4292.8145 -4235.5166 4293.3223 C-4235.4697 4293.1201 -4235.4795 4292.6934 -4235.1865 4292.3369 C-4235.2783 4292.7412 -4235.0615 4292.9478 -4235.3911 4293.2437 C-4235.1113 4293.415 -4234.7793 4293.1182 -4234.5322 4292.9604 C-4235.1152 4292.7236 -4234.2939 4292.3799 -4234.1865 4292.1377 C-4233.8843 4292.2061 -4234.2783 4292.541 -4234.4639 4292.6582 C-4234.2217 4292.7661 -4233.9336 4293.3623 -4233.7959 4292.7568 C-4233.7861 4293.1816 -4234.4736 4293.8774 -4234.9229 4293.9873 C-4234.6201 4294.0557 L-4234.8291 4294.2734 -4234.8682 4294.2119 -4235.1689 4294.1455 C-4234.874 4294.4756 -4234.9033 4294.8398 -4234.9717 4295.1431 C-4235.0107 4295.0811 -4234.9502 4295.042 -4234.9873 4294.9814 C-4235.2295 4294.873 -4235.415 4294.9893 -4235.3594 4295.2158 C-4235.5771 4295.7876 -4235.0234 4295.5732 -4234.8594 4295.8584 C-4234.7354 4295.8213 -4234.6113 4295.7822 -4234.4893 4295.7437 C-4233.2314 4293.9072 L-4232.6934 4293.6934 -4232.4521 4294.1328 -4232.0479 4294.4102 C-4231.9375 4293.9185 L-4231.4697 4293.9692 -4231.0283 4294.125 -4231.3281 4294.7471 C-4231.3447 4294.583 -4231.4063 4294.6221 -4231.5078 4294.5977 C-4231.5215 4294.665 -4231.5449 4294.7124 -4231.5742 4294.7515 C-4231.584 4294.7803 -4231.5898 4294.8086 -4231.5977 4294.8369 C-4231.0967 4294.6782 -4230.7842 4294.5752 -4230.7549 4294.5566 C-4231.6055 4295.2695 -4230.7979 4295.4478 -4230.9399 4296.3188 C-4230.0811 4296.0352 L-4230.6016 4295.7593 -4230.0903 4295.6094 -4229.9053 4295.4912 C-4229.8545 4295.9814 -4229.2139 4295.4873 -4228.9121 4295.5557 C-4228.9346 4295.6563 L-4228.6553 4295.8262 -4228.166 4295.7783 -4227.8184 4295.6455 C-4227.834 4295.4814 -4227.3877 4294.6807 -4227.1738 4294.1982 C-4227.7705 4294.0142 -4227.416 4293.8184 -4227.4639 4293.5142 C-4227.4023 4293.542 -4227.291 4293.5479 -4227.2783 4293.4854 C-4227.1929 4293.3462 -4227.3945 4293.2998 -4227.4111 4293.1377 C-4228.0459 4293.3662 -4228.6982 4293.4307 -4228.957 4294.1143 C-4228.7627 4294.4238 -4228.625 4293.8184 -4228.4072 4294.0254 C-4228.7217 4294.4854 -4229.127 4294.394 -4229.6543 4294.3809 C-4229.8271 4293.9712 L-4230.3574 4294.1934 L-4230.1362 4293.9766 -4230.2695 4293.5479 -4229.7129 4293.4648 C-4229.7842 4293.0791 -4230.2646 4293.5537 -4230.6055 4293.4238 C-4230.7803 4293.9683 L-4230.7129 4293.665 -4231.4424 4293.6064 -4230.9238 4293.1924 C-4230.0811 4292.7471 L-4230.3154 4292.375 L-4229.6025 4292.2705 L-4229.7705 4292.5518 L-4228.625 4292.1753 -4229.4326 4293.6353 -4228.2803 4292.9927 C-4227.9189 4292.333 -4227.5313 4292.2622 -4226.8247 4292.4229 C-4227.3359 4292.5703 -4226.877 4292.8877 -4227.0693 4293.2695 C-4226.5479 4293.5449 -4226.3721 4293.0015 -4226.1016 4292.7437 C-4225.9688 4293.0923 -4225.874 4293.3774 -4226.3398 4293.3262 C-4226.3984 4294.0557 -4225.7275 4293.1997 -4225.6846 4293.9512 C-4224.1416 4293.9287 -4224.4482 4291.5254 -4222.6445 4292.4639 C-4222.7119 4292.7661 L-4221.5664 4292.3896 -4220.9053 4292.7515 -4219.8447 4292.5127 C-4219.0098 4293.2832 L-4219.1963 4293.4014 -4219.6982 4293.9771 -4219.4639 4294.3486 C-4219.8701 4293.5688 -4220.3018 4293.8413 -4220.7393 4293.4238 C-4220.7842 4293.6265 -4220.6055 4293.7725 -4220.5283 4293.8975 C-4220.792 4293.8896 -4220.9248 4293.541 -4221.2734 4293.6763 C-4221.2568 4293.8369 -4220.876 4294.0303 -4221.1631 4294.125 C-4221.6377 4293.6455 L-4222.2725 4293.874 -4221.9502 4294.7935 -4222.6963 4294.5732 C-4222.5576 4294.1455 -4222.2744 4293.5264 -4221.9854 4293.4238 C-4222.3262 4293.3311 -4221.5313 4293.165 -4221.8423 4292.9092 C-4222.333 4293.5435 -4222.5703 4293.041 -4223.2231 4293.4385 C-4223.1465 4293.3496 -4223.126 4293.2256 -4222.9658 4293.1865 C-4223.9131 4292.9185 L-4223.6787 4293.2896 -4224.6953 4293.3262 -4224.6074 4293.8774 C-4223.5977 4294.105 -4223.8945 4293.7725 -4222.7441 4294.0854 C-4223.0693 4294.21 -4223.4893 4294.7705 -4223.6865 4295.2856 C-4223.6963 4295.2646 -4223.7129 4295.2471 -4223.748 4295.2373 C-4223.9238 4295.7822 -4223.7451 4295.9287 -4223.748 4296.8809 C-4223.2231 4296.2041 -4222.8721 4296.7617 -4222.2529 4296.3716 C-4222.1362 4295.8496 -4222.6123 4295.7061 -4222.9199 4295.8408 C-4222.374 4295.4951 L-4222.4814 4295.7349 L-4221.0967 4295.9102 L-4221.3594 4295.9385 -4221.4482 4296.2407 -4221.585 4296.4688 C-4221.4063 4296.4893 -4221.2295 4296.6274 -4221.041 4296.7783 C-4221.0811 4296.2803 -4221.0557 4295.9287 -4220.8818 4295.9385 C-4219.9902 4296.0566 -4219.4951 4296.5039 -4219.166 4297.0728 C-4219.1318 4297.0615 -4219.0938 4297.0493 -4219.0625 4297.0376 C-4219.2119 4296.5269 -4218.4297 4296.1201 -4218.1533 4295.5977 C-4218.167 4296.1265 -4217.6943 4295.915 -4217.4375 4296.1846 C-4217.3008 4295.5791 -4217.4834 4294.7432 -4217.7959 4294.248 C-4218.3984 4294.8013 -4218.1338 4294.8062 -4218.418 4295.5923 C-4219.3848 4296.1157 L-4219.1689 4295.6328 L-4219.6514 4295.4199 -4220.1143 4296.0576 -4220.0791 4295.4292 C-4219.8242 4295.0103 -4219.4033 4295.2646 -4219.1504 4294.8438 C-4219.4697 4294.6143 L-4218.9063 4293.9966 -4219.1807 4295.209 -4218.499 4294.7783 C-4218.75 4294.2437 -4218.4375 4294.7393 -4218.1455 4294.3809 C-4218.3799 4294.0093 -4219.3457 4294.5342 -4219.1406 4293.6265 C-4218.7861 4293.2295 -4217.9482 4294.6904 -4217.4795 4293.7876 C-4217.502 4293.8896 L-4216.8105 4294.0078 -4216.5674 4293.4893 -4216.3081 4293.1631 C-4216.0137 4293.457 -4215.6074 4293.0435 -4215.2881 4293.0103 C-4215.2959 4293.2744 L-4214.8457 4293.1641 L-4215.0601 4293.6455 -4215.373 4293.1509 -4215.7598 4293.2212 C-4215.7119 4293.7119 L-4216.1577 4293.1294 -4216.4551 4294.0142 -4216.8008 4294.4375 C-4216.2979 4294.0127 -4215.3799 4294.5576 -4215.2617 4293.5977 C-4214.9502 4294.0942 L-4214.8018 4293.915 L-4214.5693 4294.2871 -4214.8066 4294.8701 -4215.2559 4294.9814 C-4215.334 4294.8574 -4215.373 4294.7959 -4215.3496 4294.6934 C-4215.5586 4294.9126 -4215.75 4295.2935 -4216.2549 4295.1807 C-4215.9854 4294.9209 L-4216.6143 4294.8853 -4217.1865 4295.0752 -4217.4014 4295.5576 C-4216.4937 4295.7622 -4215.6006 4295.8057 -4214.748 4295.7832 C-4214.4971 4294.6743 -4214.1982 4294.0518 -4214.0703 4293.021 C-4213.498 4292.8311 -4212.7217 4292.6895 -4212.2246 4293.0664 C-4212.2705 4293.2695 L-4212.0283 4293.375 -4211.8047 4293.3188 -4211.6182 4293.2017 C-4211.3623 4293.4727 -4211.7939 4293.7471 -4211.6152 4293.8936 C-4210.7959 4293.5479 L-4210.8467 4294.0142 -4211.5361 4294.0166 -4211.8633 4294.0493 C-4211.8018 4294.0103 -4211.6768 4293.9326 -4211.7168 4293.8701 C-4212.0977 4293.6782 -4212.8071 4294.4727 -4212.9736 4293.7979 C-4213.1592 4293.915 -4212.5967 4293.2998 -4213.2246 4293.2646 C-4213.6455 4293.0103 -4213.7822 4293.6157 -4213.8262 4293.8184 C-4213.833 4294.083 -4213.166 4294.1807 -4213.3975 4294.499 C-4213.0703 4294.4648 -4212.9399 4294.125 -4212.5215 4294.3799 C-4212.8457 4294.4121 -4213.2861 4294.9478 -4213.459 4294.5376 C-4214.1006 4295.0303 -4214.0088 4296.2705 -4213.7061 4296.3389 C-4213.7783 4295.9502 -4212.5361 4295.8599 -4213.377 4295.3535 C-4212.999 4294.8535 -4212.3086 4294.8496 -4211.8145 4294.5376 C-4211.8369 4294.6377 L-4211.2231 4294.5127 L-4211.3096 4294.6509 -4211.4951 4294.7695 -4211.501 4295.0313 C-4210.6514 4294.3232 L-4211.1299 4294.7998 -4210.3545 4294.6543 -4210.1367 4294.8643 C-4210.0459 4294.46 -4209.7139 4294.1641 -4210.0322 4293.9326 C-4210.3906 4293.6392 -4210.2407 4294.1509 -4210.5664 4294.1816 C-4210.1055 4293.5449 L-4210.0654 4293.6064 L-4209.7881 4293.0854 L-4209.1602 4293.1221 -4210.0625 4294.2979 -4209.2578 4293.7876 C-4209.3623 4293.0767 L-4208.4307 4293.1816 -4207.2334 4293.9814 -4206.5752 4293.6533 C-4206.7568 4294.0576 -4206.8369 4294.708 -4206.5869 4295.0933 C-4206.8711 4294.9712 -4207.4414 4294.9966 -4207.8486 4295.063 C-4207.9272 4294.9385 -4207.3398 4294.2227 -4206.8975 4294.3765 C-4207.1123 4293.2119 -4208.0107 4295.0791 -4208.0625 4293.8984 C-4209.1895 4293.4873 -4208.9033 4295.0356 -4209.8604 4294.3433 C-4209.873 4294.8701 -4210.1318 4294.6006 -4210.1826 4295.0654 C-4209.8994 4295.9253 -4208.9033 4295.0356 -4208.2822 4295.3369 C-4208.3433 4295.375 -4208.4658 4295.4541 -4208.4893 4295.5537 C-4208.0459 4295.708 -4207.8623 4295.5908 -4207.5522 4295.3955 C-4207.5913 4295.333 L-4207.0498 4294.8184 -4207.2559 4295.7261 -4206.9375 4295.958 C-4206.8135 4295.8799 -4206.3701 4296.0313 -4206.4414 4295.6455 C-4205.8643 4296.1465 L-4205.8921 4295.5576 L-4205.5664 4295.5225 -4205.4951 4295.9121 -4205.2002 4295.5537 C-4205.1865 4295.0269 L-4205.9951 4294.8438 L-4205.585 4294.6719 -4205.8809 4294.3398 -4205.4307 4294.2295 C-4205.9336 4294.8057 -4205.0742 4294.5215 -4205.0249 4295.0103 C-4204.6934 4294.7139 L-4204.7783 4294.8545 L-4204.5186 4295.125 -4204.4688 4294.6582 -4204.165 4294.7271 C-4204.5234 4294.4336 -4204.7578 4294.063 -4205.2139 4294.4375 C-4204.8818 4294.1416 -4204.2231 4293.8135 -4204.0615 4293.7959 C-4203.7129 4293.5752 -4203.4697 4293.9766 -4203.1436 4294.0356 C-4203.7695 4294.2471 -4202.9238 4295.6328 -4204.1787 4295.2544 C-4204.1553 4295.1533 -4204.0537 4295.1763 -4204.0146 4295.2383 C-4204.1816 4294.5654 -4204.7666 4295.2803 -4205.0381 4295.5376 C-4204.9683 4295.9253 -4205.2529 4296.021 -4204.7705 4296.2349 C-4204.9287 4295.9873 -4204.3643 4295.3716 -4203.9053 4295.6895 C-4203.9863 4296.5181 L-4203.3184 4296.6157 L-4203.3809 4296.6553 L-4203.1299 4297.1895 -4202.668 4296.5518 -4202.208 4296.8662 C-4201.876 4296.5703 -4200.6025 4296.8057 -4201.1504 4295.9385 C-4200.7373 4296.457 -4200.375 4295.7959 -4199.9248 4295.6846 C-4200.4863 4295.3462 L-4199.8223 4294.7524 -4200.0137 4295.1353 -4199.4824 4294.1924 C-4199.4287 4294.4185 -4199.3105 4294.605 -4199.418 4294.8438 C-4198.5264 4294.8877 -4197.2529 4295.1221 -4196.7295 4294.4429 C-4196.1006 4294.479 -4196.002 4295.4561 -4195.1201 4295.0728 C-4194.9346 4294.9561 -4195.2646 4294.2979 -4194.6807 4294.5356 C-4194.6416 4294.5977 -4195.2432 4295.1504 -4194.5928 4295.0854 C-4194.1299 4294.4473 -4193.5049 4295.4375 -4192.9023 4294.8843 C-4192.584 4295.1143 -4192.0322 4295.0269 -4192.1475 4295.5313 C-4192.6514 4295.417 -4193.3643 4295.5225 -4193.4727 4295.7646 C-4193.4033 4295.46 -4193.8311 4295.4692 -4193.46 4295.2349 C-4194.2217 4294.8535 -4193.9541 4295.5479 -4194.6377 4295.2871 C-4194.6846 4295.4893 -4194.2861 4295.8457 -4194.1396 4295.665 C-4194.1367 4296.3545 -4195.4873 4295.998 -4194.8799 4296.8247 C-4194.1494 4296.8843 -4193.9326 4295.4473 -4193.2998 4296.1729 C-4193.5537 4296.5923 -4193.9502 4296.2373 -4194.2725 4296.9604 C-4193.7529 4297.2383 L-4193.375 4296.7393 L-4193.3975 4296.8413 L-4192.4795 4297.4727 -4192.5479 4296.1318 -4191.7266 4295.7856 C-4192.2021 4295.3076 -4191.6162 4294.5908 -4191.9746 4294.2979 C-4191.4248 4294.21 -4191.0215 4294.3013 -4191.0176 4294.9912 C-4192.0459 4295.5537 -4191.0762 4295.7207 -4192.0264 4296.4077 C-4191.8701 4296.6553 -4192.2529 4297.417 -4191.6865 4297.4932 C-4191.0479 4297.0015 -4191.877 4296.9185 -4191.2407 4296.6909 C-4191.2031 4296.7524 -4191.1641 4296.8145 -4191.1865 4296.916 C-4190.8936 4296.5576 -4190.8447 4297.0454 -4190.4902 4296.6494 C-4190.5742 4296.7876 L-4190.1377 4297.2061 -4190.0967 4296.3135 -4189.7207 4296.7695 C-4189.8711 4296.2573 -4189.4683 4296.3496 -4189.2354 4296.0303 C-4189.6162 4295.8369 -4189.8223 4295.1021 -4190.5742 4295.1431 C-4190.665 4295.5479 -4190.6104 4295.7725 -4190.9189 4295.9683 C-4190.4307 4295.9185 L-4190.5361 4295.9854 -4190.6162 4296.0894 -4190.7129 4296.1709 C-4191.1826 4295.9604 L-4190.5869 4295.6719 -4190.8604 4295.2393 -4190.6074 4294.8184 C-4190.0625 4294.9951 -4190.1577 4294.707 -4189.8154 4294.8389 C-4189.8496 4295.4326 -4188.7646 4295.8535 -4188.1377 4296.2349 C-4188.2354 4296.2119 -4188.3608 4296.2271 -4188.4287 4296.2119 C-4188.8843 4296.5869 -4188.1152 4296.707 -4188.0986 4296.8701 C-4187.7666 4296.5732 L-4187.8291 4296.6143 -4187.915 4296.7524 -4187.7734 4296.8369 C-4187.3242 4296.7261 -4187.3506 4296.1377 -4186.9014 4296.0264 C-4186.8682 4296.3535 -4187.2471 4296.8496 -4186.9683 4297.021 C-4186.8721 4297.3062 -4186.5654 4298.0654 -4185.9697 4297.7764 C-4185.9272 4297.6509 -4185.7725 4297.5811 -4185.5938 4297.5269 C-4185.6182 4297.5449 -4185.6494 4297.5576 -4185.6611 4297.5811 C-4185.2646 4297.9375 L-4185.6025 4298.4951 -4185.9473 4297.6743 -4186.2861 4298.2344 C-4186.3154 4298.7646 L-4186.5791 4298.7661 -4186.9375 4298.9956 -4187.1025 4299.2705 C-4186.7002 4299.3604 -4186.6152 4299.2212 -4186.165 4299.1108 C-4186.1025 4299.4463 -4186.4189 4299.6953 -4186.4648 4299.7314 C-4186.3975 4299.4292 L-4186.9346 4298.9902 -4187.2002 4299.9375 -4187.8682 4299.8389 C-4187.9688 4299.8174 -4187.9072 4299.7783 -4187.8848 4299.6772 C-4188.4258 4300.1909 -4188.9561 4299.4873 -4189.4814 4300.165 C-4189.3105 4299.8853 L-4189.668 4300.1108 -4190.3682 4300.6328 -4191.0674 4301.1377 C-4191.0728 4301.3438 L-4190.9951 4301.4683 -4191.2578 4301.4604 -4191.3984 4301.3774 C-4191.3975 4301.374 L-4191.748 4301.6265 -4192.085 4301.8584 -4192.3608 4302.0313 C-4192.2725 4302.1592 -4192.1602 4302.2661 -4192.0303 4302.2959 C-4191.9209 4302.0537 -4191.2783 4302.2524 -4191.3662 4301.7017 C-4191.0693 4302.0342 -4190.5913 4301.5576 -4190.373 4301.7661 C-4190.7705 4301.4126 -4190.0967 4301.2471 -4190.0273 4300.9429 C-4189.8936 4301.291 -4189.4385 4300.917 -4189.4902 4301.3843 C-4189.4121 4301.5059 -4189.6855 4301.0742 -4189.8545 4301.3545 C-4190.2705 4301.7896 -4189.0928 4301.7373 -4189.6113 4302.1509 C-4188.9521 4301.8232 -4188.083 4301.9648 -4187.4033 4301.5352 C-4187.7842 4301.3438 L-4187.4814 4301.4126 -4186.7666 4301.3086 -4186.7129 4301.5342 C-4186.9375 4301.5889 -4187.2002 4301.583 -4187.4873 4301.6768 C-4187.501 4302.2041 -4186.7969 4301.6729 -4186.7646 4301.999 C-4185.9307 4301.1265 L-4186.2959 4301.0967 L-4186.0654 4300.7764 -4185.3018 4301.1631 -4184.7354 4301.2373 C-4185.0601 4301.959 -4185.5898 4301.2559 -4186.1855 4301.5454 C-4186.6182 4301.8188 -4185.918 4302.2422 -4186.3281 4302.415 C-4186.2217 4302.583 -4185.9541 4302.563 -4185.8223 4302.3809 C-4185.6611 4302.5127 L-4186.0264 4303.1685 -4186.8457 4303.0225 -4187.3911 4303.5869 C-4187.3433 4303.5166 -4187.3018 4303.4424 -4187.2861 4303.3662 C-4187.7061 4303.1118 -4188.1328 4303.1221 -4188.542 4303.2959 C-4188.3257 4303.5024 -4188.2402 4303.3623 -4188.1162 4303.2856 C-4188.1006 4303.4478 -4188.4873 4303.5181 -4188.6338 4303.6982 C-4188.2529 4303.8896 -4188.5625 4304.0854 -4188.3213 4304.1934 C-4188.5693 4304.3496 -4188.7705 4304.3037 -4189.0728 4304.2349 C-4189.2295 4303.9873 -4188.9434 4303.8936 -4188.9751 4303.5688 C-4189.2861 4303.7646 -4189.4287 4302.9873 -4189.8843 4303.3623 C-4189.2783 4303.499 -4190.0439 4304.0688 -4190.2529 4304.2876 C-4190.1514 4304.3101 L-4190.3433 4304.6909 -4190.5063 4304.707 -4190.6392 4304.3584 C-4190.3911 4304.2017 -4190.1514 4304.3101 -4190.2217 4303.9229 C-4190.3857 4303.9395 -4190.5488 4303.9561 -4190.7344 4304.0728 C-4190.5654 4303.7935 L-4191.3799 4303.874 L-4191.5088 4304.2158 -4191.7241 4304.6982 -4191.8369 4305.2017 C-4192.0322 4304.8926 -4192.3042 4305.1504 -4192.4893 4305.2695 C-4192.4033 4305.1274 L-4192.7627 4304.8354 -4193.5615 4305.0791 -4193.6289 4305.3809 C-4193.8857 4305.1118 -4191.8154 4303.457 -4193.6289 4303.7373 C-4194.3184 4303.7393 -4194.0586 4304.7017 -4194.4521 4305.0356 C-4194.4297 4304.9375 -4194.4688 4304.874 V-4194.7705 4304.8037 -4194.8008 4305.1709 -4195.0488 4305.3262 C-4194.8682 4305.4727 -4194.6055 4305.479 -4194.5215 4305.3398 C-4194.6123 4305.7432 -4195.1494 4305.3037 -4195.3809 4305.6221 C-4195.0811 4305 -4195.9639 4305.3848 -4195.7314 4305.0654 C-4196.3311 4304.665 -4196.9727 4305.1572 -4197.2881 4305.6157 C-4197.6953 4304.8354 -4198.002 4305.7192 -4198.6631 4305.3584 C-4198.5615 4305.3809 -4198.377 4305.2646 -4198.2354 4305.3486 C-4197.8584 4304.8535 -4198.9199 4305.0889 -4198.3398 4304.6353 C-4198.4639 4304.7139 -4198.3486 4304.8984 -4198.2217 4304.8213 C-4197.999 4304.7656 -4197.79 4304.5479 -4197.8457 4304.3223 C-4198.3843 4303.8843 L-4198.1963 4303.7646 L-4199.0137 4303.1582 L-4199.0361 4303.2573 -4198.959 4303.3809 -4198.9199 4303.4429 C-4199.8682 4303.1768 -4200.9521 4303.5142 -4201.7822 4303.4336 C-4201.9385 4304.8311 -4203.8271 4304.0313 -4204.498 4304.8896 C-4204.3184 4304.4893 -4204.2197 4303.7822 -4204.3311 4303.4912 C-4204.1816 4303.4326 -4203.875 4302.8677 -4203.5361 4302.9854 C-4203.4814 4303.21 -4203.0625 4303.4639 -4203.332 4303.7207 C-4202.3945 4303.5615 -4203.459 4303.1079 -4203.1826 4302.5879 C-4204.2217 4302.7236 -4204.8311 4303.542 -4205.4873 4303.8711 C-4205.5039 4303.7061 L-4205.999 4304.0181 L-4205.5947 4304.1108 -4205.6143 4304.9033 -4206.1362 4304.6265 C-4206.0728 4304.5869 L-4206.3701 4304.2544 -4206.9893 4304.6455 -4207.4541 4304.5942 C-4207.7695 4305.0518 L-4208.2354 4305 -4208.2549 4304.1475 -4208.4063 4303.6367 C-4209.1362 4303.5767 -4209.5576 4304.2759 -4210.0762 4304.6909 C-4210.3105 4304.3188 -4211.4033 4304.2314 -4210.8242 4303.7803 C-4211.4824 4304.1079 -4211.3496 4306.1006 -4212.4785 4304.9966 C-4212.1855 4304.6377 L-4213.2646 4304.7124 -4214.8042 4305.4263 -4215.3018 4305.0488 C-4214.9033 4303.7598 -4216.6494 4303.7373 -4216.8418 4302.4736 c-4216.7881 4302.7622 -4217.1934 4302.8584 -4217.2529 4303.0127 C-4217.3418 4302.8643 -4217.4893 4302.7207 -4217.6465 4302.9814 C-4217.2256 4303.2349 -4217.9424 4304.2935 -4217.1377 4303.7832 C-4217.5449 4304.6494 -4218.0693 4305.3262 -4218.9619 4305.2832 C-4218.9482 4304.7559 L-4218.2422 4304.916 L-4218.3135 4304.5269 -4217.9502 4304.5566 -4217.8018 4304.3774 C-4219.1143 4304.0811 -4217.6299 4303.1431 -4218.9717 4303.2119 C-4219.1016 4303.5537 -4219.0176 4303.4126 -4219.3662 4303.5479 C-4219.2021 4303.5303 -4219.1729 4303.167 -4219.4375 4303.1597 C-4219.6914 4303.5811 L-4220.1602 4302.7017 -4218.915 4303.0088 -4219.3154 4302.3911 C-4218.7969 4301.9771 -4217.8994 4301.7559 -4218.0664 4301.083 C-4218.9131 4300.8389 -4218.8281 4302.3433 -4219.7129 4302.0376 C-4219.8071 4301.7515 L-4220.1182 4301.9463 -4220.1689 4302.4102 -4220.3389 4302.6904 C-4220.3545 4302.5269 -4220.4336 4302.4053 -4220.6338 4302.3584 C-4221.1592 4303.0356 -4221.5078 4303.1685 -4221.9932 4303.9077 C-4220.7021 4303.3535 -4220.8896 4304.4229 -4219.5576 4303.9287 C-4219.7666 4304.1475 -4220.7041 4304.3076 -4220.7617 4305.0356 C-4220.749 4304.5078 L-4221.1826 4304.7822 -4221.6152 4305.0537 -4222.1592 4304.8799 C-4221.8271 4304.583 L-4222.5479 4304.9502 -4223.0254 4303.7822 -4223.5947 4304.6597 C-4223.3936 4304.707 -4223.2305 4304.6909 -4223.1064 4304.6108 c-4223.4775 4304.8462 -4223.9434 4304.7935 -4224.3467 4304.7041 C-4225.1807 4305.5752 L-4225.1738 4305.3135 -4225.7021 4305.2979 -4225.4473 4304.8799 C-4226.0479 4304.4785 -4226.3311 4305.2646 -4226.6787 4305.3955 C-4227.2939 4304.8354 -4226.1455 4305.1455 -4226.085 4304.417 C-4226.9326 4304.1729 -4227.8311 4304.3936 -4228.3096 4304.8677 C-4228.1367 4304.9741 -4228.0527 4305.0654 -4228.0615 4305.1934 C-4228.0869 4305.0269 -4228.4287 4305.0703 -4228.6191 4305.0654 C-4228.75 4305.4077 L-4229.0674 4305.1763 -4229.0225 4304.9741 -4228.7529 4304.7158 C-4229.0557 4304.6494 -4229.417 4305.3086 -4229.7295 4304.8145 C-4229.2119 4304.4014 -4228.5522 4304.7617 -4228.2822 4304.5044 C-4229.3643 4304.8423 -4229.3711 4303.4604 -4230.7422 4303.8955 C-4230.7593 4303.7314 -4230.5273 4303.4126 -4230.791 4303.4077 C-4231.4033 4303.5342 -4230.9512 4304.1143 -4231.1426 4304.4951 C-4230.6709 4304.2822 -4230.4521 4304.4912 -4230.1787 4304.9238 C-4230.3042 4305.2017 L-4230.3232 4305.0576 -4230.6191 4305.0493 -4230.7061 4304.9102 C-4230.7822 4305.4771 L-4230.7471 4304.8496 -4231.2207 4304.3716 -4231.5928 4304.6064 C-4231.2168 4305.0615 -4231.3184 4305.0376 -4231.2158 4305.7524 C-4231.7393 4306.4292 -4231.8066 4305.0869 -4232.3926 4305.8037 C-4232.3486 4305.6021 -4231.8369 4305.4517 -4232.2793 4305.2979 C-4232.6455 4305.2705 -4232.5967 4305.7593 -4232.8423 4305.915 C-4232.5654 4305.3926 -4232.6367 4305.0044 -4232.3369 4304.3843 C-4231.6865 4304.3184 -4232.0742 4304.3911 -4231.4385 4304.1631 C-4231.9766 4303.7212 L-4231.4258 4303.6353 -4231.5762 4303.123 -4231.5303 4302.9229 C-4232.4717 4302.3911 -4232.2402 4303.7168 -4232.8457 4303.5796 C-4233.1377 4303.9385 -4232.2783 4303.6553 -4232.7354 4304.0303 C-4233.3018 4303.9541 -4232.8643 4304.3716 -4233.5 4304.5977 C-4233.3936 4304.3584 L-4233.5879 4304.0479 -4233.7803 4304.4307 -4234.0049 4304.4829 C-4234.252 4304.6416 -4233.7246 4306.2998 -4234.7417 4306.3354 C-4234.6919 4306.1895 -4234.6738 4306.0967 -4234.6738 4306.0356 C-4233.6816 4301.6455 L-4234.7119 4301.6563 -4235.8994 4301.5342 -4237.0923 4301.2393 C-4237.373 4300.3809 -4236.2407 4300.5313 -4236.3135 4300.1455 C-4235.7695 4300.3213 L-4235.7998 4300.6851 -4236.9097 4300.4336 -4236.418 4301.0767 C-4235.457 4300.8145 -4235.0215 4301.2334 -4234.1094 4300.4829 C-4234.3926 4299.623 -4235.3105 4300.6353 -4235.9033 4299.9712 C-4235.6543 4300.0269 -4235.4443 4299.9326 -4235.2402 4299.8096 C-4235.7969 4299.6997 -4236.3926 4299.5811 -4237.0264 4299.4478 C-4237.1689 4299.6563 L-4236.7417 4299.7524 -4236.4463 4299.8262 -4236.4082 4299.8574 C-4236.9746 4299.7822 -4237.4521 4300.2583 -4237.4893 4300.8877 C-4237.3887 4300.9102 L-4237.5938 4301.1064 L-4237.7266 4301.0664 -4237.8594 4301.0269 -4237.9912 4300.9854 Cf-4274.6934 4300.8369 m-4274.6592 4300.7764 -4274.6318 4300.7061 -4274.6123 4300.6182 c-4274.6328 4300.71 -4274.6094 4300.7695 -4274.6934 4300.8369 Cf0 D-4226.9033 4298.875 m-4227.6582 4298.7832 -4228.4199 4298.6118 -4229.1455 4298.5356 C-4227.8359 4299.7793 -4226.915 4300.7207 -4229.1006 4300.6963 C-4229.2441 4300.7856 L-4228.958 4300.9385 -4228.4658 4300.957 -4228.002 4300.8672 C-4227.627 4300.4263 -4226.417 4298.8062 -4226.4307 4298.6631 C-4226.5635 4298.3145 -4226.7568 4298.6953 -4226.998 4298.5889 C-4226.9033 4298.875 Lf-4226.3662 4300.958 m-4225.9385 4301.0967 -4226.0361 4300.8213 -4225.9697 4300.5732 C-4226.1201 4300.605 -4226.2705 4300.6377 -4226.4189 4300.667 C-4226.3623 4300.7295 -4226.334 4300.8174 -4226.3662 4300.958 Cf1 D-4225.9951 4300.3252 m-4226.043 4300.3188 -4226.084 4300.3076 -4226.1055 4300.2744 C-4225.9951 4300.3252 Lf0 D-4234.3193 4300.0103 m-4234.2998 4300.0044 -4234.293 4299.999 -4234.2754 4299.9951 C-4234.376 4299.9751 -4234.4775 4299.957 -4234.583 4299.9375 C-4234.542 4299.9771 -4234.4639 4300.0078 -4234.3193 4300.0103 Cf-4233.4502 4300.6182 m-4233.3486 4300.1641 L-4233.4434 4300.1475 -4233.5391 4300.1294 -4233.6377 4300.1118 C-4233.6055 4300.3174 -4233.5713 4300.4966 -4233.4502 4300.6182 Cf-4230.6582 4302.1118 m-4230.4824 4301.5664 -4229.8926 4301.542 -4229.8564 4300.9126 C-4229.8193 4300.7515 -4229.9434 4300.6895 -4230.082 4300.6377 C-4230.2373 4300.623 -4230.4033 4300.6055 -4230.5791 4300.5854 C-4230.585 4300.6768 -4230.6201 4300.7622 -4230.6787 4300.8438 C-4230.5049 4300.9229 -4230.3887 4301.0791 -4230.459 4301.4648 C-4230.9053 4300.623 -4230.8594 4302.0654 -4231.3418 4301.8496 C-4231.4951 4302.2935 -4230.8047 4302.2896 -4230.6582 4302.1118 Cf1 D-4193.5752 4300.4727 m-4193.5615 4300.5269 -4193.5146 4300.6685 -4193.4482 4300.8438 C-4193.7881 4301.1553 L-4194.3945 4301.0181 -4194.8799 4300.1143 -4195.4258 4300.8916 C-4195.6807 4300.6963 -4195.8174 4300.2832 -4195.9482 4299.9429 C-4195.8232 4299.9683 -4195.7061 4300.0015 -4195.6089 4300.0537 C-4194.0791 4298.915 -4194.8115 4301.2544 -4193.5752 4300.4727 Cf0 D-4200.5449 4299.3643 m-4200.4824 4299.3252 -4200.46 4299.2227 Y-4201.8145 4300.3774 -4202.9297 4300.7119 -4203.6602 4300.667 C-4203.5186 4301.125 -4202.8633 4301.479 -4202.5522 4301.6685 C-4202.8281 4302.1904 L-4203 4301.7803 L-4203.4785 4302.2544 L-4203.3447 4302.605 -4202.958 4302.5313 -4202.7002 4302.8013 C-4202.6777 4302.7017 -4201.8506 4302.0933 -4201.6191 4301.7725 C-4202.2803 4301.4121 L-4202.1016 4301.5576 -4201.2246 4301.4375 -4200.877 4301.3037 C-4200.8701 4301.042 -4201.4697 4300.6392 -4201.5449 4301.207 C-4201.6162 4300.8188 -4200.9258 4300.8145 -4201.3623 4300.3984 C-4200.8447 4299.9854 -4200.0215 4300.3311 -4199.6392 4300.5225 C-4199.5742 4301.1753 L-4199.1553 4301.4287 -4199.291 4300.3896 -4198.793 4300.7661 C-4199.4053 4300.8936 -4198.6895 4301.4814 -4199.1768 4301.5303 C-4199.0215 4301.7764 -4199.1738 4302.2192 -4198.6855 4302.1709 C-4198.2793 4301.3076 -4198.1709 4302.7119 -4197.7871 4301.9502 C-4197.5303 4302.2192 -4198.0635 4302.4692 -4197.5586 4302.5854 C-4196.9795 4302.1318 -4197.0127 4301.8062 -4196.9766 4301.1782 C-4197.5186 4301.0024 -4197.585 4301.9951 -4198.0283 4301.8423 C-4197.1475 4300.7661 L-4197.3096 4300.6143 -4197.4297 4300.5977 -4197.5303 4300.6416 C-4197.3535 4300.5791 -4197.2031 4300.4199 -4197.0742 4300.1997 c-4197.001 4300.0767 -4196.9336 4299.9712 -4196.8711 4299.8809 C-4197.3701 4299.875 -4197.8135 4299.8599 -4197.8921 4299.5923 C-4197.8232 4299.2876 L-4198 4299.0078 -4198.2881 4299.2271 -4198.4209 4299.4502 C-4198.8682 4299.4829 -4199.3145 4299.9077 -4199.4121 4299.5132 C-4199.2422 4299.2344 L-4199.792 4299.3223 -4199.8535 4299.3604 -4200.5449 4299.3643 Cf-4218.5625 4298.6709 m-4218.2295 4299.7876 -4217.8623 4300.7744 -4216.3081 4300.5791 C-4216.4307 4300.6563 L-4215.6475 4301.3574 -4214.9033 4299.7295 -4213.9502 4300.5078 C-4214.4131 4300.9287 -4214.3877 4300.8896 -4214.8984 4301.8535 C-4214.4023 4301.5376 L-4214.54 4302.1455 -4214.0449 4301.8311 -4213.6807 4301.8599 C-4214.002 4302.583 L-4214.2207 4302.375 -4214.7871 4302.2998 -4214.7705 4302.4648 C-4214.6465 4302.3848 -4215.5186 4301.5518 -4215.9922 4301.7622 C-4215.9434 4302.2524 -4214.9434 4302.0537 -4215.3896 4302.8545 C-4214.9961 4302.5181 -4214.9473 4303.0068 -4214.5361 4302.8354 C-4214.9307 4303.1709 -4214.6338 4303.5024 -4214.9272 4303.8599 C-4214.2529 4303.6934 L-4214.2354 4303.8564 -4215.2354 4304.0557 -4214.6826 4304.6582 C-4214.4121 4304.4014 -4213.6904 4304.7236 -4213.6777 4304.1963 C-4213.6611 4304.3584 L-4213.1553 4304.4727 -4213.4385 4303.6118 -4212.8174 4303.9126 C-4212.8105 4303.6475 -4212.9287 4303.4639 -4213.1514 4303.5181 C-4213.3389 4303.6353 -4213.3682 4303.999 -4213.7549 4304.0728 C-4213.9287 4303.6597 -4213.2881 4304.124 -4213.5566 4303.4263 c-4213.6904 4303.0791 -4214.5791 4303.7261 -4214.2959 4302.9424 C-4213.791 4303.0557 L-4213.7783 4302.5269 -4213.4131 4302.5576 -4213.4229 4302.1318 C-4213.1143 4301.9375 -4212.8232 4302.5313 -4212.5078 4302.0728 C-4212.377 4301.7314 -4212.6055 4301.0967 -4212.084 4301.373 C-4211.6768 4302.1543 -4210.4761 4302.0024 -4210.0264 4301.8896 C-4209.6328 4301.5537 L-4209.666 4301.2295 -4210.3848 4301.5977 -4210.1318 4301.1768 C-4209.5186 4301.0493 L-4209.5654 4301.2524 L-4209.3623 4301.2979 -4209.1543 4301.0796 -4208.9688 4300.9639 C-4209.1602 4301.3438 -4209.6025 4301.1909 -4209.5146 4301.7412 C-4209.2266 4301.8496 -4209.1826 4302.0537 -4208.917 4301.9478 C-4208.9751 4301.9873 -4209.0249 4302.041 -4209.0176 4302.1182 C-4208.4346 4302.3564 -4208.4541 4301.5024 -4208.3081 4301.3232 c-4207.7217 4300.6084 -4208.8994 4300.6597 -4208.8242 4300.0933 C-4207.1123 4299.791 L-4207.2583 4299.9692 -4207.4053 4300.1475 -4207.3506 4300.373 C-4206.9307 4300.6274 -4207.3408 4300.7998 -4206.751 4300.7734 C-4206.793 4300.0215 -4206.0088 4300.3047 -4205.5923 4299.8701 C-4205.3975 4300.1782 -4205.3574 4300.2393 -4205.7832 4300.249 C-4205.7344 4300.7373 -4205.1631 4300.5493 -4204.96 4300.5942 C-4204.8423 4300.4727 -4204.6416 4300.4019 -4204.5146 4300.2935 C-4204.6846 4300.0493 -4204.6123 4299.7437 -4204.2432 4299.5356 C-4204.2217 4299.4336 L-4204.8262 4299.2998 -4205.7666 4298.7661 -4206.1455 4299.2661 C-4206.0381 4299.0244 L-4206.7383 4298.6021 -4207.5615 4299.9014 -4207.8843 4298.979 C-4207.8545 4298.6143 -4208.0249 4298.8955 -4208.0127 4298.3677 C-4208.5283 4298.7803 L-4208.4209 4298.541 L-4209.2979 4298.6597 L-4209.2744 4298.5615 L-4209.6914 4299.0391 -4210.0176 4299.4287 -4210.2783 4299.7471 C-4210.2793 4299.9771 -4210.252 4300.0479 -4210.3911 4300.2173 C-4210.5303 4300.3311 -4210.6362 4300.3486 -4210.7305 4300.3184 C-4210.7314 4300.3188 -4210.7314 4300.3188 -4210.7314 4300.3213 C-4210.7314 4300.3188 -4210.7314 4300.3188 -4210.7314 4300.3184 C-4210.9463 4300.2515 -4211.0898 4299.9209 -4211.3545 4299.7856 C-4210.5391 4299.7295 L-4210.4727 4299.3389 -4210.542 4298.9336 -4210.9414 4298.6597 C-4210.7783 4298.6455 -4210.71 4298.3408 -4210.9121 4298.2959 C-4210.9346 4298.3975 -4211.4463 4298.5454 -4211.251 4298.8564 C-4212.0254 4298.999 -4213.2793 4297.9736 -4214.4551 4298.7158 C-4213.6104 4298.2695 -4215.1318 4298.1924 -4214.1943 4298.0313 C-4214.8486 4297.4072 -4214.7578 4298.6475 -4215.4248 4298.5493 C-4215.4814 4298.3252 -4215.0615 4298.5791 -4214.9082 4298.1353 C-4216.0176 4297.8853 -4216.7803 4299.1455 -4217.8535 4298.9561 C-4217.8994 4298.4688 L-4218.1025 4298.5313 -4218.3281 4298.6006 -4218.5625 4298.6709 Cf-4220.6855 4299.2783 m-4220.8921 4299.333 -4221.1016 4299.3896 -4221.3145 4299.4463 C-4221.2939 4299.4541 -4221.2744 4299.4541 -4221.2529 4299.4604 C-4221.873 4299.8535 L-4221.4922 4300.0435 -4221.2407 4300.5791 -4221.7744 4300.8286 C-4221.7295 4300.6274 -4221.8857 4300.3799 -4221.7002 4300.2622 C-4222.0576 4299.9692 -4222.8423 4299.6865 -4222.6377 4300.4229 C-4221.9502 4299.7271 -4222.4775 4301.3604 -4221.9375 4300.8438 C-4222.2275 4301.3232 -4222.5146 4301.1079 -4222.7881 4301.3223 C-4222.5029 4300.9209 -4222.8545 4300.4126 -4223.2822 4300.2212 C-4223.4688 4300.3398 -4223.9727 4300.2261 -4224.2822 4300.4209 C-4224.1719 4300.8711 -4224.4414 4301.1289 -4223.9375 4301.2422 C-4224.1221 4301.3604 -4224.4087 4301.4541 -4224.7295 4301.2227 C-4224.6025 4301.1455 -4224.3799 4301.0894 -4224.3955 4300.9272 C-4224.6025 4300.5127 -4224.8447 4300.5313 -4224.9785 4300.3545 C-4225.085 4300.3799 -4225.1929 4300.4019 -4225.2979 4300.4263 C-4225.2666 4300.4648 -4225.2393 4300.5166 -4225.2197 4300.5811 C-4225.5742 4300.9785 L-4225.1025 4300.7661 -4225.3564 4301.1865 -4225.3623 4301.4502 c-4225.3496 4300.9229 -4225.666 4301.3809 -4225.8281 4301.3984 C-4225.4766 4301.9561 L-4225.6465 4302.2349 -4226.0762 4301.5537 -4225.9873 4302.105 C-4225.2422 4302.3262 -4224.9561 4302.2314 -4224.2822 4302.0654 C-4224.5557 4301.6328 L-4223.7959 4301.3267 -4224.0869 4302.375 -4223.2344 4302.3545 C-4222.8799 4301.959 -4221.9521 4302.3267 -4221.9346 4301.5352 C-4222.041 4301.7764 -4221.4033 4302.2393 -4221.1113 4301.8809 C-4220.7881 4301.1572 -4219.8115 4301.0596 -4220.1074 4300.7295 C-4220.3711 4300.7207 -4220.7266 4301.1182 -4220.9385 4300.6475 C-4220.4268 4300.4966 L-4220.7627 4300.1021 L-4220.5889 4300.2437 -4220.6055 4299.8584 -4220.6855 4299.2783 Cf1 D-4232.1455 4294.8389 m-4232.1514 4294.8354 -4232.1582 4294.833 -4232.165 4294.8286 C-4232.1577 4294.8311 -4232.1504 4294.8311 -4232.1436 4294.8311 C-4232.1455 4294.8389 Lf*U0 D-4185.9971 4298.8311 m-4185.8496 4298.6509 -4185.4854 4298.6807 -4185.5566 4298.2935 C-4185.5479 4298.7192 -4186.207 4298.3584 -4185.9971 4298.8311 Cf-4185.5615 4299.248 m-4185.5361 4299.1465 -4185.5537 4298.9829 -4185.3906 4298.9683 C-4185.8398 4299.0767 L-4185.5615 4299.248 Lf-4185.1055 4302.1597 m-4184.873 4301.8423 -4184.7266 4301.6631 -4184.3623 4301.6919 C-4184.2256 4302.7314 -4184.958 4301.9824 -4185.123 4302.9517 C-4184.4561 4303.0493 -4184.251 4302.1416 -4183.7021 4302.0537 C-4183.9746 4301.6201 -4185.085 4301.3701 -4185.1055 4302.1597 Cf-4185.4014 4303.4736 m-4185.0303 4303.2393 L-4185.0674 4303.1782 L-4185.4385 4303.4126 L-4185.4014 4303.4736 Lf-4193.4385 4294.4429 m-4193.4717 4294.1182 -4193.7031 4294.4385 -4193.8271 4294.5166 C-4193.7266 4294.5376 -4193.585 4294.623 -4193.4385 4294.4429 Cf-4266.3506 4294.105 m-4269.1807 4294.4185 L-4268.3662 4294.3369 -4267.6143 4294.2959 -4266.3506 4294.105 Cf-4202.8311 4296.5664 m-4202.0713 4296.2603 -4201.7334 4295.6997 -4200.959 4295.5576 C-4201.9775 4294.9033 -4202.3042 4296.5796 -4203.1592 4295.9092 C-4202.8311 4296.5664 Lf-4202.5635 4293.9751 m-4202.4375 4294.5869 -4203.1494 4294.6919 -4203.0391 4295.1406 C-4202.5273 4294.9912 -4202.8008 4294.5576 -4202.3359 4294.6104 C-4202.5635 4293.9751 Lf-4199.1191 4304.0889 m-4199.3496 4304.4072 L-4199.1641 4304.291 L-4199.1191 4304.0889 Lf-4206.0273 4294.5181 m-4205.9434 4294.3799 L-4206.3242 4294.1865 L-4206.0273 4294.5181 Lf-4205.8594 4294.2393 m-4205.9434 4294.3799 L-4205.9434 4294.3799 L-4205.8594 4294.2393 Lf-4199.415 4305.4014 m-4199.0728 4305.5313 L-4198.9033 4305.2515 L-4199.415 4305.4014 Lf-4202.4385 4302.1187 m-4202.1318 4301.9229 L-4202.1929 4301.9604 -4202.6123 4301.709 -4202.4385 4302.1187 Cf-4208.3545 4294.2583 m-4208.7275 4294.4932 L-4208.6895 4294.5537 L-4208.3174 4294.3188 L-4208.3545 4294.2583 Lf-4204.8369 4303.8057 m-4204.625 4304.2759 -4205.4482 4303.9326 -4205.0127 4304.3486 C-4204.625 4304.2759 -4204.7822 4304.0303 -4204.8369 4303.8057 Cf-4209.335 4300.6157 m-4209.3857 4300.6157 -4209.4385 4300.6328 -4209.4893 4300.6851 C-4209.4287 4300.665 -4209.3779 4300.6406 -4209.335 4300.6157 Cf-4209.335 4300.6157 m-4209.1729 4300.6157 -4209.0107 4300.7959 -4208.8994 4300.6597 C-4209.1016 4300.4473 -4209.1753 4300.5269 -4209.335 4300.6157 Cf-4211.1953 4300.7256 m-4211.0479 4300.7593 L-4211.1982 4300.9912 -4211.127 4300.957 -4210.9932 4300.7705 C-4210.8369 4300.7544 -4210.8457 4300.6055 -4210.8271 4300.5039 C-4210.7959 4300.4473 -4210.7646 4300.3853 -4210.7314 4300.3213 C-4210.7793 4300.3809 -4210.8223 4300.4404 -4210.8594 4300.4912 C-4211.1006 4300.4873 -4211.248 4300.5103 -4211.1953 4300.7256 Cf-4218.1055 4292.7998 m-4217.5615 4292.9751 -4217.4209 4293.0596 -4217.4502 4293.4248 C-4216.9346 4293.541 -4217.0146 4292.9126 -4216.7031 4292.7661 C-4217.2871 4292.8369 -4217.4063 4292.6685 -4218.1055 4292.7998 Cf-4216.7031 4292.7661 m-4216.6377 4292.7593 -4216.5752 4292.7515 -4216.499 4292.7373 C-4216.584 4292.7261 -4216.6475 4292.7412 -4216.7031 4292.7661 Cf-4209.0215 4304.7173 m-4209.3594 4305.2759 L-4209.2354 4305.1982 L-4209.0215 4304.7173 Lf-4218.9121 4292.6157 m-4218.8115 4292.6392 -4218.6494 4292.623 -4218.5703 4292.748 C-4218.541 4292.3809 -4219.0127 4292.5933 -4218.9121 4292.6157 cf-4216.8154 4299.7744 m-4216.7598 4299.998 -4216.4121 4299.8643 -4216.2705 4299.9502 C-4216.4736 4299.9033 -4216.6392 4299.23 -4216.8154 4299.7744 Cf-4220.4717 4294.1221 m-4220.3711 4294.1455 -4220.2158 4294.3911 -4220.2832 4294.6934 C-4220.1367 4294.5142 -4219.9385 4293.8701 -4220.4717 4294.1221 Cf-4217.8086 4299.709 m-4217.7314 4299.833 L-4217.3594 4299.5977 L-4217.8086 4299.709 Lf-4216.4814 4305.1006 m-4216.0635 4304.665 -4217.1455 4304.0493 -4216.4248 4303.6807 C-4217.3545 4303.2246 -4216.3535 4304.2979 -4217.0391 4304.2271 C-4216.6377 4304.374 -4216.4409 4304.9253 -4216.4814 4305.1006 Cf-4217.0391 4304.2271 m-4217.0977 4304.2041 -4217.1611 4304.1909 -4217.2295 4304.1895 C-4217.1533 4304.21 -4217.0923 4304.2212 -4217.0391 4304.2271 Cf-4222.9287 4301.4692 m-4222.8682 4301.4238 -4222.8262 4301.374 -4222.7881 4301.3223 C-4222.8359 4301.3584 -4222.8818 4301.4033 -4222.9287 4301.4692 Cf-4219.2295 4304.5869 m-4218.6025 4303.9326 L-4219.0215 4304.3677 -4220.0752 4304.3413 -4220.0098 4304.9927 C-4219.668 4305.125 -4219.2578 4304.9517 -4219.0889 4304.6709 C-4219.2295 4304.5869 Lf-4226.4287 4292.7764 m-4226.1577 4292.5181 L-4226.4961 4292.4424 L-4226.3994 4292.54 -4226.5742 4293.0181 -4226.4287 4292.7764 Cf-4226.5615 4292.4287 m-4226.4961 4292.4424 L-4226.5107 4292.4263 -4226.5313 4292.4199 -4226.5615 4292.4287 Cf-4221.7422 4301.1543 m-4221.54 4301.1997 -4221.3779 4301.1816 -4221.1929 4301.0664 C-4221.2695 4300.9429 -4221.7744 4300.8286 -4221.7422 4301.1543 Cf-4228.3369 4293.7236 m-4227.8896 4293.6118 L-4228.3779 4293.6597 L-4228.3369 4293.7236 Lf-4230.4238 4292.6157 m-4230.501 4292.4932 L-4230.8721 4292.7271 L-4230.7939 4292.8496 L-4230.4238 4292.6157 Lf-4227.6943 4305.4326 m-4227.3911 4305.5024 -4227.1543 4304.917 -4227.2334 4304.7935 C-4227.8213 4304.8188 L-4227.6719 4305.3311 -4227.6582 4304.8037 -4227.3174 4304.9336 C-4227.6943 4305.4326 Lf-4245.915 4293.5732 m-4245.7842 4293.2314 -4245.1406 4293.4292 -4245.1074 4293.7544 C-4245.1934 4293.8955 -4245.542 4294.0303 -4245.3232 4294.2373 C-4244.8145 4293.3975 L-4244.1377 4293.9209 -4245.3291 4294.5015 -4245.6631 4294.7979 C-4244.9736 4294.9063 -4244.7695 4294.3545 -4244.0361 4294.3574 C-4244.252 4294.2822 -4244.3887 4294.0728 -4244.5029 4293.8926 C-4244.5283 4293.3013 -4243.8447 4293.563 -4243.3564 4293.5166 C-4243.667 4293.2598 -4243.4873 4293.0435 -4243.2607 4292.8115 C-4243.2197 4292.7935 -4243.1929 4292.7593 -4243.1738 4292.7192 C-4243.1475 4292.6919 -4243.1221 4292.665 -4243.0967 4292.6367 C-4243.1553 4292.6377 L-4243.1514 4292.5713 -4243.1641 4292.4912 -4243.2061 4292.3809 C-4243.6162 4292.5537 -4243.9297 4292.0596 -4244.1934 4292.0518 C-4243.9326 4293.0132 -4245.0923 4292.2744 -4245.4238 4292.5703 C-4245.8071 4292.665 L-4245.9502 4292.667 L-4245.9795 4292.5615 -4245.9385 4292.4292 -4245.7197 4292.2393 C-4245.9023 4292.4287 -4246.5107 4292.3623 -4246.4541 4292.6709 C-4247.8423 4292.6846 L-4247.8857 4292.6455 -4247.9287 4292.5967 -4247.9609 4292.5269 C-4248.0088 4292.5879 -4248.0166 4292.6377 -4248.0107 4292.6865 C-4254.0576 4292.748 L-4253.7593 4292.8232 -4253.501 4293.0435 -4253.1934 4293.1494 C-4253.6553 4293.7876 -4252.6895 4293.2646 -4252.8247 4293.8677 C-4253.0322 4294.0869 -4253.3359 4294.0181 -4253.5166 4293.8716 C-4253.584 4294.1763 -4253.3262 4294.4463 -4253.3564 4294.8101 C-4252.5938 4295.1934 -4252.4766 4293.7349 -4251.7314 4293.957 C-4251.7607 4294.3223 -4251.9912 4294.6416 -4251.5029 4294.5923 C-4251.627 4294.6709 L-4250.8457 4294.2622 -4251.0186 4295.4966 -4250.5264 4294.4951 C-4250.5391 4295.0225 L-4250.1846 4294.625 -4249.4951 4294.6221 -4249.1064 4294.5493 C-4249.1299 4294.6509 L-4248.0391 4294.0479 -4248.5176 4294.5225 -4247.293 4294.2705 C-4247.8564 4294.8853 L-4247.4346 4295.1396 -4247.3389 4294.4712 -4247.0361 4294.54 C-4247.0576 4294.6416 -4246.9873 4295.0269 -4247.2734 4295.123 C-4245.7881 4294.1851 L-4245.4336 4293.7876 -4245.8604 4293.7979 -4245.915 4293.5732 Cf-4244.0361 4294.3574 m-4243.957 4294.3853 -4243.8682 4294.3975 -4243.7627 4294.3774 C-4243.8643 4294.3604 -4243.9521 4294.3574 -4244.0361 4294.3574 Cf-4254.4824 4292.7524 m-4254.0576 4292.748 L-4254.1895 4292.7158 -4254.3262 4292.7061 -4254.4824 4292.7524 Cf-4241.9063 4293.2061 m-4242.1641 4292.9336 -4241.7139 4292.8247 -4241.6689 4292.6221 C-4242.5913 4292.6318 L-4242.5869 4292.8354 -4242.6787 4293.0625 -4242.6602 4293.248 C-4241.9063 4293.2061 Lf-4242.8584 4292.249 m-4242.8896 4292.3896 -4242.9873 4292.5166 -4243.0967 4292.6367 C-4242.5913 4292.6318 L-4242.5947 4292.479 -4242.6514 4292.3408 -4242.8584 4292.249 Cf-4242.7607 4303.0894 m-4242.9238 4303.1079 L-4243.1709 4303.2646 L-4242.7607 4303.0894 Lf-4245.3154 4302.1963 m-4245.1201 4302.5044 -4244.75 4302.2705 -4244.626 4302.1924 C-4245.0527 4302.2017 -4244.8682 4302.0854 -4245.3154 4302.1963 Cf-4244.7881 4305.4966 m-4245.1992 4305.6709 L-4245.1611 4305.7314 L-4244.7881 4305.4966 Lf-4257.6221 4294.8281 m-4257.6895 4294.8398 -4257.7549 4294.8486 -4257.8232 4294.8623 C-4257.7314 4294.8643 -4257.6709 4294.8496 -4257.6221 4294.8281 Cf-4254.0947 4294.3252 m-4255.0752 4293.7334 -4253.4521 4293.833 -4253.7598 4293.0752 C-4254.2939 4293.3262 L-4254.248 4293.123 L-4254.8994 4293.1895 L-4254.7656 4293.5376 -4254.665 4293.5591 -4254.6943 4293.9248 C-4255.5635 4293.7822 -4254.9683 4293.4912 -4255.6055 4293.0303 C-4256.5771 4293.0967 L-4256.498 4292.9873 L-4256.5801 4292.9951 -4256.6162 4293.041 -4256.6445 4293.1006 C-4259.917 4293.3281 L-4260.5127 4293.6182 -4259.5879 4293.9854 -4260.0273 4294.5225 C-4259.3369 4294.521 -4258.3115 4294.9102 -4258.2529 4294.1816 C-4258.2759 4294.2822 -4258.3213 4294.4829 -4258.1816 4294.5688 C-4257.7822 4293.9692 L-4258.1631 4293.7783 L-4257.7617 4293.1807 -4256.4658 4293.3135 -4256.2314 4293.6846 C-4256.9683 4293.8887 -4256.5986 4294.6084 -4257.625 4294.2173 C-4257.5791 4294.4019 -4257.3911 4294.7271 -4257.6221 4294.8281 C-4256.4189 4294.6157 -4255.3408 4294.9478 -4254.0947 4294.3252 Cf-4266.1631 4294.6763 m-4266.1533 4294.6104 L-4266.1753 4294.6455 -4266.1826 4294.6719 -4266.1631 4294.6763 Cf-4265.7593 4294.7661 m-4265.1729 4294.0518 L-4266.0869 4294.1094 L-4266.1533 4294.6104 L-4266.0728 4294.4829 -4265.752 4294.2295 -4265.6279 4294.4253 C-4265.7593 4294.7661 Lf-4264.4922 4293.6201 m-4264.9639 4293.833 -4264.9385 4294.4229 -4264.6807 4294.6919 C-4265.1143 4294.9648 -4264.9097 4294.0576 -4265.208 4294.6807 C-4265.1982 4295.1064 -4264.6641 4294.8564 -4264.541 4294.7783 C-4264.4922 4293.6201 Lf-4261.0078 4293.9307 m-4261.1406 4294.1753 L-4260.8135 4294.2393 L-4261.0078 4293.9307 Lf-4261.1406 4294.1753 m-4261.4658 4294.1094 L-4261.4434 4294.291 -4261.4209 4294.4683 -4261.3682 4294.5923 C-4261.1406 4294.1753 Lf-4262.3174 4293.9395 m-4262.4551 4293.8955 -4262.6074 4293.8623 -4262.792 4293.8462 C-4262.3174 4293.9395 Lf-4261.9463 4294.0894 m-4261.957 4294.0127 L-4262.3174 4293.9395 L-4262.1846 4293.9854 -4262.0654 4294.0356 -4261.9463 4294.0894 Cf-4261.4658 4294.1094 m-4261.5186 4293.6963 -4261.5801 4293.2622 -4262.0498 4293.3774 C-4261.957 4294.0127 L-4261.4658 4294.1094 Lf-4247.7783 4304.874 m-4248.1494 4305.1079 L-4248.1104 4305.1719 L-4247.7393 4304.9375 L-4247.7783 4304.874 Lf-4249.9209 4304.4966 m-4250.0127 4304.5688 -4250.082 4304.6455 -4250.1455 4304.7236 C-4250.0488 4304.6782 -4249.9717 4304.6094 -4249.9209 4304.4966 Cf-4251.5137 4307.3188 m-4251.9502 4306.9033 -4250.9111 4306.7695 -4251.7197 4306.5854 C-4251.791 4306.1982 -4251.4121 4305.6992 -4251.0313 4305.8916 C-4251.0615 4306.2559 -4251.4023 4306.125 -4251.168 4306.4966 C-4250.915 4306.0752 -4250.8193 4306.3623 -4250.9072 4305.8135 C-4250.4814 4305.4712 -4250.4346 4305.0811 -4250.1455 4304.7236 C-4250.6602 4304.9648 -4251.7402 4304.4019 -4252.3926 4305.1064 C-4252.7529 4305.7661 -4252.5342 4306.667 -4252.5361 4307.6201 C-4252.4814 4307.8438 -4251.5488 4307.9502 -4251.5137 4307.3188 Cf-4250.8262 4308.2705 m-4250.624 4308.3174 -4250.5625 4308.2793 -4250.4385 4308.1997 C-4250.4717 4307.874 -4250.6631 4308.2559 -4250.8262 4308.2705 Cf-4255.4717 4301.0942 m-4255.5107 4301.2295 -4255.876 4301.3975 -4255.7979 4301.6318 C-4255.2432 4301.4604 L-4255.373 4301.4385 -4255.4189 4301.2725 -4255.4717 4301.0942 Cf-4255 4301.3877 m-4255.2432 4301.4604 L-4255.1826 4301.4727 -4255.1074 4301.4541 -4255 4301.3877 Cf-4255.498 4301.0093 m-4255.4893 4301.0376 -4255.4814 4301.0664 -4255.4717 4301.0942 C-4255.4639 4301.0654 -4255.4658 4301.0356 -4255.498 4301.0093 Cf-4263.6631 4293.7017 m-4263.6553 4293.4404 -4263.9023 4293.5967 -4264.0264 4293.6743 C-4263.9258 4293.6963 -4263.7842 4293.7822 -4263.6631 4293.7017 Cf-4272.9639 4294.7314 m-4273.1826 4294.5225 L-4273.1055 4294.6475 -4273.0654 4294.709 -4272.9639 4294.7314 Cf-4276.3281 4301.8765 m-4276.334 4301.9272 -4276.3506 4301.9692 -4276.3721 4302.0093 C-4276.3506 4301.9771 -4276.335 4301.9336 -4276.3281 4301.8765 cf-4276.3721 4302.0093 m-4276.5215 4302.2271 -4276.9814 4301.8887 -4277.1475 4302.2192 C-4277.126 4302.1187 L-4277.4346 4302.3145 L-4277.1455 4302.2856 -4276.5391 4302.3267 -4276.3721 4302.0093 CfUUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 40)0 Au0 J 0 j 1 w 4 M []0 d0 XR-8148.4521 8179.5977 m-7756.6909 8179.5977 L-7756.6909 8087.9082 L-8148.4521 8087.9082 L-8148.4521 8179.5977 Ln0 O0.713893 0.653498 0.668727 0.767117 0.113725 0.113725 0.105882 Xa1 XR-7761.3535 8121.9209 m-7763.1113 8121.9209 -7882.7817 8124.0918 -7958.6519 8125.4717 C-7979.4663 8124.5352 -8000.2529 8123.2227 -8021.0547 8121.502 C-8023.5327 8121.1514 -8026.3472 8120.7949 -8027.8584 8120.6006 c-8028.7114 8120.4863 -8029.5732 8120.3857 -8030.4375 8120.293 C-8029.9829 8120.0605 -8029.54 8119.7998 -8029.1167 8119.4941 C-8028.25 8118.7324 -8027.3955 8117.832 -8026.8735 8116.4541 C-8026.8979 8116.1689 -8026.6997 8115.8193 -8026.6523 8115.5293 c-8026.5532 8114.9121 -8026.6382 8114.1631 -8026.7319 8113.627 c-8026.7939 8113.2725 -8026.9551 8113.0254 -8027.0259 8112.7314 c-8027.0488 8112.6348 -8026.9785 8112.5762 -8027.0059 8112.502 c-8027.1396 8112.1484 -8027.5313 8111.5518 -8027.7539 8111.2266 c-8027.8579 8111.0762 -8027.9873 8110.9775 -8028.1035 8110.8193 c-8028.1196 8110.7969 -8028.0669 8110.7354 -8028.0928 8110.7061 c-8028.6484 8110.0664 -8029.4312 8109.541 -8030.3955 8109.0762 c-8030.4546 8109.0508 -8030.4639 8109.1445 -8030.5366 8109.0869 C-8030.8213 8108.9658 -8031.1143 8108.8535 -8031.3945 8108.791 c-8032.8965 8108.4629 -8034.7163 8108.8477 -8035.8027 8109.6328 c-8036.7998 8110.3555 -8037.5308 8111.8623 -8037.4678 8113.0742 c-8037.4126 8114.1094 -8036.6665 8115.2578 -8035.4458 8116.0352 c-8034.3604 8116.7295 -8033.0479 8116.9834 -8032.2373 8116.3594 C-8032.6499 8116.2295 -8032.9688 8116.0332 -8033.0811 8115.7529 C-8033.0908 8115.4766 -8033.0967 8115.1992 -8032.8755 8114.8594 C-8032.4517 8114.4863 -8031.7925 8114.248 -8031.1235 8114.7158 c-8030.1846 8115.3701 -8030.0728 8116.7891 -8031.0342 8117.5361 C-8031.3086 8117.6406 -8031.5586 8117.8789 -8031.75 8117.9834 c-8032.1826 8118.2188 -8032.5586 8118.3857 -8032.9751 8118.543 c-8034.0938 8118.959 -8035.4839 8119.418 -8036.5327 8119.5977 c-8036.7114 8119.6289 -8036.8989 8119.6475 -8037.0806 8119.6738 C-8040.4038 8119.3789 -8043.54 8119.0693 -8046.1416 8118.5264 C-8046.1138 8118.5234 -8046.0908 8118.5244 -8046.0586 8118.5205 c-8045.2378 8118.4199 -8044.6309 8118.2529 -8043.9043 8118.0137 c-8043.6328 8117.9238 -8043.3184 8117.9121 -8043.0825 8117.8154 c-8042.9985 8117.7852 -8042.9409 8117.6602 -8042.8472 8117.6133 c-8042.5371 8117.4609 -8042.2129 8117.3662 -8041.8999 8117.1602 c-8040.9097 8116.5059 -8039.8774 8115.3359 -8039.7617 8113.8682 C-8039.9463 8112.8262 -8040.3643 8111.8525 -8041.5938 8111.0781 c-8041.7217 8110.9961 -8041.8662 8110.96 -8041.9995 8110.8828 C-8043.8516 8110.2168 -8045.5913 8111.3135 -8045.8066 8113.2061 C-8045.7119 8113.375 -8045.6499 8113.5527 -8045.6616 8113.752 C-8045.2939 8114.4492 -8043.9033 8115.0557 -8043.3057 8114.6143 C-8043.6133 8114.5566 -8043.7495 8114.5254 -8043.8638 8114.2637 C-8043.8892 8113.6074 -8043.0679 8113.4336 -8042.6528 8114.0176 C-8042.4966 8114.7021 -8042.7676 8115.2529 -8043.2939 8115.8105 c-8043.5068 8116.0361 -8043.7837 8116.1689 -8044.0566 8116.3545 c-8044.4199 8116.6016 -8044.7495 8116.8828 -8045.1118 8117.0332 c-8045.4385 8117.1689 -8045.8115 8117.2012 -8046.1445 8117.2891 c-8046.2349 8117.3105 -8046.2969 8117.3613 -8046.3706 8117.3789 c-8046.6274 8117.4336 -8046.8359 8117.5146 -8047.0879 8117.5469 c-8047.4209 8117.585 -8047.7739 8117.5488 -8048.1528 8117.585 c-8048.3398 8117.6055 -8048.5195 8117.6953 -8048.7144 8117.7109 c-8048.8413 8117.7207 -8048.9722 8117.7207 -8049.1025 8117.7227 C-8051.8135 8116.8213 -8054.0957 8115.6094 -8055.9814 8113.2793 c-8059.6704 8108.7227 -8054.0415 8104.5566 -8052.9902 8108.5977 C-8054.9668 8110.0361 -8058.5874 8113.1201 -8050.8892 8113.2471 C-8042.6045 8111.7549 -8049.6982 8096.4922 -8059.6509 8100.5576 c-8068.0151 8103.9746 -8064.1328 8112.6387 -8058.4658 8116.293 c-8049.9902 8121.7559 -8040.5376 8122.4922 -8030.7012 8122.584 C-8041.3862 8127.0488 -8055.9243 8124.4033 -8063.9897 8116.3809 c-8068.1011 8112.293 -8072.0435 8105.9912 -8070.8193 8099.8896 c-8069.5742 8093.6816 -8063.1616 8099.4238 -8068.0957 8099.4424 C-8067.8896 8105.0059 -8054.6387 8098.9648 -8060.9307 8090.8281 c-8066.6011 8083.4922 -8076.5698 8091.5225 -8078.3242 8097.9482 c-8084.0239 8118.8359 -8054.3545 8124.7129 -8040.3813 8125.4238 C-8052.1143 8128.7754 -8068.3892 8126.2734 -8079.5547 8121.7852 c-8083.9663 8120.0098 -8088.9707 8116.8926 -8091.5479 8112.7773 c-8095.4619 8106.5264 -8088.4268 8102.2842 -8087.8955 8104.4033 c-8087.4697 8106.0957 -8093.3765 8106.623 -8088.8267 8109.6992 c-8084.8091 8112.418 -8081.2759 8106.209 -8080.4619 8103.0781 c-8076.6782 8088.5322 -8098.0601 8090.4609 -8100.3667 8104.1982 c-8105.5103 8134.8271 -8059.3071 8128.457 -8043.4902 8127.5928 C-8043.7124 8127.7617 -8043.9331 8127.9189 -8044.1543 8128.082 C-8049.4346 8129.585 -8054.6416 8131.7861 -8059.46 8134.5469 C-8073.9546 8136.2813 -8086.7495 8125.8906 -8102.5913 8120.6152 c-8111.5635 8117.6289 -8122.0933 8121.9277 -8130.2778 8117.3145 c-8134.6235 8114.8545 -8137.6982 8112.2656 -8139.2959 8107.0518 C-8140.9092 8098.1104 -8131.2979 8096.9717 -8133.1396 8101.6416 C-8134.8428 8101.9688 -8134.1772 8100.834 -8135.3354 8100.8418 C-8139.2861 8104.5479 -8131.0244 8109.7314 -8127.1606 8106.4316 c-8120.4497 8100.7031 -8125.2563 8092.332 -8132.0864 8090.0557 C-8150.5703 8090.25 -8151 8112.8613 -8145.0474 8125.3594 c-8129.2217 8158.585 -8095.1445 8146.582 -8067.5376 8139.5479 C-8071.2817 8142.0732 -8073.8975 8145.6426 -8076.5747 8149.2158 c-8081.2197 8155.416 -8083.6694 8164.8545 -8075.0024 8168.8613 C-8074.1616 8172.9834 -8072.6392 8176.8857 -8068.5669 8178.7695 c-8063.7471 8181 -8058.8457 8178.5586 -8057.5508 8173.4512 C-8057.4766 8170.6729 -8058.1968 8168.8262 -8060.5938 8167.3887 c-8062.1733 8166.4414 -8067.5176 8166.5313 -8064.8574 8169.5342 C-8062.9663 8168.041 -8063.1323 8170.4873 -8064.0112 8171.6006 C-8066.8823 8171.5693 -8067.5771 8169.4873 -8067.5156 8166.5186 c-8067.5151 8166.4961 -8067.5142 8166.4697 -8067.5146 8166.4434 C-8067.3574 8159.1367 -8066.1343 8153.3242 -8064.0718 8148.7285 C-8064.0713 8148.7305 -8064.0708 8148.7314 -8064.0698 8148.7324 c-8063.8242 8149.2158 -8063.4819 8149.5 -8063.2485 8149.8945 c-8063.1729 8150.0234 -8063.2495 8150.1387 -8063.1753 8150.2334 c-8062.8262 8150.6855 -8061.9971 8151.3701 -8061.5313 8151.7402 c-8061.3135 8151.9121 -8061.0835 8151.998 -8060.8477 8152.1729 c-8060.8125 8152.1973 -8060.8613 8152.3105 -8060.8115 8152.3418 c-8059.7256 8153.0176 -8058.3638 8153.4277 -8056.7661 8153.6709 C-8056.6699 8153.6816 -8056.6978 8153.543 -8056.5669 8153.5938 C-8056.1035 8153.6406 -8055.6309 8153.6738 -8055.1982 8153.6387 c-8052.8862 8153.4453 -8050.4316 8152.084 -8049.2129 8150.4668 c-8048.0942 8148.9854 -8047.7095 8146.4854 -8048.3379 8144.7646 c-8048.8774 8143.2949 -8050.4629 8141.9697 -8052.5684 8141.3906 c-8054.4419 8140.873 -8056.4492 8141.084 -8057.3408 8142.3477 C-8056.6875 8142.3535 -8056.1406 8142.4941 -8055.8545 8142.8477 C-8055.7178 8143.2422 -8055.5859 8143.6387 -8055.7539 8144.2266 C-8056.2002 8144.9541 -8057.0469 8145.5898 -8058.2178 8145.2129 c-8059.4604 8144.8135 -8060.2119 8143.5781 -8060.0532 8142.3486 C-8054.7505 8136.2031 -8047.0386 8133.6465 -8038.2539 8133.0537 C-8038.2886 8133.0684 -8038.3218 8133.0801 -8038.3604 8133.0977 c-8039.5015 8133.6064 -8040.3027 8134.1143 -8041.2437 8134.7832 c-8041.5957 8135.0332 -8042.0439 8135.1914 -8042.3428 8135.4316 c-8042.4492 8135.5166 -8042.4766 8135.7227 -8042.5913 8135.8301 c-8042.9707 8136.1895 -8043.3975 8136.4688 -8043.7563 8136.9063 c-8044.8945 8138.2891 -8045.8662 8140.4346 -8045.3809 8142.6016 C-8044.6523 8144.0234 -8043.6162 8145.2441 -8041.4995 8145.8145 c-8041.2788 8145.875 -8041.0542 8145.8633 -8040.8276 8145.918 C-8037.8613 8146.0537 -8035.8369 8143.7021 -8036.3667 8140.875 C-8036.5781 8140.6738 -8036.7471 8140.4434 -8036.8184 8140.1514 C-8037.6582 8139.3105 -8039.9336 8139.0508 -8040.5996 8139.9521 C-8040.1309 8139.9004 -8039.9199 8139.8848 -8039.6387 8140.2109 C-8039.3105 8141.1475 -8040.4189 8141.7617 -8041.2759 8141.1045 C-8041.8052 8140.1865 -8041.6587 8139.2695 -8041.1479 8138.2314 c-8040.9409 8137.8105 -8040.5991 8137.5 -8040.2881 8137.1104 c-8039.8735 8136.5938 -8039.5239 8136.041 -8039.0669 8135.6621 c-8038.6563 8135.3232 -8038.1318 8135.1094 -8037.6899 8134.8369 c-8037.5708 8134.7646 -8037.5039 8134.6641 -8037.4043 8134.6074 c-8037.0596 8134.4121 -8036.7935 8134.2031 -8036.4438 8134.0469 c-8035.9819 8133.8418 -8035.4561 8133.7373 -8034.9253 8133.5146 c-8034.6636 8133.4063 -8034.4443 8133.1953 -8034.1709 8133.085 c-8034.0063 8133.0215 -8033.8311 8132.9688 -8033.6592 8132.9141 C-8032.2695 8132.918 -8030.8613 8132.957 -8029.4375 8133.0342 c-8027.7285 8133.0801 -8025.4653 8133.0938 -8023.5728 8133.166 C-7991.4688 8129.6533 -7958.98 8128.7305 -7926.4746 8128.2822 C-7853.0664 8129.6152 -7762.8774 8131.248 -7761.3535 8131.248 c-7758.7773 8131.248 -7756.6909 8129.1602 -7756.6909 8126.584 c-7756.6909 8124.0078 -7758.7773 8121.9209 -7761.3535 8121.9209 cfU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -( 15 pt. Round/ Adobe Calligraphic Brush Tool/ Touch Calligraph) -(ic Brush/ Adobe ArtOnPath Brush Tool/ Chalk - Scribble/ Adobe ) -(ArtOnPath Brush Tool/ Floral Stem/ Adobe PatternOnPath Brush T) -(ool/ Decorative Border/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(15 pt. Round)(1 15 15 100 100 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Oval)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Round)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Oval)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(7 pt. Round)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(Touch Calligraphic Brush)(1 12 12 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Chalk - Scribble)(1 / Unnamed 3/ / / / / 5 0 0 0 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Floral Stem)(1 / Unnamed Brush Pat 40/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Decorative Border)(1 / New Pattern 1/ / New Pattern 2/ / / 5 0 0.00392157 0.00392) -(157 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 1 1 1 Xa(White)Pc0.713893 0.653498 0.668727 0.767117 0.113725 0.113725 0.105882 Xa(Black)Pc0.04477 1 1 0.005188 0.890196 0.023529 0.07451 Xa(CMYK Red)Pc0.031373 0.006714 0.969787 0 1 0.929412 0 Xa(CMYK Yellow)Pc0.856748 0.15436 1 0.028595 0 0.588235 0.25098 Xa(CMYK Green)Pc0.739284 0.2262 0 0 0 0.623529 0.890196 Xa(CMYK Cyan)Pc0.990692 1 0.122805 0.02884 0.192157 0.152941 0.513725 Xa(CMYK Blue)Pc0.032715 1 0.126467 0 0.901961 0 0.494118 Xa(CMYK Magenta)Pc0.176211 1 1 0.081453 0.745098 0.086275 0.133333 Xa(C=15 M=100 Y=90 K=10)Pc0.034882 0.943694 0.946075 0.000885 0.901961 0.2 0.164706 Xa(C=0 M=90 Y=85 K=0)Pc0.032135 0.842802 1 0.002289 0.913725 0.305882 0.105882 Xa(C=0 M=80 Y=95 K=0)Pc0.019013 0.499672 1 0 0.952941 0.572549 0 Xa(C=0 M=50 Y=100 K=0)Pc0.010864 0.331731 0.915038 0 0.976471 0.698039 0.2 Xa(C=0 M=35 Y=85 K=0)Pc0.039765 0.015869 0.974273 0 0.988235 0.917647 0.062745 Xa(C=5 M=0 Y=90 K=0)Pc0.165621 0.026917 1 0 0.870588 0.862745 0 Xa(C=20 M=0 Y=100 K=0)Pc0.473823 0.039063 1 0 0.584314 0.756863 0.121569 Xa(C=50 M=0 Y=100 K=0)Pc0.765652 0.060761 1 0.003662 0.227451 0.666667 0.207843 Xa(C=75 M=0 Y=100 K=0)Pc0.8663 0.19559 1 0.06125 0 0.552941 0.211765 Xa(C=85 M=10 Y=100 K=10)Pc0.903563 0.34049 1 0.274174 0 0.4 0.2 Xa(C=90 M=30 Y=95 K=30)Pc0.770352 0.053437 0.81326 0 0.184314 0.67451 0.4 Xa(C=75 M=0 Y=75 K=0)Pc0.801694 0.141115 0.448127 0.00354 0 0.631373 0.603922 Xa(C=80 M=10 Y=45 K=0)Pc0.682155 0.169833 0 0 0.211765 0.662745 0.882353 Xa(C=70 M=15 Y=0 K=0)Pc0.858701 0.527977 0.003998 0 0.113725 0.443137 0.721569 Xa(C=85 M=50 Y=0 K=0)Pc1 0.999908 0.125826 0.021759 0.176471 0.180392 0.513725 Xa(C=100 M=95 Y=5 K=0)Pc0.986023 0.988617 0.325902 0.256657 0.160784 0.137255 0.360784 Xa(C=100 M=100 Y=25 K=25)Pc0.74966 1 0.105745 0.017243 0.4 0.141176 0.513725 Xa(C=75 M=100 Y=0 K=0)Pc0.485145 1 0.112367 0.009125 0.584314 0.105882 0.505882 Xa(C=50 M=100 Y=0 K=0)Pc0.3187 1 0.420294 0.105898 0.639216 0.098039 0.356863 Xa(C=35 M=100 Y=35 K=10)Pc0.105745 1 0.570489 0.010895 0.839216 0.043137 0.321569 Xa(C=10 M=100 Y=50 K=0)Pc0.027832 0.979339 0.261875 0 0.905882 0.113725 0.45098 Xa(C=0 M=95 Y=20 K=0)Pc0.21268 0.229831 0.378454 0 0.796078 0.733333 0.627451 Xa(C=25 M=25 Y=40 K=0)Pc0.359808 0.432197 0.494148 0.044282 0.643137 0.541176 0.482353 Xa(C=40 M=45 Y=50 K=5)Pc0.476844 0.506493 0.63299 0.204471 0.482353 0.415686 0.345098 Xa(C=50 M=50 Y=60 K=25)Pc0.504417 0.59942 0.671595 0.368475 0.388235 0.305882 0.258824 Xa(C=55 M=60 Y=65 K=40)Pc0.211032 0.37702 0.674006 0.009155 0.792157 0.619608 0.403922 Xa(C=25 M=40 Y=65 K=0)Pc0.275669 0.497444 0.794705 0.078157 0.694118 0.498039 0.290196 Xa(C=30 M=50 Y=75 K=10)Pc0.329717 0.611261 0.850797 0.209751 0.576471 0.376471 0.215686 Xa(C=35 M=60 Y=80 K=25)Pc0.366796 0.656703 0.961944 0.323552 0.490196 0.305882 0.141176 Xa(C=40 M=65 Y=90 K=35)Pc0.395148 0.701625 1 0.448371 0.407843 0.235294 0.066667 Xa(C=40 M=70 Y=100 K=50)Pc0.490425 0.699611 0.818143 0.650874 0.262745 0.160784 0.094118 Xa(C=50 M=70 Y=80 K=70)PcBb2 (Fade to Black) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Fade to Black)PcBb0 0 0 0 Bh2 (Super Soft Black Vignette) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Super Soft Black Vignette)PcBb2 (Green, Yellow, Orange) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Green, Yellow, Orange)PcBb0 0 0 0 Bh2 (Purple Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Purple Radial)Pc(Laguna) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Laguna)Pc0.77145 0.272892 0 0 0 0.588242 0.839218 (HP_Blue RGB_\(2995 U\)) 0 1 Xx(HP_Blue RGB_\(2995 U\))Pc0.77145 0.272892 0 0 0 0.588242 0.839218 (HP_Blue RGB_\(2995 U\) 1) 0 1 Xk(HP_Blue RGB_\(2995 U\) 1)Pc0.77145 0.272892 0 0 0 0.588235 0.839216 Xa(HP)Pc0.713893 0.653498 0.668727 0.767117 0.113725 0.113725 0.105882 Xa(C=0 M=0 Y=0 K=100)Pc0.678309 0.611231 0.614221 0.507713 0.235294 0.235294 0.231373 Xa(C=0 M=0 Y=0 K=90)Pc0.631464 0.551659 0.554467 0.300084 0.341176 0.341176 0.337255 Xa(C=0 M=0 Y=0 K=80)Pc0.566186 0.488197 0.480781 0.150912 0.439216 0.435294 0.435294 Xa(C=0 M=0 Y=0 K=70)Pc0.494789 0.410681 0.411505 0.050507 0.529412 0.529412 0.529412 Xa(C=0 M=0 Y=0 K=60)Pc0.41059 0.332647 0.345129 0.006928 0.615686 0.615686 0.611765 Xa(C=0 M=0 Y=0 K=50)Pc0.310948 0.246555 0.251835 0 0.698039 0.698039 0.698039 Xa(C=0 M=0 Y=0 K=40)Pc0.220584 0.17322 0.178317 0 0.776471 0.776471 0.776471 Xa(C=0 M=0 Y=0 K=30)Pc0.131319 0.100679 0.105592 0 0.854902 0.854902 0.854902 Xa(C=0 M=0 Y=0 K=20)Pc0.057008 0.040894 0.041199 0 0.929412 0.929412 0.929412 Xa(C=0 M=0 Y=0 K=10)Pc0.024048 0.014893 0.014893 0 0.964706 0.964706 0.964706 Xa(C=0 M=0 Y=0 K=5)Pc0.04477 1 1 0.005188 0.890196 0.023529 0.07451 Xa(C=0 M=100 Y=100 K=0)Pc0.033661 0.783383 1 0.002319 0.917647 0.356863 0.047059 Xa(C=0 M=75 Y=100 K=0)Pc0.017639 0.086519 0.99588 0 1 0.870588 0 Xa(C=0 M=10 Y=95 K=0)Pc0.851499 0.141756 1 0.024598 0 0.596078 0.227451 Xa(C=85 M=10 Y=100 K=0)Pc1 0.949706 0.099031 0.013001 0.152941 0.203922 0.545098 Xa(C=100 M=90 Y=0 K=0)Pc0.584832 0.941009 0.061372 0.003052 0.509804 0.211765 0.54902 Xa(C=60 M=90 Y=0 K=0)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 A0 O0 0 0 0 1 1 1 Xa0 J 0 j 1 w 10 M []0 d0 XR0 -20.084 m131.5 -20.084 L131.5 7.04368 L0 7.04368 l0 -20.084 Lfu*u0.638788 0.555108 0.526177 0.275181 0.345098 0.34902 0.356863 Xa6.52885 -7.49645 m6.83645 -7.69365 7.27835 -7.84315 7.75145 -7.84315 c8.45365 -7.84315 8.86375 -7.47205 8.86375 -6.93585 c8.86375 -6.44665 8.58015 -6.15465 7.86235 -5.88705 c6.99415 -5.57165 6.45805 -5.11362 6.45805 -4.37241 c6.45805 -3.54379 7.14405 -2.92856 8.17775 -2.92856 c8.71385 -2.92856 9.11625 -3.05454 9.34525 -3.18881 c9.15575 -3.74887 L8.99025 -3.64633 8.63525 -3.49643 8.15385 -3.49643 c7.42825 -3.49643 7.15235 -3.93003 7.15235 -4.29331 c7.15235 -4.79038 7.47565 -5.03452 8.20905 -5.31865 c9.10845 -5.66635 9.55815 -6.09995 9.55815 -6.88115 c9.55815 -7.70155 8.95855 -8.41925 7.70415 -8.41925 c7.19145 -8.41925 6.63135 -8.26105 6.34765 -8.07165 C6.52885 -7.49645 lf*U*u10.4801 -5.76105 m10.4801 -5.27185 10.4644 -4.87729 10.4488 -4.51401 c11.064 -4.51401 L11.1036 -5.16925 L11.1192 -5.16925 L11.3956 -4.70346 11.8531 -4.43491 12.4762 -4.43491 c13.4068 -4.43491 14.1012 -5.21615 14.1012 -6.36855 c14.1012 -7.74055 13.2569 -8.41925 12.358 -8.41925 c11.8531 -8.41925 11.4112 -8.19855 11.1822 -7.81965 c11.1666 -7.81965 L11.1666 -9.89385 L10.4801 -9.89385 L10.4801 -5.76105 lf1 D11.1666 -6.77865 m11.1666 -6.88115 11.1744 -6.97595 11.1983 -7.06185 c11.3243 -7.54335 11.7423 -7.87435 12.2393 -7.87435 c12.9732 -7.87435 13.399 -7.27575 13.399 -6.39975 c13.399 -5.64195 12.9967 -4.98764 12.2633 -4.98764 c11.7896 -4.98764 11.3399 -5.31865 11.2139 -5.83925 c11.19 -5.92615 11.1666 -6.02865 11.1666 -6.11555 C11.1666 -6.77865 lf*U*u0 D18.4234 -6.39195 m18.4234 -7.80405 17.4371 -8.41925 16.522 -8.41925 c15.4967 -8.41925 14.692 -7.66145 14.692 -6.45445 c14.692 -5.18495 15.5362 -4.43491 16.585 -4.43491 c17.6817 -4.43491 18.4234 -5.23175 18.4234 -6.39195 cf1 D15.4019 -6.43105 m15.4019 -7.26695 15.8751 -7.89875 16.5538 -7.89875 c17.2164 -7.89875 17.7135 -7.27575 17.7135 -6.41535 c17.7135 -5.76885 17.3897 -4.95639 16.5694 -4.95639 c15.7569 -4.95639 15.4019 -5.71325 15.4019 -6.43105 cf*U*u0 D19.2979 -5.54725 m19.2979 -5.14485 19.2901 -4.82944 19.2667 -4.51401 c19.8819 -4.51401 L19.9215 -5.14485 L19.9371 -5.14485 L20.1265 -4.79038 20.5684 -4.43491 21.1993 -4.43491 c21.7281 -4.43491 22.5484 -4.75131 22.5484 -6.06085 c22.5484 -8.33235 L21.8541 -8.33235 L21.8541 -6.13115 L21.8541 -5.51595 21.6251 -5.00327 20.9708 -5.00327 c20.5211 -5.00327 20.1661 -5.32655 20.0396 -5.71325 c20.0079 -5.80015 19.9923 -5.91835 19.9923 -6.03645 c19.9923 -8.33235 L19.2979 -8.33235 L19.2979 -5.54725 lf*U*u23.5811 -7.63025 m23.794 -7.75615 24.1568 -7.89875 24.504 -7.89875 c25.0011 -7.89875 25.2374 -7.65365 25.2374 -7.33045 c25.2374 -6.99935 25.0401 -6.82555 24.5352 -6.63605 c23.8414 -6.38415 23.5177 -6.01305 23.5177 -5.55505 c23.5177 -4.93979 24.0225 -4.43491 24.835 -4.43491 c25.2218 -4.43491 25.5611 -4.53745 25.7662 -4.67221 c25.6007 -5.17705 L25.4508 -5.08237 25.1744 -4.9476 24.8194 -4.9476 c24.4093 -4.9476 24.1886 -5.18495 24.1886 -5.46905 c24.1886 -5.78455 24.4093 -5.92615 24.9063 -6.12335 c25.5611 -6.36855 25.9083 -6.69955 25.9083 -7.26695 c25.9083 -7.94565 25.3795 -8.41925 24.4884 -8.41925 c24.0699 -8.41925 23.6837 -8.30895 23.4151 -8.15075 C23.5811 -7.63025 lf*U*u30.2545 -6.39195 m30.2545 -7.80405 29.2681 -8.41925 28.3531 -8.41925 c27.3277 -8.41925 26.523 -7.66145 26.523 -6.45445 c26.523 -5.18495 27.3673 -4.43491 28.4161 -4.43491 c29.5128 -4.43491 30.2545 -5.23175 30.2545 -6.39195 cf1 D27.233 -6.43105 m27.233 -7.26695 27.7061 -7.89875 28.3848 -7.89875 c29.0474 -7.89875 29.5445 -7.27575 29.5445 -6.41535 c29.5445 -5.76885 29.2208 -4.95639 28.4005 -4.95639 c27.588 -4.95639 27.233 -5.71325 27.233 -6.43105 cf*U*u0 D31.129 -5.70545 m31.129 -5.25615 31.1212 -4.86948 31.0977 -4.51401 c31.7052 -4.51401 L31.7364 -5.27185 L31.7603 -5.27185 L31.9337 -4.75913 32.3599 -4.43491 32.8253 -4.43491 c32.8961 -4.43491 32.9512 -4.44272 33.0147 -4.45151 c33.0147 -5.10581 L32.9434 -5.09018 32.8726 -5.09018 32.7779 -5.09018 c32.2887 -5.09018 31.9415 -5.45245 31.8472 -5.97395 c31.8311 -6.06865 31.8233 -6.18685 31.8233 -6.29725 c31.8233 -8.33235 L31.129 -8.33235 L31.129 -5.70545 lf*U*u34.0948 -6.54915 m34.1104 -7.48865 34.7022 -7.87435 35.4044 -7.87435 c35.9014 -7.87435 36.2091 -7.78845 36.4615 -7.67805 c36.5875 -8.17415 L36.3433 -8.28545 35.9171 -8.41925 35.3096 -8.41925 c34.1344 -8.41925 33.4322 -7.63805 33.4322 -6.48665 c33.4322 -5.33435 34.1104 -4.43491 35.2227 -4.43491 c36.4771 -4.43491 36.8009 -5.52375 36.8009 -6.22595 c36.8009 -6.36855 36.793 -6.47105 36.7769 -6.54915 C34.0948 -6.54915 lf1 D36.13 -6.05205 m36.1383 -5.61855 35.9488 -4.93198 35.1676 -4.93198 c34.4576 -4.93198 34.1578 -5.57165 34.1026 -6.05205 C36.13 -6.05205 lf*U*u0 D40.9493 -2.73129 m40.9493 -7.34605 L40.9493 -7.68585 40.9649 -8.07165 40.9815 -8.33235 c40.3663 -8.33235 L40.3341 -7.66925 L40.3106 -7.66925 L40.1055 -8.09605 39.6475 -8.41925 39.0245 -8.41925 c38.1016 -8.41925 37.3839 -7.63805 37.3839 -6.47885 c37.3761 -5.20835 38.1729 -4.43491 39.0958 -4.43491 c39.6876 -4.43491 40.0743 -4.71128 40.2471 -5.01108 c40.2628 -5.01108 L40.2628 -2.73129 L40.9493 -2.73129 lf1 D40.2628 -6.06865 m40.2628 -5.98175 40.255 -5.86365 40.2315 -5.77675 c40.129 -5.34215 39.7501 -4.97983 39.2296 -4.97983 c38.5118 -4.97983 38.086 -5.61065 38.086 -6.44665 c38.086 -7.22005 38.4727 -7.85875 39.2139 -7.85875 c39.6798 -7.85875 40.1055 -7.54335 40.2315 -7.03065 c40.255 -6.93585 40.2628 -6.84115 40.2628 -6.73085 C40.2628 -6.06865 lf*U*u0 D43.7804 -2.73129 m44.4659 -2.73129 L44.4659 -5.12924 L44.4825 -5.12924 L44.7266 -4.70346 45.168 -4.43491 45.7843 -4.43491 c46.7384 -4.43491 47.4014 -5.22395 47.4014 -6.37635 c47.4014 -7.74055 46.5333 -8.41925 45.6817 -8.41925 c45.129 -8.41925 44.6876 -8.20635 44.3956 -7.70935 c44.38 -7.70935 L44.3399 -8.33235 L43.7481 -8.33235 L43.7647 -8.07165 43.7804 -7.68585 43.7804 -7.34605 C43.7804 -2.73129 lf1 D44.4659 -6.80205 m44.4659 -6.88905 44.4747 -6.97595 44.4981 -7.05405 c44.6241 -7.53545 45.0343 -7.86655 45.5391 -7.86655 c46.2725 -7.86655 46.6993 -7.27575 46.6993 -6.39975 c46.6993 -5.63415 46.3048 -4.97983 45.5548 -4.97983 c45.0899 -4.97983 44.6475 -5.31085 44.5059 -5.83135 c44.4825 -5.91835 44.4659 -6.01305 44.4659 -6.12335 C44.4659 -6.80205 lf*U*u0 D48.5206 -4.51401 m49.3487 -6.77085 L49.4434 -7.02275 49.5382 -7.32265 49.6016 -7.55115 c49.6173 -7.55115 L49.6886 -7.32265 49.7677 -7.03065 49.8614 -6.75425 c50.6192 -4.51401 L51.3526 -4.51401 L50.3116 -7.23565 L49.8145 -8.54525 49.4757 -9.20835 49.002 -9.62635 c48.6554 -9.91835 48.3233 -10.0364 48.1505 -10.0677 c47.9766 -9.49155 L48.1505 -9.43685 48.379 -9.32655 48.5841 -9.15265 c48.7735 -9.00325 49.002 -8.73475 49.168 -8.37925 c49.1993 -8.30895 49.2227 -8.25325 49.2227 -8.21425 c49.2227 -8.17415 49.2071 -8.11945 49.168 -8.03255 c47.7637 -4.51401 L48.5206 -4.51401 lf*UU1379 -881 m1379 655 LN1379 -881 m1379 655 LN1380.2002 -881.0001 m1380.2002 655 LN1379 -881 m1379 655 LN1379 -881 m1379 655 LN1379 -881 m1379 655 LN1379 -881 m1379 655 LN1379 -881 m1379 655 LN1379 -881 m1379 655 LN1379 -881 m1379 655 LN1379 -881 m1379 655 LN1379 -881 m1379 655 LNuu*u0 O0.886137 0.562799 0.04181 0.001068 0.094118 0.423529 0.686275 Xa62.9524 1.77952 m62.9524 1.77952 LF71.1242 5.20784 m77.5333 5.19919 82.7247 -0.005664 82.7151 -6.41539 c82.7064 -12.8254 77.5009 -18.0159 71.0915 -18.0069 c64.6818 -17.9976 59.4914 -12.7924 59.5 -6.383 c59.5093 0.02641 64.7145 5.21683 71.1242 5.20784 CF79.2867 1.75611 m79.2867 1.75611 LF1 D71.1223 3.95298 m68.2643 3.95681 65.6744 2.80165 63.7975 0.930858 c61.9216 -0.940248 60.7587 -3.52696 60.7555 -6.38461 c60.7517 -9.24352 61.9072 -11.8325 63.7776 -13.7087 c65.6488 -15.585 68.2348 -16.7469 71.0934 -16.7517 c73.9514 -16.7552 76.5413 -15.6 78.4175 -13.7292 c80.2935 -11.8588 81.4563 -9.27206 81.4602 -6.41378 c81.464 -3.55583 80.3085 -0.966215 78.4381 0.91033 c76.567 2.78625 73.9802 3.94881 71.1223 3.95298 CF*U*u0 D78.2204 -7.35528 m79.955 -7.35753 L79.9524 -8.81855 L76.4744 -8.81342 L76.4814 -3.81954 L78.2252 -3.82243 l78.2204 -7.35528 Lf72.5363 -7.07184 m69.6664 -9.32225 L67.0496 -7.25845 l66.67 -8.16579 65.7588 -8.79708 64.7043 -8.79548 C62.4651 -8.79227 L62.4718 -3.79999 L64.7113 -3.80286 l65.888 -3.80447 66.7331 -4.55021 67.0509 -5.34791 C69.6751 -3.29116 L70.6459 -4.05614 L68.2423 -5.94104 L68.7014 -6.30334 L71.1054 -4.41877 L72.0759 -5.18375 L69.6719 -7.06865 L70.1316 -7.43062 L72.5382 -5.54669 L72.5414 -3.8141 L74.2833 -3.81633 L74.2791 -7.34886 L76.0136 -7.35142 L76.0117 -8.8128 L72.5337 -8.80798 l72.5363 -7.07184 Lf1 D65.6161 -6.30044 m65.6174 -5.62107 65.1689 -5.23794 64.5353 -5.23698 C64.1464 -5.23633 L64.1439 -7.36072 L64.5222 -7.36072 l65.1115 -7.3617 65.6155 -7.04043 65.6161 -6.30044 CF*UUu*u0.915709 0.639063 0.073304 0.003967 0.101961 0.384314 0.643137 Xa123.9751 -2.56421 m122.7378 3.59877 111.0084 3.98941 103.4473 -0.706003 C103.4473 -1.22455 l110.9997 2.73657 121.7124 2.71248 122.6877 -2.96473 c123.0149 -4.84267 121.9779 -6.79915 120.1254 -7.92582 C120.1254 -9.39876 l122.3539 -8.56497 124.6397 -5.86779 123.9751 -2.56421 CF110.2332 -13.3514 m105.0168 -13.8423 99.5796 -13.0691 98.8181 -8.91002 c98.4455 -6.85997 99.3623 -4.68583 100.5769 -3.33455 C100.5769 -2.61291 l98.389 -4.5704 97.2034 -7.04731 97.8863 -9.97309 c98.7587 -13.7257 103.4238 -15.8508 110.5463 -15.1453 c113.3657 -14.8666 117.0528 -13.9416 119.6178 -12.5044 C119.6178 -10.4639 l117.2899 -11.8789 113.4402 -13.0479 110.2332 -13.3514 CF*U0 D119.196 -1.66672 m117.8282 -1.66672 L117.8282 -7.88118 l117.8282 -8.60959 118.1735 -9.24286 119.196 -9.34407 c119.196 -1.66672 Lf102.9104 -3.93575 m101.5402 -3.93575 L101.5394 -7.99582 l101.5394 -8.72683 101.8856 -9.35941 102.9104 -9.45871 c102.9104 -3.93575 Lf101.5402 -3.17844 m102.9062 -3.17844 L102.9062 -1.85577 L101.5402 -1.85577 l101.5402 -3.17844 Lf111.1014 -9.39442 m109.9943 -9.39442 109.5259 -8.60952 109.5259 -7.83622 C109.5259 -2.44534 L110.8817 -2.44534 L110.8817 -3.93577 L111.9028 -3.93577 L111.9028 -5.05292 L110.8817 -5.05292 L110.8817 -7.7508 l110.8817 -8.06604 111.0285 -8.24178 111.3506 -8.24178 C111.9028 -8.24178 L111.9028 -9.39442 l111.1014 -9.39442 Lf*u1 D114.6983 -4.98717 m114.2342 -4.98717 113.8777 -5.23101 113.7266 -5.55996 c113.6385 -5.7577 113.6063 -5.91159 113.5963 -6.15458 C115.6858 -6.15458 l115.6593 -5.55996 115.395 -4.98717 114.6983 -4.98717 CF0 D113.5963 -7.0977 m113.5963 -7.8055 114.0302 -8.32576 114.7978 -8.32576 c115.3993 -8.32576 115.6959 -8.1554 116.043 -7.8055 C116.8809 -8.6197 l116.3439 -9.16109 115.781 -9.49021 114.7877 -9.49021 c113.4904 -9.49021 112.2471 -8.76771 112.2471 -6.66149 c112.2471 -4.86102 113.3335 -3.84318 114.7577 -3.84318 c116.2056 -3.84318 117.0376 -5.03466 117.0376 -6.59876 C117.0376 -7.0977 l113.5963 -7.0977 Lf*U106.5928 -5.05294 m106.9904 -5.05294 107.1557 -5.25348 107.1557 -5.57893 C107.1557 -9.40244 L108.5118 -9.40244 L108.5118 -5.57096 l108.5118 -4.79455 108.1063 -3.93719 106.9153 -3.93719 C104.1142 -3.93582 L104.1142 -9.40244 L105.4706 -9.40244 L105.4706 -5.05294 l106.5928 -5.05294 Lf*u1 D120.7771 -2.07892 m120.7771 -2.01186 120.7362 -1.9907 120.6489 -1.9907 C120.5859 -1.9907 L120.5622 -1.9907 L120.5622 -2.181 l120.5759 -2.181 120.6374 -2.18394 120.6489 -2.18394 c120.7362 -2.18394 120.7771 -2.15413 120.7771 -2.0907 c120.7771 -2.07892 Lf0 D120.9088 -2.55465 m120.8071 -2.55465 l120.7979 -2.55465 120.7899 -2.54894 120.7865 -2.54079 C120.6489 -2.3023 l120.6447 -2.29712 120.6332 -2.29139 120.6296 -2.29139 C120.5894 -2.29139 L120.5665 -2.29139 L120.5665 -2.52918 l120.5665 -2.54079 120.5587 -2.55465 120.5437 -2.55465 C120.452 -2.55465 l120.4383 -2.55465 120.4291 -2.54079 120.4291 -2.52918 C120.4291 -1.92935 l120.4291 -1.89434 120.4405 -1.87978 120.4705 -1.87547 c120.5035 -1.87181 120.5894 -1.86749 120.6374 -1.86749 c120.8071 -1.86749 120.9067 -1.91843 120.9067 -2.07892 C120.9067 -2.0907 l120.9067 -2.18984 120.8587 -2.24391 120.7844 -2.26799 C120.9275 -2.51669 l120.9296 -2.52033 120.9312 -2.52918 120.9312 -2.53419 c120.9312 -2.54373 120.926 -2.55465 120.9088 -2.55465 CF1 D120.6676 -1.75934 m120.419 -1.75934 120.2192 -1.96887 120.2192 -2.22189 c120.2192 -2.47648 120.419 -2.68236 120.6676 -2.68236 c120.9159 -2.68236 121.1223 -2.47648 121.1223 -2.22189 c121.1223 -1.96887 120.9159 -1.75934 120.6676 -1.75934 CF0 D120.6676 -2.77716 m120.366 -2.77716 120.1255 -2.52918 120.1255 -2.22189 c120.1255 -1.91619 120.366 -1.66679 120.6676 -1.66679 c120.9676 -1.66679 121.2138 -1.91619 121.2138 -2.22189 c121.2138 -2.52918 120.9676 -2.77716 120.6676 -2.77716 CF*UU1 Ap0.293034 0.231266 0.236057 0 0.713725 0.713725 0.713725 Xa90.6279 -18.0069 m90.0193 -18.0069 L90.0193 5.20786 L90.6279 5.20786 L90.6279 -18.0069 Lf/BBAccumRotation (0.000000) XTULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF